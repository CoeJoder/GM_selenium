{
"version":3,
"file":"GM_selenium_bin.js",
"lineCount":5,
"mappings":"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",
"sources":["/src/misc.js","/src/gmSelenium.js","/lib/selenium-webdriver/error.js","/lib/selenium-webdriver/webdriver.js","/lib/selenium-webdriver/promise.js"],
"sourcesContent":["/**\n * @fileoverview Miscellaneous utility functions.\n */\n\ngoog.module('misc');\n\n/**\n * Assign an object to a dict using the given key name.  \n * If the object is a function, its `name` property is changed along the way.\n * \n * Useful for (mostly) undoing GCC's aggressive renaming of top-level functions & classes,\n * as the export annotation cannot be used in those cases.\n * \n * @param {Object} dict The object being assigned to.\n * @param {string} name The key name.\n * @param {?} obj The object being assigned and possibly renamed.\n * @suppress {reportUnknownTypes}\n */\nfunction assignAs(dict, name, obj) {\n  dict[name] = (typeof obj === 'function') ? \n      Object.defineProperty(obj, 'name', { value: name }) :\n      obj;\n}\n\nexports = {\n  assignAs,\n};\n","/**\n * @fileoverview The core GM_selenium module.\n */\n\ngoog.module('GM_selenium');\n\nconst misc = goog.require('misc');\nconst { Condition, ElementCondition, ElementPromise, wait } = goog.require('webdriver');\nconst { TimeoutError, WebDriverError } = goog.require('webdriver.error');\n\n// non-clobbering global init\nconst GM_selenium = /** @type {Object<string, ?>} */ (window['GM_selenium']) || {};\nwindow['GM_selenium'] = GM_selenium;\n\nconst assignAs = misc.assignAs;\nassignAs(GM_selenium, 'Condition', Condition);\nassignAs(GM_selenium, 'ElementCondition', ElementCondition);\nassignAs(GM_selenium, 'ElementPromise', ElementPromise);\nassignAs(GM_selenium, 'wait', wait);\nassignAs(GM_selenium, 'TimeoutError', TimeoutError);\nassignAs(GM_selenium, 'WebDriverError', WebDriverError);\n\nexports = {\n  GM_selenium,\n};\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview WebDriver-related errors.\n * \n * This is a modified subset of the original:\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/error.html}\n */\n\ngoog.module(\"webdriver.error\");\n\n/**\n * The base WebDriver error type. This error type is only used directly when a\n * more appropriate category is not defined for the offending error.\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/error_exports_WebDriverError.html}\n */\nclass WebDriverError extends Error {\n  /** @param {string=} opt_error the error message, if any. */\n  constructor(opt_error) {\n    super(opt_error);\n\n    /** @override */\n    this.name = this.constructor.name;\n\n  }\n\n  // /** @override */\n  // toString() {\n  //   return `${this.name}: '${this.message}'`;\n  // }\n}\n\n/**\n * An operation did not complete before its timeout expired.\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/error_exports_TimeoutError.html}\n */\nclass TimeoutError extends WebDriverError {\n  /** @param {string=} opt_error the error message, if any. */\n  constructor(opt_error) {\n    super(opt_error);\n\n    // prevent display of setTimeout call chains\n    this.stack = '';\n  }\n}\n\nexports = { WebDriverError, TimeoutError };\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied. s See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview The heart of the WebDriver JavaScript API.\n * \n * This is a modified subset of the original:\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/webdriver.html}\n */\n\ngoog.module('webdriver');\n\nconst { TimeoutError } = goog.require('webdriver.error');\nconst { isPromise } = goog.require('webdriver.promise');\n\n/**\n * Defines a condition for use with {@link wait}.\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_Condition.html|webdriver.Condition}\n * @template T, V\n */\nclass Condition {\n  /**\n   * @param {string}          message A descriptive error message. Should complete the sentence \"Waiting [...]\".\n   * @param {function(!T): V} fn      The condition function to evaluate on each iteration of the wait loop.\n   */\n  constructor(message, fn) {\n    this.message = message;\n    this.fn = fn;\n  }\n\n  /**\n   * @return {string} A description of this condition.\n   */\n  description() {\n    return 'Waiting ' + this.message;\n  }\n}\n\n/**\n * Defines a condition that will result in an {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Element}.\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_WebElementCondition.html|webdriver.WebElementCondition}\n * @template T\n * @extends {Condition<T, Element>}\n */\nclass ElementCondition extends Condition {\n  /**\n   * @param {string} message A descriptive error message. Should complete the sentence \"Waiting [...]\".\n   * @param {function(!T): (Element|IThenable<Element>)} fn The condition function to\n   *      evaluate on each iteration of the wait loop.\n   */\n  constructor(message, fn) {\n    super(message, fn);\n  }\n}\n\n/**\n * A promise that will be fulfilled with an {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Element}.\n * @implements {IThenable<!Element>}\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_WebElementPromise.html|webdriver.WebElementPromise}\n */\nclass ElementPromise {\n  /**\n   * @param {!Promise<!Element>} el A promise that will resolve to the promised element.\n   */\n  constructor(el) {\n    /** @override */\n    this.then = el.then.bind(el);\n\n    this.catch = el.catch.bind(el);\n  }\n}\n\n/**\n * Resolves a wait message from either a function or a string.\n * @see {@link https://github.com/SeleniumHQ/selenium/blob/d912be8f325d3bed9758140b50599ee0619f1929/javascript/node/selenium-webdriver/lib/webdriver.js#L221|webdriver.resolveWaitMessage}\n *\n * @param {(string|function() : string)} [message] An optional message to use if the wait times out.\n * @return {string} The resolved message.\n */\nfunction resolveWaitMessage(message) {\n  return message ? `${typeof message === 'function' ? message() : message}\\n` : '';\n}\n\n/**\n * @description Waits for a condition to evaluate to a \"truthy\" value. The condition may be specified by a\n * {@link Condition}, as a custom function, or as any promise-like thenable.\n *\n * For a {@link Condition} or function, the wait will repeatedly evaluate the condition until it returns a truthy\n * value. If any errors occur while evaluating the condition, they will be allowed to propagate. In the event a\n * condition returns a Promise, the polling loop will wait for it to be resolved and use the resolved value for\n * whether the condition has been satisfied. The resolution time for a promise is always factored into whether a\n * wait has timed out.\n *\n * If the provided condition is an {@link ElementCondition}, then the wait will return a\n * {@link ElementPromise} that will resolve to the element that satisfied the condition.\n *\n * @example\n * (async ({wait, until, By}) => {\n *     await wait({\n *         condition: until.elementLocated(By.css('button')),\n *         input: document\n *     }).click();\n * })(webdriver);\n *\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_WebDriver.html#wait|webdriver.wait}\n * @see {@link https://www.selenium.dev/selenium/docs/api/java/org/openqa/selenium/support/ui/FluentWait.html|webdriver.FluentWait}\n * \n * Param object:\n * [param.condition]       The condition to wait on, defined as a promise, {@link Condition} object,\n *      or a function to evaluate as a condition.\n * [param.input]           The input value to pass to the evaluated conditions.\n * [param.timeout=0]       The duration in milliseconds, how long to wait for the condition to be true.\n * [param.pollTimeout=200] The duration in milliseconds, how long to wait between polling the condition.\n * [param.message]         An optional message to use if the wait times out.\n *\n * @template T\n * @template V\n * @param {{condition: (IThenable<V>|Condition<T, V>|function(T): V), input: (T|undefined), timeout: (number|undefined), pollTimeout: (number|undefined), message: (string|undefined|function(): string)}} obj\n * @return {!(IThenable<V>|ElementPromise)} A promise that will be resolved with the first truthy value returned\n *      by the condition function, or rejected if the condition times out. If the input input condition is an\n *      instance of an {@link ElementCondition}, the returned value will be an {@link ElementPromise}.\n * @throws {TypeError} if the provided `condition` is not a valid type.\n * @suppress {reportUnknownTypes} allow generic parameter\n */\n// function wait({ condition, input = undefined, timeout = 0, pollTimeout = 200, message = undefined }) {\nfunction wait(obj) {\n  // unfortunately, GCC generics & parameter destructuring support are incomplete, so this is necessary\n  // to prevent compiler renaming (at the cost of some type checking)\n  let condition = obj['condition'];\n  let input = obj['input'];\n  let timeout = obj['timeout'];\n  let pollTimeout = obj['pollTimeout'];\n  let message = obj['message'];\n\n  if (typeof timeout === 'undefined') {\n    timeout = 0;\n  }\n  else if (typeof timeout !== 'number' || timeout < 0) {\n    throw new TypeError('timeout must be a number >= 0: ' + timeout);\n  }\n\n  if (typeof pollTimeout === 'undefined') {\n    pollTimeout = 200;\n  }\n  else if (typeof pollTimeout !== 'number' || pollTimeout < 0) {\n    throw new TypeError('pollTimeout must be a number >= 0: ' + pollTimeout);\n  }\n\n  if (isPromise(condition)) {\n    let pCondition = /** @type {!Promise} */ (condition);\n    return new Promise((resolve, reject) => {\n      if (!timeout) {\n        resolve(pCondition);\n        return;\n      }\n      let start = Date.now();\n      let timer = setTimeout(function () {\n        timer = null;\n        try {\n          let timeoutMessage = resolveWaitMessage(message);\n          reject(\n            new TimeoutError(`${timeoutMessage}Timed out waiting for promise to resolve after ${Date.now() - start}ms`)\n          );\n        } catch (ex) {\n          reject(\n            new TimeoutError(`${ex.message}\\nTimed out waiting for promise to resolve after ${Date.now() - start}ms`)\n          );\n        }\n      }, timeout);\n      const clearTimer = () => timer && clearTimeout(timer);\n\n      pCondition.then(\n        function (value) {\n          clearTimer();\n          resolve(value);\n        },\n        function (error) {\n          clearTimer();\n          reject(error);\n        }\n      );\n    });\n  }\n\n  let fn;\n  if (condition instanceof Condition) {\n    message = message || condition.description();\n    fn = condition.fn;\n  } else if (typeof condition === 'function') {\n    fn = condition;\n  } else {\n    throw new TypeError('Wait condition must be a promise-like object, function, or a Condition object');\n  }\n\n  function evaluateCondition() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(fn(input));\n      } catch (ex) {\n        reject(ex);\n      }\n    });\n  }\n  let pResult = new Promise((resolve, reject) => {\n    const startTime = Date.now();\n    const pollCondition = async () => {\n      evaluateCondition().then(function (value) {\n        const elapsed = Date.now() - startTime;\n        if (value) {\n          resolve(value);\n        } else if (timeout && elapsed >= timeout) {\n          try {\n            let timeoutMessage = resolveWaitMessage(message);\n            reject(new TimeoutError(`${timeoutMessage}Wait timed out after ${elapsed}ms`));\n          } catch (ex) {\n            reject(new TimeoutError(`${ex.message}\\nWait timed out after ${elapsed}ms`));\n          }\n        } else {\n          setTimeout(pollCondition, pollTimeout);\n        }\n      }, reject);\n    };\n    pollCondition();\n  });\n  if (condition instanceof ElementCondition) {\n    return new ElementPromise(\n      pResult.then(function (value) {\n        if (!(value instanceof Element)) {\n          throw new TypeError(\n            'ElementCondition did not resolve to a Element: ' + Object.prototype.toString.call(value)\n          );\n        }\n        return value;\n      })\n    );\n  }\n  return pResult;\n}\n\nexports = {\n  wait,\n  Condition,\n  ElementCondition,\n  ElementPromise,\n};","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines a handful of utility functions to simplify working with promises.\n * \n * This is a modified subset of the original:\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/promise.html}\n */\n\ngoog.module(\"webdriver.promise\");\n\n/**\n * Determines whether a `value` should be treated as a promise.\n * Any object whose \"then\" property is a function will be considered a promise.\n *\n * @param {*} value The value to test.\n * @return {boolean} Whether the value is a promise.\n */\nfunction isPromise(value) {\n  return Object.prototype.toString.call(value) === '[object Promise]';\n}\n\n/**\n * Creates a promise that will be resolved at a set time in the future.\n * @param {number} ms The amount of time, in milliseconds, to wait before\n *     resolving the promise.\n * @return {!Promise<void>} The promise.\n */\nfunction delayed(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexports = {\n  isPromise,\n  delayed,\n};\n"],
"names":["assignAs","name","obj","module$exports$GM_selenium.GM_selenium","Object","defineProperty","value","module$exports$webdriver$error.WebDriverError","Error","constructor","opt_error","module$exports$webdriver$error.TimeoutError","stack","module$exports$webdriver.Condition","message","fn","module$exports$webdriver.ElementCondition","module$exports$webdriver.ElementPromise","el","then","bind","resolveWaitMessage","window","wait","evaluateCondition","Promise","resolve","reject","input","ex","condition","timeout","pollTimeout","TypeError","prototype","toString","call","start","Date","now","timer","setTimeout","timeoutMessage","clearTimer","clearTimeout","error","pResult","startTime","pollCondition","elapsed","Element"]
}
