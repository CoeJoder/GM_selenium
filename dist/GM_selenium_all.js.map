{
"version":3,
"file":"GM_selenium_all_bin.js",
"lineCount":119,
"mappings":"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",
"sources":["/external/com_google_javascript_closure_library/closure/goog/base.js","/external/selenium/third_party/js/wgxpath/wgxpath.js","/external/selenium/third_party/js/wgxpath/context.js","/external/com_google_javascript_closure_library/closure/goog/dom/nodetype.js","/external/com_google_javascript_closure_library/closure/goog/array/array.js","/external/com_google_javascript_closure_library/closure/goog/string/internal.js","/external/selenium/javascript/atoms/dom.js","/external/com_google_javascript_closure_library/closure/goog/labs/useragent/util.js","/external/com_google_javascript_closure_library/closure/goog/labs/useragent/browser.js","/external/com_google_javascript_closure_library/closure/goog/string/string.js","/external/com_google_javascript_closure_library/closure/goog/labs/useragent/platform.js","/external/com_google_javascript_closure_library/closure/goog/reflect/reflect.js","/external/com_google_javascript_closure_library/closure/goog/useragent/useragent.js","/external/com_google_javascript_closure_library/closure/goog/labs/useragent/engine.js","/external/selenium/third_party/js/wgxpath/userAgent.js","/external/selenium/third_party/js/wgxpath/ieAttrWrapper.js","/external/selenium/third_party/js/wgxpath/lexer.js","/external/com_google_javascript_closure_library/closure/goog/math/coordinate.js","/external/com_google_javascript_closure_library/closure/goog/math/size.js","/external/com_google_javascript_closure_library/closure/goog/dom/dom.js","/external/selenium/third_party/js/wgxpath/node.js","/external/selenium/third_party/js/wgxpath/kindTest.js","/external/selenium/third_party/js/wgxpath/nodeset.js","/external/selenium/third_party/js/wgxpath/expr.js","/external/selenium/third_party/js/wgxpath/binaryExpr.js","/external/selenium/third_party/js/wgxpath/dataType.js","/external/selenium/third_party/js/wgxpath/filterExpr.js","/external/selenium/third_party/js/wgxpath/predicates.js","/external/selenium/third_party/js/wgxpath/functionCall.js","/external/selenium/third_party/js/wgxpath/literal.js","/external/selenium/third_party/js/wgxpath/nameTest.js","/external/selenium/third_party/js/wgxpath/number.js","/external/selenium/third_party/js/wgxpath/pathExpr.js","/external/selenium/third_party/js/wgxpath/step.js","/external/selenium/third_party/js/wgxpath/unaryExpr.js","/external/selenium/third_party/js/wgxpath/unionExpr.js","/external/selenium/third_party/js/wgxpath/parser.js","/external/selenium/third_party/js/wgxpath/nsResolver.js","/external/selenium/third_party/js/wgxpath/export.js","/src/misc.js","/src/gmSelenium.js","/external/com_google_javascript_closure_library/closure/goog/color/names.js","/external/selenium/javascript/atoms/color.js","/external/selenium/javascript/atoms/error.js","/external/com_google_javascript_closure_library/closure/goog/useragent/product.js","/external/com_google_javascript_closure_library/closure/goog/useragent/product_isversion.js","/external/selenium/javascript/atoms/userAgent.js","/external/selenium/javascript/atoms/domcore.js","/external/selenium/javascript/atoms/locators/xpath.js","/external/com_google_javascript_closure_library/closure/goog/math/box.js","/external/com_google_javascript_closure_library/closure/goog/math/rect.js","/external/com_google_javascript_closure_library/closure/goog/style/style.js","/external/selenium/javascript/atoms/locators/css.js","/external/selenium/javascript/atoms/locators/id.js","/external/selenium/javascript/atoms/locators/link_text.js","/external/selenium/javascript/atoms/locators/name.js","/lib/selenium-webdriver/until/by.js","/external/selenium/javascript/atoms/locators/tag_name.js","/external/selenium/javascript/atoms/locators/classname.js","/lib/selenium-webdriver/error.js","/lib/selenium-webdriver/webdriver.js","/lib/selenium-webdriver/until/until.js","/lib/selenium-webdriver/promise.js","/src/gmSeleniumAll.js"],
"sourcesContent":["// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Bootstrap for the Google JS Library (Closure).\n *\n * In uncompiled mode base.js will attempt to load Closure's deps file, unless\n * the global <code>CLOSURE_NO_DEPS</code> is set to true.  This allows projects\n * to include their own deps file(s) from different locations.\n *\n * Avoid including base.js more than once. This is strictly discouraged and not\n * supported. goog.require(...) won't work properly in that case.\n *\n * @provideGoog\n */\n\n\n/**\n * @define {boolean} Overridden to true by the compiler.\n */\nvar COMPILED = false;\n\n\n/**\n * Base namespace for the Closure library.  Checks to see goog is already\n * defined in the current scope before assigning to prevent clobbering if\n * base.js is loaded more than once.\n *\n * @const\n */\nvar goog = goog || {};\n\n/**\n * Reference to the global object.\n * https://www.ecma-international.org/ecma-262/9.0/index.html#sec-global-object\n *\n * More info on this implementation here:\n * https://docs.google.com/document/d/1NAeW4Wk7I7FV0Y2tcUFvQdGMc89k2vdgSXInw8_nvCI/edit\n *\n * @const\n * @suppress {undefinedVars} self won't be referenced unless `this` is falsy.\n * @type {!Global}\n */\ngoog.global =\n    // Check `this` first for backwards compatibility.\n    // Valid unless running as an ES module or in a function wrapper called\n    //   without setting `this` properly.\n    // Note that base.js can't usefully be imported as an ES module, but it may\n    // be compiled into bundles that are loadable as ES modules.\n    this ||\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n    // For in-page browser environments and workers.\n    self;\n\n\n/**\n * A hook for overriding the define values in uncompiled mode.\n *\n * In uncompiled mode, `CLOSURE_UNCOMPILED_DEFINES` may be defined before\n * loading base.js.  If a key is defined in `CLOSURE_UNCOMPILED_DEFINES`,\n * `goog.define` will use the value instead of the default value.  This\n * allows flags to be overwritten without compilation (this is normally\n * accomplished with the compiler's \"define\" flag).\n *\n * Example:\n * <pre>\n *   var CLOSURE_UNCOMPILED_DEFINES = {'goog.DEBUG': false};\n * </pre>\n *\n * @type {Object<string, (string|number|boolean)>|undefined}\n */\ngoog.global.CLOSURE_UNCOMPILED_DEFINES;\n\n\n/**\n * A hook for overriding the define values in uncompiled or compiled mode,\n * like CLOSURE_UNCOMPILED_DEFINES but effective in compiled code.  In\n * uncompiled code CLOSURE_UNCOMPILED_DEFINES takes precedence.\n *\n * Also unlike CLOSURE_UNCOMPILED_DEFINES the values must be number, boolean or\n * string literals or the compiler will emit an error.\n *\n * While any @define value may be set, only those set with goog.define will be\n * effective for uncompiled code.\n *\n * Example:\n * <pre>\n *   var CLOSURE_DEFINES = {'goog.DEBUG': false} ;\n * </pre>\n *\n * @type {Object<string, (string|number|boolean)>|undefined}\n */\ngoog.global.CLOSURE_DEFINES;\n\n\n/**\n * Returns true if the specified value is not undefined.\n *\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is defined.\n * @deprecated Use `val !== undefined` instead.\n */\ngoog.isDef = function(val) {\n  // void 0 always evaluates to undefined and hence we do not need to depend on\n  // the definition of the global variable named 'undefined'.\n  return val !== void 0;\n};\n\n/**\n * Returns true if the specified value is a string.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a string.\n * @deprecated Use `typeof val === 'string'` instead.\n */\ngoog.isString = function(val) {\n  return typeof val == 'string';\n};\n\n\n/**\n * Returns true if the specified value is a boolean.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is boolean.\n * @deprecated Use `typeof val === 'boolean'` instead.\n */\ngoog.isBoolean = function(val) {\n  return typeof val == 'boolean';\n};\n\n\n/**\n * Returns true if the specified value is a number.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a number.\n * @deprecated Use `typeof val === 'number'` instead.\n */\ngoog.isNumber = function(val) {\n  return typeof val == 'number';\n};\n\n\n/**\n * Builds an object structure for the provided namespace path, ensuring that\n * names that already exist are not overwritten. For example:\n * \"a.b.c\" -> a = {};a.b={};a.b.c={};\n * Used by goog.provide and goog.exportSymbol.\n * @param {string} name name of the object that this file defines.\n * @param {*=} opt_object the object to expose at the end of the path.\n * @param {Object=} opt_objectToExportTo The object to add the path to; default\n *     is `goog.global`.\n * @private\n */\ngoog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {\n  var parts = name.split('.');\n  var cur = opt_objectToExportTo || goog.global;\n\n  // Internet Explorer exhibits strange behavior when throwing errors from\n  // methods externed in this manner.  See the testExportSymbolExceptions in\n  // base_test.html for an example.\n  if (!(parts[0] in cur) && typeof cur.execScript != 'undefined') {\n    cur.execScript('var ' + parts[0]);\n  }\n\n  for (var part; parts.length && (part = parts.shift());) {\n    if (!parts.length && opt_object !== undefined) {\n      // last part and we have an object; use it\n      cur[part] = opt_object;\n    } else if (cur[part] && cur[part] !== Object.prototype[part]) {\n      cur = cur[part];\n    } else {\n      cur = cur[part] = {};\n    }\n  }\n};\n\n\n/**\n * Defines a named value. In uncompiled mode, the value is retrieved from\n * CLOSURE_DEFINES or CLOSURE_UNCOMPILED_DEFINES if the object is defined and\n * has the property specified, and otherwise used the defined defaultValue.\n * When compiled the default can be overridden using the compiler options or the\n * value set in the CLOSURE_DEFINES object. Returns the defined value so that it\n * can be used safely in modules. Note that the value type MUST be either\n * boolean, number, or string.\n *\n * @param {string} name The distinguished name to provide.\n * @param {T} defaultValue\n * @return {T} The defined value.\n * @template T\n */\ngoog.define = function(name, defaultValue) {\n  var value = defaultValue;\n  if (!COMPILED) {\n    var uncompiledDefines = goog.global.CLOSURE_UNCOMPILED_DEFINES;\n    var defines = goog.global.CLOSURE_DEFINES;\n    if (uncompiledDefines &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        /** @type {?} */ (uncompiledDefines).nodeType === undefined &&\n        Object.prototype.hasOwnProperty.call(uncompiledDefines, name)) {\n      value = uncompiledDefines[name];\n    } else if (\n        defines &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        /** @type {?} */ (defines).nodeType === undefined &&\n        Object.prototype.hasOwnProperty.call(defines, name)) {\n      value = defines[name];\n    }\n  }\n  return value;\n};\n\n\n/**\n * @define {number} Integer year indicating the set of browser features that are\n * guaranteed to be present.  This is defined to include exactly features that\n * work correctly on all \"modern\" browsers that are stable on January 1 of the\n * specified year.  For example,\n * ```js\n * if (goog.FEATURESET_YEAR >= 2019) {\n *   // use APIs known to be available on all major stable browsers Jan 1, 2019\n * } else {\n *   // polyfill for older browsers\n * }\n * ```\n * This is intended to be the primary define for removing\n * unnecessary browser compatibility code (such as ponyfills and workarounds),\n * and should inform the default value for most other defines:\n * ```js\n * const ASSUME_NATIVE_PROMISE =\n *     goog.define('ASSUME_NATIVE_PROMISE', goog.FEATURESET_YEAR >= 2016);\n * ```\n *\n * The default assumption is that IE9 is the lowest supported browser, which was\n * first available Jan 1, 2012.\n *\n * TODO(user): Reference more thorough documentation when it's available.\n */\ngoog.FEATURESET_YEAR = goog.define('goog.FEATURESET_YEAR', 2012);\n\n\n/**\n * @define {boolean} DEBUG is provided as a convenience so that debugging code\n * that should not be included in a production. It can be easily stripped\n * by specifying --define goog.DEBUG=false to the Closure Compiler aka\n * JSCompiler. For example, most toString() methods should be declared inside an\n * \"if (goog.DEBUG)\" conditional because they are generally used for debugging\n * purposes and it is difficult for the JSCompiler to statically determine\n * whether they are used.\n */\ngoog.DEBUG = goog.define('goog.DEBUG', true);\n\n\n/**\n * @define {string} LOCALE defines the locale being used for compilation. It is\n * used to select locale specific data to be compiled in js binary. BUILD rule\n * can specify this value by \"--define goog.LOCALE=<locale_name>\" as a compiler\n * option.\n *\n * Take into account that the locale code format is important. You should use\n * the canonical Unicode format with hyphen as a delimiter. Language must be\n * lowercase, Language Script - Capitalized, Region - UPPERCASE.\n * There are few examples: pt-BR, en, en-US, sr-Latin-BO, zh-Hans-CN.\n *\n * See more info about locale codes here:\n * http://www.unicode.org/reports/tr35/#Unicode_Language_and_Locale_Identifiers\n *\n * For language codes you should use values defined by ISO 693-1. See it here\n * http://www.w3.org/WAI/ER/IG/ert/iso639.htm. There is only one exception from\n * this rule: the Hebrew language. For legacy reasons the old code (iw) should\n * be used instead of the new code (he).\n *\n */\ngoog.LOCALE = goog.define('goog.LOCALE', 'en');  // default to en\n\n\n/**\n * @define {boolean} Whether this code is running on trusted sites.\n *\n * On untrusted sites, several native functions can be defined or overridden by\n * external libraries like Prototype, Datejs, and JQuery and setting this flag\n * to false forces closure to use its own implementations when possible.\n *\n * If your JavaScript can be loaded by a third party site and you are wary about\n * relying on non-standard implementations, specify\n * \"--define goog.TRUSTED_SITE=false\" to the compiler.\n */\ngoog.TRUSTED_SITE = goog.define('goog.TRUSTED_SITE', true);\n\n\n/**\n * @define {boolean} Whether a project is expected to be running in strict mode.\n *\n * This define can be used to trigger alternate implementations compatible with\n * running in EcmaScript Strict mode or warn about unavailable functionality.\n * @see https://goo.gl/PudQ4y\n *\n */\ngoog.STRICT_MODE_COMPATIBLE = goog.define('goog.STRICT_MODE_COMPATIBLE', false);\n\n\n/**\n * @define {boolean} Whether code that calls {@link goog.setTestOnly} should\n *     be disallowed in the compilation unit.\n */\ngoog.DISALLOW_TEST_ONLY_CODE =\n    goog.define('goog.DISALLOW_TEST_ONLY_CODE', COMPILED && !goog.DEBUG);\n\n\n/**\n * @define {boolean} Whether to use a Chrome app CSP-compliant method for\n *     loading scripts via goog.require. @see appendScriptSrcNode_.\n */\ngoog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING =\n    goog.define('goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING', false);\n\n\n/**\n * Defines a namespace in Closure.\n *\n * A namespace may only be defined once in a codebase. It may be defined using\n * goog.provide() or goog.module().\n *\n * The presence of one or more goog.provide() calls in a file indicates\n * that the file defines the given objects/namespaces.\n * Provided symbols must not be null or undefined.\n *\n * In addition, goog.provide() creates the object stubs for a namespace\n * (for example, goog.provide(\"goog.foo.bar\") will create the object\n * goog.foo.bar if it does not already exist).\n *\n * Build tools also scan for provide/require/module statements\n * to discern dependencies, build dependency files (see deps.js), etc.\n *\n * @see goog.require\n * @see goog.module\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n */\ngoog.provide = function(name) {\n  if (goog.isInModuleLoader_()) {\n    throw new Error('goog.provide cannot be used within a module.');\n  }\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice.\n    // A goog.module/goog.provide maps a goog.require to a specific file\n    if (goog.isProvided_(name)) {\n      throw new Error('Namespace \"' + name + '\" already declared.');\n    }\n  }\n\n  goog.constructNamespace_(name);\n};\n\n\n/**\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n * @param {Object=} opt_obj The object to embed in the namespace.\n * @private\n */\ngoog.constructNamespace_ = function(name, opt_obj) {\n  if (!COMPILED) {\n    delete goog.implicitNamespaces_[name];\n\n    var namespace = name;\n    while ((namespace = namespace.substring(0, namespace.lastIndexOf('.')))) {\n      if (goog.getObjectByName(namespace)) {\n        break;\n      }\n      goog.implicitNamespaces_[namespace] = true;\n    }\n  }\n\n  goog.exportPath_(name, opt_obj);\n};\n\n\n/**\n * Returns CSP nonce, if set for any script tag.\n * @param {?Window=} opt_window The window context used to retrieve the nonce.\n *     Defaults to global context.\n * @return {string} CSP nonce or empty string if no nonce is present.\n */\ngoog.getScriptNonce = function(opt_window) {\n  if (opt_window && opt_window != goog.global) {\n    return goog.getScriptNonce_(opt_window.document);\n  }\n  if (goog.cspNonce_ === null) {\n    goog.cspNonce_ = goog.getScriptNonce_(goog.global.document);\n  }\n  return goog.cspNonce_;\n};\n\n\n/**\n * According to the CSP3 spec a nonce must be a valid base64 string.\n * @see https://www.w3.org/TR/CSP3/#grammardef-base64-value\n * @private @const\n */\ngoog.NONCE_PATTERN_ = /^[\\w+/_-]+[=]{0,2}$/;\n\n\n/**\n * @private {?string}\n */\ngoog.cspNonce_ = null;\n\n\n/**\n * Returns CSP nonce, if set for any script tag.\n * @param {!Document} doc\n * @return {string} CSP nonce or empty string if no nonce is present.\n * @private\n */\ngoog.getScriptNonce_ = function(doc) {\n  var script = doc.querySelector && doc.querySelector('script[nonce]');\n  if (script) {\n    // Try to get the nonce from the IDL property first, because browsers that\n    // implement additional nonce protection features (currently only Chrome) to\n    // prevent nonce stealing via CSS do not expose the nonce via attributes.\n    // See https://github.com/whatwg/html/issues/2369\n    var nonce = script['nonce'] || script.getAttribute('nonce');\n    if (nonce && goog.NONCE_PATTERN_.test(nonce)) {\n      return nonce;\n    }\n  }\n  return '';\n};\n\n\n/**\n * Module identifier validation regexp.\n * Note: This is a conservative check, it is very possible to be more lenient,\n *   the primary exclusion here is \"/\" and \"\\\" and a leading \".\", these\n *   restrictions are intended to leave the door open for using goog.require\n *   with relative file paths rather than module identifiers.\n * @private\n */\ngoog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\n\n\n/**\n * Defines a module in Closure.\n *\n * Marks that this file must be loaded as a module and claims the namespace.\n *\n * A namespace may only be defined once in a codebase. It may be defined using\n * goog.provide() or goog.module().\n *\n * goog.module() has three requirements:\n * - goog.module may not be used in the same file as goog.provide.\n * - goog.module must be the first statement in the file.\n * - only one goog.module is allowed per file.\n *\n * When a goog.module annotated file is loaded, it is enclosed in\n * a strict function closure. This means that:\n * - any variables declared in a goog.module file are private to the file\n * (not global), though the compiler is expected to inline the module.\n * - The code must obey all the rules of \"strict\" JavaScript.\n * - the file will be marked as \"use strict\"\n *\n * NOTE: unlike goog.provide, goog.module does not declare any symbols by\n * itself. If declared symbols are desired, use\n * goog.module.declareLegacyNamespace().\n *\n *\n * See the public goog.module proposal: http://goo.gl/Va1hin\n *\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\", is expected but not required.\n * @return {void}\n */\ngoog.module = function(name) {\n  if (typeof name !== 'string' || !name ||\n      name.search(goog.VALID_MODULE_RE_) == -1) {\n    throw new Error('Invalid module identifier');\n  }\n  if (!goog.isInGoogModuleLoader_()) {\n    throw new Error(\n        'Module ' + name + ' has been loaded incorrectly. Note, ' +\n        'modules cannot be loaded as normal scripts. They require some kind of ' +\n        'pre-processing step. You\\'re likely trying to load a module via a ' +\n        'script tag or as a part of a concatenated bundle without rewriting the ' +\n        'module. For more info see: ' +\n        'https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.');\n  }\n  if (goog.moduleLoaderState_.moduleName) {\n    throw new Error('goog.module may only be called once per module.');\n  }\n\n  // Store the module name for the loader.\n  goog.moduleLoaderState_.moduleName = name;\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice.\n    // A goog.module/goog.provide maps a goog.require to a specific file\n    if (goog.isProvided_(name)) {\n      throw new Error('Namespace \"' + name + '\" already declared.');\n    }\n    delete goog.implicitNamespaces_[name];\n  }\n};\n\n\n/**\n * @param {string} name The module identifier.\n * @return {?} The module exports for an already loaded module or null.\n *\n * Note: This is not an alternative to goog.require, it does not\n * indicate a hard dependency, instead it is used to indicate\n * an optional dependency or to access the exports of a module\n * that has already been loaded.\n * @suppress {missingProvide}\n */\ngoog.module.get = function(name) {\n  return goog.module.getInternal_(name);\n};\n\n\n/**\n * @param {string} name The module identifier.\n * @return {?} The module exports for an already loaded module or null.\n * @private\n */\ngoog.module.getInternal_ = function(name) {\n  if (!COMPILED) {\n    if (name in goog.loadedModules_) {\n      return goog.loadedModules_[name].exports;\n    } else if (!goog.implicitNamespaces_[name]) {\n      var ns = goog.getObjectByName(name);\n      return ns != null ? ns : null;\n    }\n  }\n  return null;\n};\n\n\n/**\n * Types of modules the debug loader can load.\n * @enum {string}\n */\ngoog.ModuleType = {\n  ES6: 'es6',\n  GOOG: 'goog'\n};\n\n\n/**\n * @private {?{\n *   moduleName: (string|undefined),\n *   declareLegacyNamespace:boolean,\n *   type: ?goog.ModuleType\n * }}\n */\ngoog.moduleLoaderState_ = null;\n\n\n/**\n * @private\n * @return {boolean} Whether a goog.module or an es6 module is currently being\n *     initialized.\n */\ngoog.isInModuleLoader_ = function() {\n  return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();\n};\n\n\n/**\n * @private\n * @return {boolean} Whether a goog.module is currently being initialized.\n */\ngoog.isInGoogModuleLoader_ = function() {\n  return !!goog.moduleLoaderState_ &&\n      goog.moduleLoaderState_.type == goog.ModuleType.GOOG;\n};\n\n\n/**\n * @private\n * @return {boolean} Whether an es6 module is currently being initialized.\n */\ngoog.isInEs6ModuleLoader_ = function() {\n  var inLoader = !!goog.moduleLoaderState_ &&\n      goog.moduleLoaderState_.type == goog.ModuleType.ES6;\n\n  if (inLoader) {\n    return true;\n  }\n\n  var jscomp = goog.global['$jscomp'];\n\n  if (jscomp) {\n    // jscomp may not have getCurrentModulePath if this is a compiled bundle\n    // that has some of the runtime, but not all of it. This can happen if\n    // optimizations are turned on so the unused runtime is removed but renaming\n    // and Closure pass are off (so $jscomp is still named $jscomp and the\n    // goog.provide/require calls still exist).\n    if (typeof jscomp.getCurrentModulePath != 'function') {\n      return false;\n    }\n\n    // Bundled ES6 module.\n    return !!jscomp.getCurrentModulePath();\n  }\n\n  return false;\n};\n\n\n/**\n * Provide the module's exports as a globally accessible object under the\n * module's declared name.  This is intended to ease migration to goog.module\n * for files that have existing usages.\n * @suppress {missingProvide}\n */\ngoog.module.declareLegacyNamespace = function() {\n  if (!COMPILED && !goog.isInGoogModuleLoader_()) {\n    throw new Error(\n        'goog.module.declareLegacyNamespace must be called from ' +\n        'within a goog.module');\n  }\n  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {\n    throw new Error(\n        'goog.module must be called prior to ' +\n        'goog.module.declareLegacyNamespace.');\n  }\n  goog.moduleLoaderState_.declareLegacyNamespace = true;\n};\n\n\n/**\n * Associates an ES6 module with a Closure module ID so that is available via\n * goog.require. The associated ID  acts like a goog.module ID - it does not\n * create any global names, it is merely available via goog.require /\n * goog.module.get / goog.forwardDeclare / goog.requireType. goog.require and\n * goog.module.get will return the entire module as if it was import *'d. This\n * allows Closure files to reference ES6 modules for the sake of migration.\n *\n * @param {string} namespace\n * @suppress {missingProvide}\n */\ngoog.declareModuleId = function(namespace) {\n  if (!COMPILED) {\n    if (!goog.isInEs6ModuleLoader_()) {\n      throw new Error(\n          'goog.declareModuleId may only be called from ' +\n          'within an ES6 module');\n    }\n    if (goog.moduleLoaderState_ && goog.moduleLoaderState_.moduleName) {\n      throw new Error(\n          'goog.declareModuleId may only be called once per module.');\n    }\n    if (namespace in goog.loadedModules_) {\n      throw new Error(\n          'Module with namespace \"' + namespace + '\" already exists.');\n    }\n  }\n  if (goog.moduleLoaderState_) {\n    // Not bundled - debug loading.\n    goog.moduleLoaderState_.moduleName = namespace;\n  } else {\n    // Bundled - not debug loading, no module loader state.\n    var jscomp = goog.global['$jscomp'];\n    if (!jscomp || typeof jscomp.getCurrentModulePath != 'function') {\n      throw new Error(\n          'Module with namespace \"' + namespace +\n          '\" has been loaded incorrectly.');\n    }\n    var exports = jscomp.require(jscomp.getCurrentModulePath());\n    goog.loadedModules_[namespace] = {\n      exports: exports,\n      type: goog.ModuleType.ES6,\n      moduleId: namespace\n    };\n  }\n};\n\n\n/**\n * Marks that the current file should only be used for testing, and never for\n * live code in production.\n *\n * In the case of unit tests, the message may optionally be an exact namespace\n * for the test (e.g. 'goog.stringTest'). The linter will then ignore the extra\n * provide (if not explicitly defined in the code).\n *\n * @param {string=} opt_message Optional message to add to the error that's\n *     raised when used in production code.\n */\ngoog.setTestOnly = function(opt_message) {\n  if (goog.DISALLOW_TEST_ONLY_CODE) {\n    opt_message = opt_message || '';\n    throw new Error(\n        'Importing test-only code into non-debug environment' +\n        (opt_message ? ': ' + opt_message : '.'));\n  }\n};\n\n\n/**\n * Forward declares a symbol. This is an indication to the compiler that the\n * symbol may be used in the source yet is not required and may not be provided\n * in compilation.\n *\n * The most common usage of forward declaration is code that takes a type as a\n * function parameter but does not need to require it. By forward declaring\n * instead of requiring, no hard dependency is made, and (if not required\n * elsewhere) the namespace may never be required and thus, not be pulled\n * into the JavaScript binary. If it is required elsewhere, it will be type\n * checked as normal.\n *\n * Before using goog.forwardDeclare, please read the documentation at\n * https://github.com/google/closure-compiler/wiki/Bad-Type-Annotation to\n * understand the options and tradeoffs when working with forward declarations.\n *\n * @param {string} name The namespace to forward declare in the form of\n *     \"goog.package.part\".\n */\ngoog.forwardDeclare = function(name) {};\n\n\n/**\n * Forward declare type information. Used to assign types to goog.global\n * referenced object that would otherwise result in unknown type references\n * and thus block property disambiguation.\n */\ngoog.forwardDeclare('Document');\ngoog.forwardDeclare('HTMLScriptElement');\ngoog.forwardDeclare('XMLHttpRequest');\n\n\nif (!COMPILED) {\n  /**\n   * Check if the given name has been goog.provided. This will return false for\n   * names that are available only as implicit namespaces.\n   * @param {string} name name of the object to look for.\n   * @return {boolean} Whether the name has been provided.\n   * @private\n   */\n  goog.isProvided_ = function(name) {\n    return (name in goog.loadedModules_) ||\n        (!goog.implicitNamespaces_[name] && goog.getObjectByName(name) != null);\n  };\n\n  /**\n   * Namespaces implicitly defined by goog.provide. For example,\n   * goog.provide('goog.events.Event') implicitly declares that 'goog' and\n   * 'goog.events' must be namespaces.\n   *\n   * @type {!Object<string, (boolean|undefined)>}\n   * @private\n   */\n  goog.implicitNamespaces_ = {'goog.module': true};\n\n  // NOTE: We add goog.module as an implicit namespace as goog.module is defined\n  // here and because the existing module package has not been moved yet out of\n  // the goog.module namespace. This satisifies both the debug loader and\n  // ahead-of-time dependency management.\n}\n\n\n/**\n * Returns an object based on its fully qualified external name.  The object\n * is not found if null or undefined.  If you are using a compilation pass that\n * renames property names beware that using this function will not find renamed\n * properties.\n *\n * @param {string} name The fully qualified name.\n * @param {Object=} opt_obj The object within which to look; default is\n *     |goog.global|.\n * @return {?} The value (object or primitive) or, if not found, null.\n */\ngoog.getObjectByName = function(name, opt_obj) {\n  var parts = name.split('.');\n  var cur = opt_obj || goog.global;\n  for (var i = 0; i < parts.length; i++) {\n    cur = cur[parts[i]];\n    if (cur == null) {\n      return null;\n    }\n  }\n  return cur;\n};\n\n\n/**\n * Globalizes a whole namespace, such as goog or goog.lang.\n *\n * @param {!Object} obj The namespace to globalize.\n * @param {Object=} opt_global The object to add the properties to.\n * @deprecated Properties may be explicitly exported to the global scope, but\n *     this should no longer be done in bulk.\n */\ngoog.globalize = function(obj, opt_global) {\n  var global = opt_global || goog.global;\n  for (var x in obj) {\n    global[x] = obj[x];\n  }\n};\n\n\n/**\n * Adds a dependency from a file to the files it requires.\n * @param {string} relPath The path to the js file.\n * @param {!Array<string>} provides An array of strings with\n *     the names of the objects this file provides.\n * @param {!Array<string>} requires An array of strings with\n *     the names of the objects this file requires.\n * @param {boolean|!Object<string>=} opt_loadFlags Parameters indicating\n *     how the file must be loaded.  The boolean 'true' is equivalent\n *     to {'module': 'goog'} for backwards-compatibility.  Valid properties\n *     and values include {'module': 'goog'} and {'lang': 'es6'}.\n */\ngoog.addDependency = function(relPath, provides, requires, opt_loadFlags) {\n  if (!COMPILED && goog.DEPENDENCIES_ENABLED) {\n    goog.debugLoader_.addDependency(relPath, provides, requires, opt_loadFlags);\n  }\n};\n\n\n\n\n// NOTE(nnaze): The debug DOM loader was included in base.js as an original way\n// to do \"debug-mode\" development.  The dependency system can sometimes be\n// confusing, as can the debug DOM loader's asynchronous nature.\n//\n// With the DOM loader, a call to goog.require() is not blocking -- the script\n// will not load until some point after the current script.  If a namespace is\n// needed at runtime, it needs to be defined in a previous script, or loaded via\n// require() with its registered dependencies.\n//\n// User-defined namespaces may need their own deps file. For a reference on\n// creating a deps file, see:\n// Externally: https://developers.google.com/closure/library/docs/depswriter\n//\n// Because of legacy clients, the DOM loader can't be easily removed from\n// base.js.  Work was done to make it disableable or replaceable for\n// different environments (DOM-less JavaScript interpreters like Rhino or V8,\n// for example). See bootstrap/ for more information.\n\n\n/**\n * @define {boolean} Whether to enable the debug loader.\n *\n * If enabled, a call to goog.require() will attempt to load the namespace by\n * appending a script tag to the DOM (if the namespace has been registered).\n *\n * If disabled, goog.require() will simply assert that the namespace has been\n * provided (and depend on the fact that some outside tool correctly ordered\n * the script).\n */\ngoog.ENABLE_DEBUG_LOADER = goog.define('goog.ENABLE_DEBUG_LOADER', true);\n\n\n/**\n * @param {string} msg\n * @private\n */\ngoog.logToConsole_ = function(msg) {\n  if (goog.global.console) {\n    goog.global.console['error'](msg);\n  }\n};\n\n\n/**\n * Implements a system for the dynamic resolution of dependencies that works in\n * parallel with the BUILD system.\n *\n * Note that all calls to goog.require will be stripped by the compiler.\n *\n * @see goog.provide\n * @param {string} namespace Namespace (as was given in goog.provide,\n *     goog.module, or goog.declareModuleId) in the form\n *     \"goog.package.part\".\n * @return {?} If called within a goog.module or ES6 module file, the associated\n *     namespace or module otherwise null.\n */\ngoog.require = function(namespace) {\n  if (!COMPILED) {\n    // Might need to lazy load on old IE.\n    if (goog.ENABLE_DEBUG_LOADER) {\n      goog.debugLoader_.requested(namespace);\n    }\n\n    // If the object already exists we do not need to do anything.\n    if (goog.isProvided_(namespace)) {\n      if (goog.isInModuleLoader_()) {\n        return goog.module.getInternal_(namespace);\n      }\n    } else if (goog.ENABLE_DEBUG_LOADER) {\n      var moduleLoaderState = goog.moduleLoaderState_;\n      goog.moduleLoaderState_ = null;\n      try {\n        goog.debugLoader_.load_(namespace);\n      } finally {\n        goog.moduleLoaderState_ = moduleLoaderState;\n      }\n    }\n\n    return null;\n  }\n};\n\n\n/**\n * Requires a symbol for its type information. This is an indication to the\n * compiler that the symbol may appear in type annotations, yet it is not\n * referenced at runtime.\n *\n * When called within a goog.module or ES6 module file, the return value may be\n * assigned to or destructured into a variable, but it may not be otherwise used\n * in code outside of a type annotation.\n *\n * Note that all calls to goog.requireType will be stripped by the compiler.\n *\n * @param {string} namespace Namespace (as was given in goog.provide,\n *     goog.module, or goog.declareModuleId) in the form\n *     \"goog.package.part\".\n * @return {?}\n */\ngoog.requireType = function(namespace) {\n  // Return an empty object so that single-level destructuring of the return\n  // value doesn't crash at runtime when using the debug loader. Multi-level\n  // destructuring isn't supported.\n  return {};\n};\n\n\n/**\n * Path for included scripts.\n * @type {string}\n */\ngoog.basePath = '';\n\n\n/**\n * A hook for overriding the base path.\n * @type {string|undefined}\n */\ngoog.global.CLOSURE_BASE_PATH;\n\n\n/**\n * Whether to attempt to load Closure's deps file. By default, when uncompiled,\n * deps files will attempt to be loaded.\n * @type {boolean|undefined}\n */\ngoog.global.CLOSURE_NO_DEPS;\n\n\n/**\n * A function to import a single script. This is meant to be overridden when\n * Closure is being run in non-HTML contexts, such as web workers. It's defined\n * in the global scope so that it can be set before base.js is loaded, which\n * allows deps.js to be imported properly.\n *\n * The first parameter the script source, which is a relative URI. The second,\n * optional parameter is the script contents, in the event the script needed\n * transformation. It should return true if the script was imported, false\n * otherwise.\n * @type {(function(string, string=): boolean)|undefined}\n */\ngoog.global.CLOSURE_IMPORT_SCRIPT;\n\n\n/**\n * Null function used for default values of callbacks, etc.\n * @return {void} Nothing.\n */\ngoog.nullFunction = function() {};\n\n\n/**\n * When defining a class Foo with an abstract method bar(), you can do:\n * Foo.prototype.bar = goog.abstractMethod\n *\n * Now if a subclass of Foo fails to override bar(), an error will be thrown\n * when bar() is invoked.\n *\n * @type {!Function}\n * @throws {Error} when invoked to indicate the method should be overridden.\n * @deprecated Use \"@abstract\" annotation instead of goog.abstractMethod in new\n *     code. See\n *     https://github.com/google/closure-compiler/wiki/@abstract-classes-and-methods\n */\ngoog.abstractMethod = function() {\n  throw new Error('unimplemented abstract method');\n};\n\n\n/**\n * Adds a `getInstance` static method that always returns the same\n * instance object.\n * @param {!Function} ctor The constructor for the class to add the static\n *     method to.\n * @suppress {missingProperties} 'instance_' isn't a property on 'Function'\n *     but we don't have a better type to use here.\n */\ngoog.addSingletonGetter = function(ctor) {\n  // instance_ is immediately set to prevent issues with sealed constructors\n  // such as are encountered when a constructor is returned as the export object\n  // of a goog.module in unoptimized code.\n  // Delcare type to avoid conformance violations that ctor.instance_ is unknown\n  /** @type {undefined|!Object} @suppress {underscore} */\n  ctor.instance_ = undefined;\n  ctor.getInstance = function() {\n    if (ctor.instance_) {\n      return ctor.instance_;\n    }\n    if (goog.DEBUG) {\n      // NOTE: JSCompiler can't optimize away Array#push.\n      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;\n    }\n    // Cast to avoid conformance violations that ctor.instance_ is unknown\n    return /** @type {!Object|undefined} */ (ctor.instance_) = new ctor;\n  };\n};\n\n\n/**\n * All singleton classes that have been instantiated, for testing. Don't read\n * it directly, use the `goog.testing.singleton` module. The compiler\n * removes this variable if unused.\n * @type {!Array<!Function>}\n * @private\n */\ngoog.instantiatedSingletons_ = [];\n\n\n/**\n * @define {boolean} Whether to load goog.modules using `eval` when using\n * the debug loader.  This provides a better debugging experience as the\n * source is unmodified and can be edited using Chrome Workspaces or similar.\n * However in some environments the use of `eval` is banned\n * so we provide an alternative.\n */\ngoog.LOAD_MODULE_USING_EVAL = goog.define('goog.LOAD_MODULE_USING_EVAL', true);\n\n\n/**\n * @define {boolean} Whether the exports of goog.modules should be sealed when\n * possible.\n */\ngoog.SEAL_MODULE_EXPORTS = goog.define('goog.SEAL_MODULE_EXPORTS', goog.DEBUG);\n\n\n/**\n * The registry of initialized modules:\n * The module identifier or path to module exports map.\n * @private @const {!Object<string, {exports:?,type:string,moduleId:string}>}\n */\ngoog.loadedModules_ = {};\n\n\n/**\n * True if the debug loader enabled and used.\n * @const {boolean}\n */\ngoog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;\n\n\n/**\n * @define {string} How to decide whether to transpile.  Valid values\n * are 'always', 'never', and 'detect'.  The default ('detect') is to\n * use feature detection to determine which language levels need\n * transpilation.\n */\n// NOTE(sdh): we could expand this to accept a language level to bypass\n// detection: e.g. goog.TRANSPILE == 'es5' would transpile ES6 files but\n// would leave ES3 and ES5 files alone.\ngoog.TRANSPILE = goog.define('goog.TRANSPILE', 'detect');\n\n/**\n * @define {boolean} If true assume that ES modules have already been\n * transpiled by the jscompiler (in the same way that transpile.js would\n * transpile them - to jscomp modules). Useful only for servers that wish to use\n * the debug loader and transpile server side. Thus this is only respected if\n * goog.TRANSPILE is \"never\".\n */\ngoog.ASSUME_ES_MODULES_TRANSPILED =\n    goog.define('goog.ASSUME_ES_MODULES_TRANSPILED', false);\n\n\n/**\n * @define {string} If a file needs to be transpiled what the output language\n * should be. By default this is the highest language level this file detects\n * the current environment supports. Generally this flag should not be set, but\n * it could be useful to override. Example: If the current environment supports\n * ES6 then by default ES7+ files will be transpiled to ES6, unless this is\n * overridden.\n *\n * Valid values include: es3, es5, es6, es7, and es8. Anything not recognized\n * is treated as es3.\n *\n * Note that setting this value does not force transpilation. Just if\n * transpilation occurs this will be the output. So this is most useful when\n * goog.TRANSPILE is set to 'always' and then forcing the language level to be\n * something lower than what the environment detects.\n */\ngoog.TRANSPILE_TO_LANGUAGE = goog.define('goog.TRANSPILE_TO_LANGUAGE', '');\n\n\n/**\n * @define {string} Path to the transpiler.  Executing the script at this\n * path (relative to base.js) should define a function $jscomp.transpile.\n */\ngoog.TRANSPILER = goog.define('goog.TRANSPILER', 'transpile.js');\n\n\n/**\n * @package {?boolean}\n * Visible for testing.\n */\ngoog.hasBadLetScoping = null;\n\n\n/**\n * @return {boolean}\n * @package Visible for testing.\n */\ngoog.useSafari10Workaround = function() {\n  if (goog.hasBadLetScoping == null) {\n    var hasBadLetScoping;\n    try {\n      hasBadLetScoping = !eval(\n          '\"use strict\";' +\n          'let x = 1; function f() { return typeof x; };' +\n          'f() == \"number\";');\n    } catch (e) {\n      // Assume that ES6 syntax isn't supported.\n      hasBadLetScoping = false;\n    }\n    goog.hasBadLetScoping = hasBadLetScoping;\n  }\n  return goog.hasBadLetScoping;\n};\n\n\n/**\n * @param {string} moduleDef\n * @return {string}\n * @package Visible for testing.\n */\ngoog.workaroundSafari10EvalBug = function(moduleDef) {\n  return '(function(){' + moduleDef +\n      '\\n' +  // Terminate any trailing single line comment.\n      ';' +   // Terminate any trailing expression.\n      '})();\\n';\n};\n\n\n/**\n * @param {function(?):?|string} moduleDef The module definition.\n */\ngoog.loadModule = function(moduleDef) {\n  // NOTE: we allow function definitions to be either in the from\n  // of a string to eval (which keeps the original source intact) or\n  // in a eval forbidden environment (CSP) we allow a function definition\n  // which in its body must call `goog.module`, and return the exports\n  // of the module.\n  var previousState = goog.moduleLoaderState_;\n  try {\n    goog.moduleLoaderState_ = {\n      moduleName: '',\n      declareLegacyNamespace: false,\n      type: goog.ModuleType.GOOG\n    };\n    var exports;\n    if (goog.isFunction(moduleDef)) {\n      exports = moduleDef.call(undefined, {});\n    } else if (typeof moduleDef === 'string') {\n      if (goog.useSafari10Workaround()) {\n        moduleDef = goog.workaroundSafari10EvalBug(moduleDef);\n      }\n\n      exports = goog.loadModuleFromSource_.call(undefined, moduleDef);\n    } else {\n      throw new Error('Invalid module definition');\n    }\n\n    var moduleName = goog.moduleLoaderState_.moduleName;\n    if (typeof moduleName === 'string' && moduleName) {\n      // Don't seal legacy namespaces as they may be used as a parent of\n      // another namespace\n      if (goog.moduleLoaderState_.declareLegacyNamespace) {\n        goog.constructNamespace_(moduleName, exports);\n      } else if (\n          goog.SEAL_MODULE_EXPORTS && Object.seal &&\n          typeof exports == 'object' && exports != null) {\n        Object.seal(exports);\n      }\n\n      var data = {\n        exports: exports,\n        type: goog.ModuleType.GOOG,\n        moduleId: goog.moduleLoaderState_.moduleName\n      };\n      goog.loadedModules_[moduleName] = data;\n    } else {\n      throw new Error('Invalid module name \\\"' + moduleName + '\\\"');\n    }\n  } finally {\n    goog.moduleLoaderState_ = previousState;\n  }\n};\n\n\n/**\n * @private @const\n */\ngoog.loadModuleFromSource_ = /** @type {function(string):?} */ (function() {\n  // NOTE: we avoid declaring parameters or local variables here to avoid\n  // masking globals or leaking values into the module definition.\n  'use strict';\n  var exports = {};\n  eval(arguments[0]);\n  return exports;\n});\n\n\n/**\n * Normalize a file path by removing redundant \"..\" and extraneous \".\" file\n * path components.\n * @param {string} path\n * @return {string}\n * @private\n */\ngoog.normalizePath_ = function(path) {\n  var components = path.split('/');\n  var i = 0;\n  while (i < components.length) {\n    if (components[i] == '.') {\n      components.splice(i, 1);\n    } else if (\n        i && components[i] == '..' && components[i - 1] &&\n        components[i - 1] != '..') {\n      components.splice(--i, 2);\n    } else {\n      i++;\n    }\n  }\n  return components.join('/');\n};\n\n\n/**\n * Provides a hook for loading a file when using Closure's goog.require() API\n * with goog.modules.  In particular this hook is provided to support Node.js.\n *\n * @type {(function(string):string)|undefined}\n */\ngoog.global.CLOSURE_LOAD_FILE_SYNC;\n\n\n/**\n * Loads file by synchronous XHR. Should not be used in production environments.\n * @param {string} src Source URL.\n * @return {?string} File contents, or null if load failed.\n * @private\n */\ngoog.loadFileSync_ = function(src) {\n  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {\n    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);\n  } else {\n    try {\n      /** @type {XMLHttpRequest} */\n      var xhr = new goog.global['XMLHttpRequest']();\n      xhr.open('get', src, false);\n      xhr.send();\n      // NOTE: Successful http: requests have a status of 200, but successful\n      // file: requests may have a status of zero.  Any other status, or a\n      // thrown exception (particularly in case of file: requests) indicates\n      // some sort of error, which we treat as a missing or unavailable file.\n      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;\n    } catch (err) {\n      // No need to rethrow or log, since errors should show up on their own.\n      return null;\n    }\n  }\n};\n\n\n/**\n * Lazily retrieves the transpiler and applies it to the source.\n * @param {string} code JS code.\n * @param {string} path Path to the code.\n * @param {string} target Language level output.\n * @return {string} The transpiled code.\n * @private\n */\ngoog.transpile_ = function(code, path, target) {\n  var jscomp = goog.global['$jscomp'];\n  if (!jscomp) {\n    goog.global['$jscomp'] = jscomp = {};\n  }\n  var transpile = jscomp.transpile;\n  if (!transpile) {\n    var transpilerPath = goog.basePath + goog.TRANSPILER;\n    var transpilerCode = goog.loadFileSync_(transpilerPath);\n    if (transpilerCode) {\n      // This must be executed synchronously, since by the time we know we\n      // need it, we're about to load and write the ES6 code synchronously,\n      // so a normal script-tag load will be too slow. Wrapped in a function\n      // so that code is eval'd in the global scope.\n      (function() {\n        (0, eval)(transpilerCode + '\\n//# sourceURL=' + transpilerPath);\n      }).call(goog.global);\n      // Even though the transpiler is optional, if $gwtExport is found, it's\n      // a sign the transpiler was loaded and the $jscomp.transpile *should*\n      // be there.\n      if (goog.global['$gwtExport'] && goog.global['$gwtExport']['$jscomp'] &&\n          !goog.global['$gwtExport']['$jscomp']['transpile']) {\n        throw new Error(\n            'The transpiler did not properly export the \"transpile\" ' +\n            'method. $gwtExport: ' + JSON.stringify(goog.global['$gwtExport']));\n      }\n      // transpile.js only exports a single $jscomp function, transpile. We\n      // grab just that and add it to the existing definition of $jscomp which\n      // contains the polyfills.\n      goog.global['$jscomp'].transpile =\n          goog.global['$gwtExport']['$jscomp']['transpile'];\n      jscomp = goog.global['$jscomp'];\n      transpile = jscomp.transpile;\n    }\n  }\n  if (!transpile) {\n    // The transpiler is an optional component.  If it's not available then\n    // replace it with a pass-through function that simply logs.\n    var suffix = ' requires transpilation but no transpiler was found.';\n    transpile = jscomp.transpile = function(code, path) {\n      // TODO(sdh): figure out some way to get this error to show up\n      // in test results, noting that the failure may occur in many\n      // different ways, including in loadModule() before the test\n      // runner even comes up.\n      goog.logToConsole_(path + suffix);\n      return code;\n    };\n  }\n  // Note: any transpilation errors/warnings will be logged to the console.\n  return transpile(code, path, target);\n};\n\n//==============================================================================\n// Language Enhancements\n//==============================================================================\n\n\n/**\n * This is a \"fixed\" version of the typeof operator.  It differs from the typeof\n * operator in such a way that null returns 'null' and arrays return 'array'.\n * @param {?} value The value to get the type of.\n * @return {string} The name of the type.\n */\ngoog.typeOf = function(value) {\n  var s = typeof value;\n  if (s == 'object') {\n    if (value) {\n      // Check these first, so we can avoid calling Object.prototype.toString if\n      // possible.\n      //\n      // IE improperly marshals typeof across execution contexts, but a\n      // cross-context object will still return false for \"instanceof Object\".\n      if (value instanceof Array) {\n        return 'array';\n      } else if (value instanceof Object) {\n        return s;\n      }\n\n      // HACK: In order to use an Object prototype method on the arbitrary\n      //   value, the compiler requires the value be cast to type Object,\n      //   even though the ECMA spec explicitly allows it.\n      var className = Object.prototype.toString.call(\n          /** @type {!Object} */ (value));\n      // In Firefox 3.6, attempting to access iframe window objects' length\n      // property throws an NS_ERROR_FAILURE, so we need to special-case it\n      // here.\n      if (className == '[object Window]') {\n        return 'object';\n      }\n\n      // We cannot always use constructor == Array or instanceof Array because\n      // different frames have different Array objects. In IE6, if the iframe\n      // where the array was created is destroyed, the array loses its\n      // prototype. Then dereferencing val.splice here throws an exception, so\n      // we can't use goog.isFunction. Calling typeof directly returns 'unknown'\n      // so that will work. In this case, this function will return false and\n      // most array functions will still work because the array is still\n      // array-like (supports length and []) even though it has lost its\n      // prototype.\n      // Mark Miller noticed that Object.prototype.toString\n      // allows access to the unforgeable [[Class]] property.\n      //  15.2.4.2 Object.prototype.toString ( )\n      //  When the toString method is called, the following steps are taken:\n      //      1. Get the [[Class]] property of this object.\n      //      2. Compute a string value by concatenating the three strings\n      //         \"[object \", Result(1), and \"]\".\n      //      3. Return Result(2).\n      // and this behavior survives the destruction of the execution context.\n      if ((className == '[object Array]' ||\n           // In IE all non value types are wrapped as objects across window\n           // boundaries (not iframe though) so we have to do object detection\n           // for this edge case.\n           typeof value.length == 'number' &&\n               typeof value.splice != 'undefined' &&\n               typeof value.propertyIsEnumerable != 'undefined' &&\n               !value.propertyIsEnumerable('splice')\n\n               )) {\n        return 'array';\n      }\n      // HACK: There is still an array case that fails.\n      //     function ArrayImpostor() {}\n      //     ArrayImpostor.prototype = [];\n      //     var impostor = new ArrayImpostor;\n      // this can be fixed by getting rid of the fast path\n      // (value instanceof Array) and solely relying on\n      // (value && Object.prototype.toString.vall(value) === '[object Array]')\n      // but that would require many more function calls and is not warranted\n      // unless closure code is receiving objects from untrusted sources.\n\n      // IE in cross-window calls does not correctly marshal the function type\n      // (it appears just as an object) so we cannot use just typeof val ==\n      // 'function'. However, if the object has a call property, it is a\n      // function.\n      if ((className == '[object Function]' ||\n           typeof value.call != 'undefined' &&\n               typeof value.propertyIsEnumerable != 'undefined' &&\n               !value.propertyIsEnumerable('call'))) {\n        return 'function';\n      }\n\n    } else {\n      return 'null';\n    }\n\n  } else if (s == 'function' && typeof value.call == 'undefined') {\n    // In Safari typeof nodeList returns 'function', and on Firefox typeof\n    // behaves similarly for HTML{Applet,Embed,Object}, Elements and RegExps. We\n    // would like to return object for those and we can detect an invalid\n    // function by making sure that the function object has a call method.\n    return 'object';\n  }\n  return s;\n};\n\n\n/**\n * Returns true if the specified value is null.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is null.\n * @deprecated Use `val === null` instead.\n */\ngoog.isNull = function(val) {\n  return val === null;\n};\n\n\n/**\n * Returns true if the specified value is defined and not null.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is defined and not null.\n * @deprecated Use `val != null` instead.\n */\ngoog.isDefAndNotNull = function(val) {\n  // Note that undefined == null.\n  return val != null;\n};\n\n\n/**\n * Returns true if the specified value is an array.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\ngoog.isArray = function(val) {\n  return goog.typeOf(val) == 'array';\n};\n\n\n/**\n * Returns true if the object looks like an array. To qualify as array like\n * the value needs to be either a NodeList or an object with a Number length\n * property. Note that for this function neither strings nor functions are\n * considered \"array-like\".\n *\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\ngoog.isArrayLike = function(val) {\n  var type = goog.typeOf(val);\n  // We do not use goog.isObject here in order to exclude function values.\n  return type == 'array' || type == 'object' && typeof val.length == 'number';\n};\n\n\n/**\n * Returns true if the object looks like a Date. To qualify as Date-like the\n * value needs to be an object and have a getFullYear() function.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a like a Date.\n */\ngoog.isDateLike = function(val) {\n  return goog.isObject(val) && typeof val.getFullYear == 'function';\n};\n\n\n/**\n * Returns true if the specified value is a function.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a function.\n */\ngoog.isFunction = function(val) {\n  return goog.typeOf(val) == 'function';\n};\n\n\n/**\n * Returns true if the specified value is an object.  This includes arrays and\n * functions.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an object.\n */\ngoog.isObject = function(val) {\n  var type = typeof val;\n  return type == 'object' && val != null || type == 'function';\n  // return Object(val) === val also works, but is slower, especially if val is\n  // not an object.\n};\n\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. The unique ID is\n * guaranteed to be unique across the current session amongst objects that are\n * passed into `getUid`. There is no guarantee that the ID is unique or\n * consistent across sessions. It is unsafe to generate unique ID for function\n * prototypes.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\ngoog.getUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n\n  // In Opera window.hasOwnProperty exists but always returns false so we avoid\n  // using it. As a consequence the unique ID generated for BaseClass.prototype\n  // and SubClass.prototype will be the same.\n  // TODO(b/141512323): UUIDs are broken for ctors with class-side inheritance.\n  return obj[goog.UID_PROPERTY_] ||\n      (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);\n};\n\n\n/**\n * Whether the given object is already assigned a unique ID.\n *\n * This does not modify the object.\n *\n * @param {!Object} obj The object to check.\n * @return {boolean} Whether there is an assigned unique id for the object.\n */\ngoog.hasUid = function(obj) {\n  return !!obj[goog.UID_PROPERTY_];\n};\n\n\n/**\n * Removes the unique ID from an object. This is useful if the object was\n * previously mutated using `goog.getUid` in which case the mutation is\n * undone.\n * @param {Object} obj The object to remove the unique ID field from.\n */\ngoog.removeUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n\n  // In IE, DOM nodes are not instances of Object and throw an exception if we\n  // try to delete.  Instead we try to use removeAttribute.\n  if (obj !== null && 'removeAttribute' in obj) {\n    obj.removeAttribute(goog.UID_PROPERTY_);\n  }\n\n  try {\n    delete obj[goog.UID_PROPERTY_];\n  } catch (ex) {\n  }\n};\n\n\n/**\n * Name for unique ID property. Initialized in a way to help avoid collisions\n * with other closure JavaScript on the same page.\n * @type {string}\n * @private\n */\ngoog.UID_PROPERTY_ = 'closure_uid_' + ((Math.random() * 1e9) >>> 0);\n\n\n/**\n * Counter for UID.\n * @type {number}\n * @private\n */\ngoog.uidCounter_ = 0;\n\n\n/**\n * Adds a hash code field to an object. The hash code is unique for the\n * given object.\n * @param {Object} obj The object to get the hash code for.\n * @return {number} The hash code for the object.\n * @deprecated Use goog.getUid instead.\n */\ngoog.getHashCode = goog.getUid;\n\n\n/**\n * Removes the hash code field from an object.\n * @param {Object} obj The object to remove the field from.\n * @deprecated Use goog.removeUid instead.\n */\ngoog.removeHashCode = goog.removeUid;\n\n\n/**\n * Clones a value. The input may be an Object, Array, or basic type. Objects and\n * arrays will be cloned recursively.\n *\n * WARNINGS:\n * <code>goog.cloneObject</code> does not detect reference loops. Objects that\n * refer to themselves will cause infinite recursion.\n *\n * <code>goog.cloneObject</code> is unaware of unique identifiers, and copies\n * UIDs created by <code>getUid</code> into cloned results.\n *\n * @param {*} obj The value to clone.\n * @return {*} A clone of the input value.\n * @deprecated goog.cloneObject is unsafe. Prefer the goog.object methods.\n */\ngoog.cloneObject = function(obj) {\n  var type = goog.typeOf(obj);\n  if (type == 'object' || type == 'array') {\n    if (typeof obj.clone === 'function') {\n      return obj.clone();\n    }\n    var clone = type == 'array' ? [] : {};\n    for (var key in obj) {\n      clone[key] = goog.cloneObject(obj[key]);\n    }\n    return clone;\n  }\n\n  return obj;\n};\n\n\n/**\n * A native implementation of goog.bind.\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @private\n */\ngoog.bindNative_ = function(fn, selfObj, var_args) {\n  return /** @type {!Function} */ (fn.call.apply(fn.bind, arguments));\n};\n\n\n/**\n * A pure-JS implementation of goog.bind.\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @private\n */\ngoog.bindJs_ = function(fn, selfObj, var_args) {\n  if (!fn) {\n    throw new Error();\n  }\n\n  if (arguments.length > 2) {\n    var boundArgs = Array.prototype.slice.call(arguments, 2);\n    return function() {\n      // Prepend the bound arguments to the current arguments.\n      var newArgs = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(newArgs, boundArgs);\n      return fn.apply(selfObj, newArgs);\n    };\n\n  } else {\n    return function() {\n      return fn.apply(selfObj, arguments);\n    };\n  }\n};\n\n\n/**\n * Partially applies this function to a particular 'this object' and zero or\n * more arguments. The result is a new function with some arguments of the first\n * function pre-filled and the value of this 'pre-specified'.\n *\n * Remaining arguments specified at call-time are appended to the pre-specified\n * ones.\n *\n * Also see: {@link #partial}.\n *\n * Usage:\n * <pre>var barMethBound = goog.bind(myFunction, myObj, 'arg1', 'arg2');\n * barMethBound('arg3', 'arg4');</pre>\n *\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @suppress {deprecated} See above.\n */\ngoog.bind = function(fn, selfObj, var_args) {\n  // TODO(nicksantos): narrow the type signature.\n  if (Function.prototype.bind &&\n      // NOTE(nicksantos): Somebody pulled base.js into the default Chrome\n      // extension environment. This means that for Chrome extensions, they get\n      // the implementation of Function.prototype.bind that calls goog.bind\n      // instead of the native one. Even worse, we don't want to introduce a\n      // circular dependency between goog.bind and Function.prototype.bind, so\n      // we have to hack this to make sure it works correctly.\n      Function.prototype.bind.toString().indexOf('native code') != -1) {\n    goog.bind = goog.bindNative_;\n  } else {\n    goog.bind = goog.bindJs_;\n  }\n  return goog.bind.apply(null, arguments);\n};\n\n\n/**\n * Like goog.bind(), except that a 'this object' is not required. Useful when\n * the target function is already bound.\n *\n * Usage:\n * var g = goog.partial(f, arg1, arg2);\n * g(arg3, arg4);\n *\n * @param {Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially applied to fn.\n * @return {!Function} A partially-applied form of the function goog.partial()\n *     was invoked as a method of.\n */\ngoog.partial = function(fn, var_args) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    // Clone the array (with slice()) and append additional arguments\n    // to the existing arguments.\n    var newArgs = args.slice();\n    newArgs.push.apply(newArgs, arguments);\n    return fn.apply(/** @type {?} */ (this), newArgs);\n  };\n};\n\n\n/**\n * Copies all the members of a source object to a target object. This method\n * does not work on all browsers for all objects that contain keys such as\n * toString or hasOwnProperty. Use goog.object.extend for this purpose.\n *\n * NOTE: Some have advocated for the use of goog.mixin to setup classes\n * with multiple inheritence (traits, mixins, etc).  However, as it simply\n * uses \"for in\", this is not compatible with ES6 classes whose methods are\n * non-enumerable.  Changing this, would break cases where non-enumerable\n * properties are not expected.\n *\n * @param {Object} target Target.\n * @param {Object} source Source.\n * @deprecated Prefer Object.assign\n */\ngoog.mixin = function(target, source) {\n  for (var x in source) {\n    target[x] = source[x];\n  }\n\n  // For IE7 or lower, the for-in-loop does not contain any properties that are\n  // not enumerable on the prototype object (for example, isPrototypeOf from\n  // Object.prototype) but also it will not include 'replace' on objects that\n  // extend String and change 'replace' (not that it is common for anyone to\n  // extend anything except Object).\n};\n\n\n/**\n * @return {number} An integer value representing the number of milliseconds\n *     between midnight, January 1, 1970 and the current time.\n * @deprecated Use Date.now\n */\ngoog.now = (goog.TRUSTED_SITE && Date.now) || (function() {\n             // Unary plus operator converts its operand to a number which in\n             // the case of\n             // a date is done by calling getTime().\n             return +new Date();\n           });\n\n\n/**\n * Evals JavaScript in the global scope.  In IE this uses execScript, other\n * browsers use goog.global.eval. If goog.global.eval does not evaluate in the\n * global scope (for example, in Safari), appends a script tag instead.\n * Throws an exception if neither execScript or eval is defined.\n * @param {string} script JavaScript string.\n */\ngoog.globalEval = function(script) {\n  if (goog.global.execScript) {\n    goog.global.execScript(script, 'JavaScript');\n  } else if (goog.global.eval) {\n    // Test to see if eval works\n    if (goog.evalWorksForGlobals_ == null) {\n      try {\n        goog.global.eval('var _evalTest_ = 1;');\n      } catch (ignore) {\n      }\n      if (typeof goog.global['_evalTest_'] != 'undefined') {\n        try {\n          delete goog.global['_evalTest_'];\n        } catch (ignore) {\n          // Microsoft edge fails the deletion above in strict mode.\n        }\n        goog.evalWorksForGlobals_ = true;\n      } else {\n        goog.evalWorksForGlobals_ = false;\n      }\n    }\n\n    if (goog.evalWorksForGlobals_) {\n      goog.global.eval(script);\n    } else {\n      /** @type {!Document} */\n      var doc = goog.global.document;\n      var scriptElt =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('script'));\n      scriptElt.type = 'text/javascript';\n      scriptElt.defer = false;\n      // Note(user): can't use .innerHTML since \"t('<test>')\" will fail and\n      // .text doesn't work in Safari 2.  Therefore we append a text node.\n      scriptElt.appendChild(doc.createTextNode(script));\n      doc.head.appendChild(scriptElt);\n      doc.head.removeChild(scriptElt);\n    }\n  } else {\n    throw new Error('goog.globalEval not available');\n  }\n};\n\n\n/**\n * Indicates whether or not we can call 'eval' directly to eval code in the\n * global scope. Set to a Boolean by the first call to goog.globalEval (which\n * empirically tests whether eval works for globals). @see goog.globalEval\n * @type {?boolean}\n * @private\n */\ngoog.evalWorksForGlobals_ = null;\n\n\n/**\n * Optional map of CSS class names to obfuscated names used with\n * goog.getCssName().\n * @private {!Object<string, string>|undefined}\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMapping_;\n\n\n/**\n * Optional obfuscation style for CSS class names. Should be set to either\n * 'BY_WHOLE' or 'BY_PART' if defined.\n * @type {string|undefined}\n * @private\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMappingStyle_;\n\n\n\n/**\n * A hook for modifying the default behavior goog.getCssName. The function\n * if present, will receive the standard output of the goog.getCssName as\n * its input.\n *\n * @type {(function(string):string)|undefined}\n */\ngoog.global.CLOSURE_CSS_NAME_MAP_FN;\n\n\n/**\n * Handles strings that are intended to be used as CSS class names.\n *\n * This function works in tandem with @see goog.setCssNameMapping.\n *\n * Without any mapping set, the arguments are simple joined with a hyphen and\n * passed through unaltered.\n *\n * When there is a mapping, there are two possible styles in which these\n * mappings are used. In the BY_PART style, each part (i.e. in between hyphens)\n * of the passed in css name is rewritten according to the map. In the BY_WHOLE\n * style, the full css name is looked up in the map directly. If a rewrite is\n * not specified by the map, the compiler will output a warning.\n *\n * When the mapping is passed to the compiler, it will replace calls to\n * goog.getCssName with the strings from the mapping, e.g.\n *     var x = goog.getCssName('foo');\n *     var y = goog.getCssName(this.baseClass, 'active');\n *  becomes:\n *     var x = 'foo';\n *     var y = this.baseClass + '-active';\n *\n * If one argument is passed it will be processed, if two are passed only the\n * modifier will be processed, as it is assumed the first argument was generated\n * as a result of calling goog.getCssName.\n *\n * @param {string} className The class name.\n * @param {string=} opt_modifier A modifier to be appended to the class name.\n * @return {string} The class name or the concatenation of the class name and\n *     the modifier.\n */\ngoog.getCssName = function(className, opt_modifier) {\n  // String() is used for compatibility with compiled soy where the passed\n  // className can be non-string objects.\n  if (String(className).charAt(0) == '.') {\n    throw new Error(\n        'className passed in goog.getCssName must not start with \".\".' +\n        ' You passed: ' + className);\n  }\n\n  var getMapping = function(cssName) {\n    return goog.cssNameMapping_[cssName] || cssName;\n  };\n\n  var renameByParts = function(cssName) {\n    // Remap all the parts individually.\n    var parts = cssName.split('-');\n    var mapped = [];\n    for (var i = 0; i < parts.length; i++) {\n      mapped.push(getMapping(parts[i]));\n    }\n    return mapped.join('-');\n  };\n\n  var rename;\n  if (goog.cssNameMapping_) {\n    rename =\n        goog.cssNameMappingStyle_ == 'BY_WHOLE' ? getMapping : renameByParts;\n  } else {\n    rename = function(a) {\n      return a;\n    };\n  }\n\n  var result =\n      opt_modifier ? className + '-' + rename(opt_modifier) : rename(className);\n\n  // The special CLOSURE_CSS_NAME_MAP_FN allows users to specify further\n  // processing of the class name.\n  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {\n    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);\n  }\n\n  return result;\n};\n\n\n/**\n * Sets the map to check when returning a value from goog.getCssName(). Example:\n * <pre>\n * goog.setCssNameMapping({\n *   \"goog\": \"a\",\n *   \"disabled\": \"b\",\n * });\n *\n * var x = goog.getCssName('goog');\n * // The following evaluates to: \"a a-b\".\n * goog.getCssName('goog') + ' ' + goog.getCssName(x, 'disabled')\n * </pre>\n * When declared as a map of string literals to string literals, the JSCompiler\n * will replace all calls to goog.getCssName() using the supplied map if the\n * --process_closure_primitives flag is set.\n *\n * @param {!Object} mapping A map of strings to strings where keys are possible\n *     arguments to goog.getCssName() and values are the corresponding values\n *     that should be returned.\n * @param {string=} opt_style The style of css name mapping. There are two valid\n *     options: 'BY_PART', and 'BY_WHOLE'.\n * @see goog.getCssName for a description.\n */\ngoog.setCssNameMapping = function(mapping, opt_style) {\n  goog.cssNameMapping_ = mapping;\n  goog.cssNameMappingStyle_ = opt_style;\n};\n\n\n/**\n * To use CSS renaming in compiled mode, one of the input files should have a\n * call to goog.setCssNameMapping() with an object literal that the JSCompiler\n * can extract and use to replace all calls to goog.getCssName(). In uncompiled\n * mode, JavaScript code should be loaded before this base.js file that declares\n * a global variable, CLOSURE_CSS_NAME_MAPPING, which is used below. This is\n * to ensure that the mapping is loaded before any calls to goog.getCssName()\n * are made in uncompiled mode.\n *\n * A hook for overriding the CSS name mapping.\n * @type {!Object<string, string>|undefined}\n */\ngoog.global.CLOSURE_CSS_NAME_MAPPING;\n\n\nif (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {\n  // This does not call goog.setCssNameMapping() because the JSCompiler\n  // requires that goog.setCssNameMapping() be called with an object literal.\n  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;\n}\n\n\n/**\n * Gets a localized message.\n *\n * This function is a compiler primitive. If you give the compiler a localized\n * message bundle, it will replace the string at compile-time with a localized\n * version, and expand goog.getMsg call to a concatenated string.\n *\n * Messages must be initialized in the form:\n * <code>\n * var MSG_NAME = goog.getMsg('Hello {$placeholder}', {'placeholder': 'world'});\n * </code>\n *\n * This function produces a string which should be treated as plain text. Use\n * {@link goog.html.SafeHtmlFormatter} in conjunction with goog.getMsg to\n * produce SafeHtml.\n *\n * @param {string} str Translatable string, places holders in the form {$foo}.\n * @param {Object<string, string>=} opt_values Maps place holder name to value.\n * @param {{html: boolean}=} opt_options Options:\n *     html: Escape '<' in str to '&lt;'. Used by Closure Templates where the\n *     generated code size and performance is critical which is why {@link\n *     goog.html.SafeHtmlFormatter} is not used. The value must be literal true\n *     or false.\n * @return {string} message with placeholders filled.\n */\ngoog.getMsg = function(str, opt_values, opt_options) {\n  if (opt_options && opt_options.html) {\n    // Note that '&' is not replaced because the translation can contain HTML\n    // entities.\n    str = str.replace(/</g, '&lt;');\n  }\n  if (opt_values) {\n    str = str.replace(/\\{\\$([^}]+)}/g, function(match, key) {\n      return (opt_values != null && key in opt_values) ? opt_values[key] :\n                                                         match;\n    });\n  }\n  return str;\n};\n\n\n/**\n * Gets a localized message. If the message does not have a translation, gives a\n * fallback message.\n *\n * This is useful when introducing a new message that has not yet been\n * translated into all languages.\n *\n * This function is a compiler primitive. Must be used in the form:\n * <code>var x = goog.getMsgWithFallback(MSG_A, MSG_B);</code>\n * where MSG_A and MSG_B were initialized with goog.getMsg.\n *\n * @param {string} a The preferred message.\n * @param {string} b The fallback message.\n * @return {string} The best translated message.\n */\ngoog.getMsgWithFallback = function(a, b) {\n  return a;\n};\n\n\n/**\n * Exposes an unobfuscated global namespace path for the given object.\n * Note that fields of the exported object *will* be obfuscated, unless they are\n * exported in turn via this function or goog.exportProperty.\n *\n * Also handy for making public items that are defined in anonymous closures.\n *\n * ex. goog.exportSymbol('public.path.Foo', Foo);\n *\n * ex. goog.exportSymbol('public.path.Foo.staticFunction', Foo.staticFunction);\n *     public.path.Foo.staticFunction();\n *\n * ex. goog.exportSymbol('public.path.Foo.prototype.myMethod',\n *                       Foo.prototype.myMethod);\n *     new public.path.Foo().myMethod();\n *\n * @param {string} publicPath Unobfuscated name to export.\n * @param {*} object Object the name should point to.\n * @param {Object=} opt_objectToExportTo The object to add the path to; default\n *     is goog.global.\n */\ngoog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {\n  goog.exportPath_(publicPath, object, opt_objectToExportTo);\n};\n\n\n/**\n * Exports a property unobfuscated into the object's namespace.\n * ex. goog.exportProperty(Foo, 'staticFunction', Foo.staticFunction);\n * ex. goog.exportProperty(Foo.prototype, 'myMethod', Foo.prototype.myMethod);\n * @param {Object} object Object whose static property is being exported.\n * @param {string} publicName Unobfuscated name to export.\n * @param {*} symbol Object the name should point to.\n */\ngoog.exportProperty = function(object, publicName, symbol) {\n  object[publicName] = symbol;\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n * <pre>\n * function ParentClass(a, b) { }\n * ParentClass.prototype.foo = function(a) { };\n *\n * function ChildClass(a, b, c) {\n *   ChildClass.base(this, 'constructor', a, b);\n * }\n * goog.inherits(ChildClass, ParentClass);\n *\n * var child = new ChildClass('a', 'b', 'see');\n * child.foo(); // This works.\n * </pre>\n *\n * @param {!Function} childCtor Child class.\n * @param {!Function} parentCtor Parent class.\n * @suppress {strictMissingProperties} superClass_ and base is not defined on\n *    Function.\n */\ngoog.inherits = function(childCtor, parentCtor) {\n  /** @constructor */\n  function tempCtor() {}\n  tempCtor.prototype = parentCtor.prototype;\n  childCtor.superClass_ = parentCtor.prototype;\n  childCtor.prototype = new tempCtor();\n  /** @override */\n  childCtor.prototype.constructor = childCtor;\n\n  /**\n   * Calls superclass constructor/method.\n   *\n   * This function is only available if you use goog.inherits to\n   * express inheritance relationships between classes.\n   *\n   * NOTE: This is a replacement for goog.base and for superClass_\n   * property defined in childCtor.\n   *\n   * @param {!Object} me Should always be \"this\".\n   * @param {string} methodName The method name to call. Calling\n   *     superclass constructor can be done with the special string\n   *     'constructor'.\n   * @param {...*} var_args The arguments to pass to superclass\n   *     method/constructor.\n   * @return {*} The return value of the superclass method/constructor.\n   */\n  childCtor.base = function(me, methodName, var_args) {\n    // Copying using loop to avoid deop due to passing arguments object to\n    // function. This is faster in many JS engines as of late 2014.\n    var args = new Array(arguments.length - 2);\n    for (var i = 2; i < arguments.length; i++) {\n      args[i - 2] = arguments[i];\n    }\n    return parentCtor.prototype[methodName].apply(me, args);\n  };\n};\n\n\n/**\n * Call up to the superclass.\n *\n * If this is called from a constructor, then this calls the superclass\n * constructor with arguments 1-N.\n *\n * If this is called from a prototype method, then you must pass the name of the\n * method as the second argument to this function. If you do not, you will get a\n * runtime error. This calls the superclass' method with arguments 2-N.\n *\n * This function only works if you use goog.inherits to express inheritance\n * relationships between your classes.\n *\n * This function is a compiler primitive. At compile-time, the compiler will do\n * macro expansion to remove a lot of the extra overhead that this function\n * introduces. The compiler will also enforce a lot of the assumptions that this\n * function makes, and treat it as a compiler error if you break them.\n *\n * @param {!Object} me Should always be \"this\".\n * @param {*=} opt_methodName The method name if calling a super method.\n * @param {...*} var_args The rest of the arguments.\n * @return {*} The return value of the superclass method.\n * @suppress {es5Strict} This method can not be used in strict mode, but\n *     all Closure Library consumers must depend on this file.\n * @deprecated goog.base is not strict mode compatible.  Prefer the static\n *     \"base\" method added to the constructor by goog.inherits\n *     or ES6 classes and the \"super\" keyword.\n */\ngoog.base = function(me, opt_methodName, var_args) {\n  var caller = arguments.callee.caller;\n\n  if (goog.STRICT_MODE_COMPATIBLE || (goog.DEBUG && !caller)) {\n    throw new Error(\n        'arguments.caller not defined.  goog.base() cannot be used ' +\n        'with strict mode code. See ' +\n        'http://www.ecma-international.org/ecma-262/5.1/#sec-C');\n  }\n\n  if (typeof caller.superClass_ !== 'undefined') {\n    // Copying using loop to avoid deop due to passing arguments object to\n    // function. This is faster in many JS engines as of late 2014.\n    var ctorArgs = new Array(arguments.length - 1);\n    for (var i = 1; i < arguments.length; i++) {\n      ctorArgs[i - 1] = arguments[i];\n    }\n    // This is a constructor. Call the superclass constructor.\n    return /** @type {!Function} */ (caller.superClass_)\n        .constructor.apply(me, ctorArgs);\n  }\n\n  if (typeof opt_methodName != 'string' && typeof opt_methodName != 'symbol') {\n    throw new Error(\n        'method names provided to goog.base must be a string or a symbol');\n  }\n\n  // Copying using loop to avoid deop due to passing arguments object to\n  // function. This is faster in many JS engines as of late 2014.\n  var args = new Array(arguments.length - 2);\n  for (var i = 2; i < arguments.length; i++) {\n    args[i - 2] = arguments[i];\n  }\n  var foundCaller = false;\n  for (var proto = me.constructor.prototype; proto;\n       proto = Object.getPrototypeOf(proto)) {\n    if (proto[opt_methodName] === caller) {\n      foundCaller = true;\n    } else if (foundCaller) {\n      return proto[opt_methodName].apply(me, args);\n    }\n  }\n\n  // If we did not find the caller in the prototype chain, then one of two\n  // things happened:\n  // 1) The caller is an instance method.\n  // 2) This method was not called by the right caller.\n  if (me[opt_methodName] === caller) {\n    return me.constructor.prototype[opt_methodName].apply(me, args);\n  } else {\n    throw new Error(\n        'goog.base called from a method of one name ' +\n        'to a method of a different name');\n  }\n};\n\n\n/**\n * Allow for aliasing within scope functions.  This function exists for\n * uncompiled code - in compiled code the calls will be inlined and the aliases\n * applied.  In uncompiled code the function is simply run since the aliases as\n * written are valid JavaScript.\n *\n *\n * @param {function()} fn Function to call.  This function can contain aliases\n *     to namespaces (e.g. \"var dom = goog.dom\") or classes\n *     (e.g. \"var Timer = goog.Timer\").\n */\ngoog.scope = function(fn) {\n  if (goog.isInModuleLoader_()) {\n    throw new Error('goog.scope is not supported within a module.');\n  }\n  fn.call(goog.global);\n};\n\n\n/*\n * To support uncompiled, strict mode bundles that use eval to divide source\n * like so:\n *    eval('someSource;//# sourceUrl sourcefile.js');\n * We need to export the globally defined symbols \"goog\" and \"COMPILED\".\n * Exporting \"goog\" breaks the compiler optimizations, so we required that\n * be defined externally.\n * NOTE: We don't use goog.exportSymbol here because we don't want to trigger\n * extern generation when that compiler option is enabled.\n */\nif (!COMPILED) {\n  goog.global['COMPILED'] = COMPILED;\n}\n\n\n//==============================================================================\n// goog.defineClass implementation\n//==============================================================================\n\n\n/**\n * Creates a restricted form of a Closure \"class\":\n *   - from the compiler's perspective, the instance returned from the\n *     constructor is sealed (no new properties may be added).  This enables\n *     better checks.\n *   - the compiler will rewrite this definition to a form that is optimal\n *     for type checking and optimization (initially this will be a more\n *     traditional form).\n *\n * @param {Function} superClass The superclass, Object or null.\n * @param {goog.defineClass.ClassDescriptor} def\n *     An object literal describing\n *     the class.  It may have the following properties:\n *     \"constructor\": the constructor function\n *     \"statics\": an object literal containing methods to add to the constructor\n *        as \"static\" methods or a function that will receive the constructor\n *        function as its only parameter to which static properties can\n *        be added.\n *     all other properties are added to the prototype.\n * @return {!Function} The class constructor.\n * @deprecated Use ES6 class syntax instead.\n */\ngoog.defineClass = function(superClass, def) {\n  // TODO(johnlenz): consider making the superClass an optional parameter.\n  var constructor = def.constructor;\n  var statics = def.statics;\n  // Wrap the constructor prior to setting up the prototype and static methods.\n  if (!constructor || constructor == Object.prototype.constructor) {\n    constructor = function() {\n      throw new Error(\n          'cannot instantiate an interface (no constructor defined).');\n    };\n  }\n\n  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);\n  if (superClass) {\n    goog.inherits(cls, superClass);\n  }\n\n  // Remove all the properties that should not be copied to the prototype.\n  delete def.constructor;\n  delete def.statics;\n\n  goog.defineClass.applyProperties_(cls.prototype, def);\n  if (statics != null) {\n    if (statics instanceof Function) {\n      statics(cls);\n    } else {\n      goog.defineClass.applyProperties_(cls, statics);\n    }\n  }\n\n  return cls;\n};\n\n\n/**\n * @typedef {{\n *   constructor: (!Function|undefined),\n *   statics: (Object|undefined|function(Function):void)\n * }}\n */\ngoog.defineClass.ClassDescriptor;\n\n\n/**\n * @define {boolean} Whether the instances returned by goog.defineClass should\n *     be sealed when possible.\n *\n * When sealing is disabled the constructor function will not be wrapped by\n * goog.defineClass, making it incompatible with ES6 class methods.\n */\ngoog.defineClass.SEAL_CLASS_INSTANCES =\n    goog.define('goog.defineClass.SEAL_CLASS_INSTANCES', goog.DEBUG);\n\n\n/**\n * If goog.defineClass.SEAL_CLASS_INSTANCES is enabled and Object.seal is\n * defined, this function will wrap the constructor in a function that seals the\n * results of the provided constructor function.\n *\n * @param {!Function} ctr The constructor whose results maybe be sealed.\n * @param {Function} superClass The superclass constructor.\n * @return {!Function} The replacement constructor.\n * @private\n */\ngoog.defineClass.createSealingConstructor_ = function(ctr, superClass) {\n  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {\n    // Do now wrap the constructor when sealing is disabled. Angular code\n    // depends on this for injection to work properly.\n    return ctr;\n  }\n\n  // Compute whether the constructor is sealable at definition time, rather\n  // than when the instance is being constructed.\n  var superclassSealable = !goog.defineClass.isUnsealable_(superClass);\n\n  /**\n   * @this {Object}\n   * @return {?}\n   */\n  var wrappedCtr = function() {\n    // Don't seal an instance of a subclass when it calls the constructor of\n    // its super class as there is most likely still setup to do.\n    var instance = ctr.apply(this, arguments) || this;\n    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];\n\n    if (this.constructor === wrappedCtr && superclassSealable &&\n        Object.seal instanceof Function) {\n      Object.seal(instance);\n    }\n    return instance;\n  };\n\n  return wrappedCtr;\n};\n\n\n/**\n * @param {Function} ctr The constructor to test.\n * @return {boolean} Whether the constructor has been tagged as unsealable\n *     using goog.tagUnsealableClass.\n * @private\n */\ngoog.defineClass.isUnsealable_ = function(ctr) {\n  return ctr && ctr.prototype &&\n      ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];\n};\n\n\n// TODO(johnlenz): share these values with the goog.object\n/**\n * The names of the fields that are defined on Object.prototype.\n * @type {!Array<string>}\n * @private\n * @const\n */\ngoog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = [\n  'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',\n  'toLocaleString', 'toString', 'valueOf'\n];\n\n\n// TODO(johnlenz): share this function with the goog.object\n/**\n * @param {!Object} target The object to add properties to.\n * @param {!Object} source The object to copy properties from.\n * @private\n */\ngoog.defineClass.applyProperties_ = function(target, source) {\n  // TODO(johnlenz): update this to support ES5 getters/setters\n\n  var key;\n  for (key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n\n  // For IE the for-in-loop does not contain any properties that are not\n  // enumerable on the prototype object (for example isPrototypeOf from\n  // Object.prototype) and it will also not include 'replace' on objects that\n  // extend String and change 'replace' (not that it is common for anyone to\n  // extend anything except Object).\n  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {\n    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n};\n\n\n/**\n * Sealing classes breaks the older idiom of assigning properties on the\n * prototype rather than in the constructor. As such, goog.defineClass\n * must not seal subclasses of these old-style classes until they are fixed.\n * Until then, this marks a class as \"broken\", instructing defineClass\n * not to seal subclasses.\n * @param {!Function} ctr The legacy constructor to tag as unsealable.\n */\ngoog.tagUnsealableClass = function(ctr) {\n  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {\n    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;\n  }\n};\n\n\n/**\n * Name for unsealable tag property.\n * @const @private {string}\n */\ngoog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = 'goog_defineClass_legacy_unsealable';\n\n\n// There's a bug in the compiler where without collapse properties the\n// Closure namespace defines do not guard code correctly. To help reduce code\n// size also check for !COMPILED even though it redundant until this is fixed.\nif (!COMPILED && goog.DEPENDENCIES_ENABLED) {\n\n  /**\n   * Tries to detect whether is in the context of an HTML document.\n   * @return {boolean} True if it looks like HTML document.\n   * @private\n   */\n  goog.inHtmlDocument_ = function() {\n    /** @type {!Document} */\n    var doc = goog.global.document;\n    return doc != null && 'write' in doc;  // XULDocument misses write.\n  };\n\n\n  /**\n   * We'd like to check for if the document readyState is 'loading'; however\n   * there are bugs on IE 10 and below where the readyState being anything other\n   * than 'complete' is not reliable.\n   * @return {boolean}\n   * @private\n   */\n  goog.isDocumentLoading_ = function() {\n    // attachEvent is available on IE 6 thru 10 only, and thus can be used to\n    // detect those browsers.\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n    return doc.attachEvent ? doc.readyState != 'complete' :\n                             doc.readyState == 'loading';\n  };\n\n\n  /**\n   * Tries to detect the base path of base.js script that bootstraps Closure.\n   * @private\n   */\n  goog.findBasePath_ = function() {\n    if (goog.global.CLOSURE_BASE_PATH != undefined &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        typeof goog.global.CLOSURE_BASE_PATH === 'string') {\n      goog.basePath = goog.global.CLOSURE_BASE_PATH;\n      return;\n    } else if (!goog.inHtmlDocument_()) {\n      return;\n    }\n    /** @type {!Document} */\n    var doc = goog.global.document;\n    // If we have a currentScript available, use it exclusively.\n    var currentScript = doc.currentScript;\n    if (currentScript) {\n      var scripts = [currentScript];\n    } else {\n      var scripts = doc.getElementsByTagName('SCRIPT');\n    }\n    // Search backwards since the current script is in almost all cases the one\n    // that has base.js.\n    for (var i = scripts.length - 1; i >= 0; --i) {\n      var script = /** @type {!HTMLScriptElement} */ (scripts[i]);\n      var src = script.src;\n      var qmark = src.lastIndexOf('?');\n      var l = qmark == -1 ? src.length : qmark;\n      if (src.substr(l - 7, 7) == 'base.js') {\n        goog.basePath = src.substr(0, l - 7);\n        return;\n      }\n    }\n  };\n\n  goog.findBasePath_();\n\n  /** @struct @constructor @final */\n  goog.Transpiler = function() {\n    /** @private {?Object<string, boolean>} */\n    this.requiresTranspilation_ = null;\n    /** @private {string} */\n    this.transpilationTarget_ = goog.TRANSPILE_TO_LANGUAGE;\n  };\n\n\n  /**\n   * Returns a newly created map from language mode string to a boolean\n   * indicating whether transpilation should be done for that mode as well as\n   * the highest level language that this environment supports.\n   *\n   * Guaranteed invariant:\n   * For any two modes, l1 and l2 where l2 is a newer mode than l1,\n   * `map[l1] == true` implies that `map[l2] == true`.\n   *\n   * Note this method is extracted and used elsewhere, so it cannot rely on\n   * anything external (it should easily be able to be transformed into a\n   * standalone, top level function).\n   *\n   * @private\n   * @return {{\n   *   target: string,\n   *   map: !Object<string, boolean>\n   * }}\n   */\n  goog.Transpiler.prototype.createRequiresTranspilation_ = function() {\n    var transpilationTarget = 'es3';\n    var /** !Object<string, boolean> */ requiresTranspilation = {'es3': false};\n    var transpilationRequiredForAllLaterModes = false;\n\n    /**\n     * Adds an entry to requiresTranspliation for the given language mode.\n     *\n     * IMPORTANT: Calls must be made in order from oldest to newest language\n     * mode.\n     * @param {string} modeName\n     * @param {function(): boolean} isSupported Returns true if the JS engine\n     *     supports the given mode.\n     */\n    function addNewerLanguageTranspilationCheck(modeName, isSupported) {\n      if (transpilationRequiredForAllLaterModes) {\n        requiresTranspilation[modeName] = true;\n      } else if (isSupported()) {\n        transpilationTarget = modeName;\n        requiresTranspilation[modeName] = false;\n      } else {\n        requiresTranspilation[modeName] = true;\n        transpilationRequiredForAllLaterModes = true;\n      }\n    }\n\n    /**\n     * Does the given code evaluate without syntax errors and return a truthy\n     * result?\n     */\n    function /** boolean */ evalCheck(/** string */ code) {\n      try {\n        return !!eval(code);\n      } catch (ignored) {\n        return false;\n      }\n    }\n\n    var userAgent = goog.global.navigator && goog.global.navigator.userAgent ?\n        goog.global.navigator.userAgent :\n        '';\n\n    // Identify ES3-only browsers by their incorrect treatment of commas.\n    addNewerLanguageTranspilationCheck('es5', function() {\n      return evalCheck('[1,].length==1');\n    });\n    addNewerLanguageTranspilationCheck('es6', function() {\n      // Edge has a non-deterministic (i.e., not reproducible) bug with ES6:\n      // https://github.com/Microsoft/ChakraCore/issues/1496.\n      var re = /Edge\\/(\\d+)(\\.\\d)*/i;\n      var edgeUserAgent = userAgent.match(re);\n      if (edgeUserAgent) {\n        // The Reflect.construct test below is flaky on Edge. It can sometimes\n        // pass or fail on 40 15.15063, so just exit early for Edge and treat\n        // it as ES5. Until we're on a more up to date version just always use\n        // ES5. See https://github.com/Microsoft/ChakraCore/issues/3217.\n        return false;\n      }\n      // Test es6: [FF50 (?), Edge 14 (?), Chrome 50]\n      //   (a) default params (specifically shadowing locals),\n      //   (b) destructuring, (c) block-scoped functions,\n      //   (d) for-of (const), (e) new.target/Reflect.construct\n      var es6fullTest =\n          'class X{constructor(){if(new.target!=String)throw 1;this.x=42}}' +\n          'let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof ' +\n          'String))throw 1;for(const a of[2,3]){if(a==2)continue;function ' +\n          'f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()' +\n          '==3}';\n\n      return evalCheck('(()=>{\"use strict\";' + es6fullTest + '})()');\n    });\n    // ** and **= are the only new features in 'es7'\n    addNewerLanguageTranspilationCheck('es7', function() {\n      return evalCheck('2 ** 2 == 4');\n    });\n    // async functions are the only new features in 'es8'\n    addNewerLanguageTranspilationCheck('es8', function() {\n      return evalCheck('async () => 1, true');\n    });\n    addNewerLanguageTranspilationCheck('es9', function() {\n      return evalCheck('({...rest} = {}), true');\n    });\n    addNewerLanguageTranspilationCheck('es_next', function() {\n      return false;  // assume it always need to transpile\n    });\n    return {target: transpilationTarget, map: requiresTranspilation};\n  };\n\n\n  /**\n   * Determines whether the given language needs to be transpiled.\n   * @param {string} lang\n   * @param {string|undefined} module\n   * @return {boolean}\n   */\n  goog.Transpiler.prototype.needsTranspile = function(lang, module) {\n    if (goog.TRANSPILE == 'always') {\n      return true;\n    } else if (goog.TRANSPILE == 'never') {\n      return false;\n    } else if (!this.requiresTranspilation_) {\n      var obj = this.createRequiresTranspilation_();\n      this.requiresTranspilation_ = obj.map;\n      this.transpilationTarget_ = this.transpilationTarget_ || obj.target;\n    }\n    if (lang in this.requiresTranspilation_) {\n      if (this.requiresTranspilation_[lang]) {\n        return true;\n      } else if (\n          goog.inHtmlDocument_() && module == 'es6' &&\n          !('noModule' in goog.global.document.createElement('script'))) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      throw new Error('Unknown language mode: ' + lang);\n    }\n  };\n\n\n  /**\n   * Lazily retrieves the transpiler and applies it to the source.\n   * @param {string} code JS code.\n   * @param {string} path Path to the code.\n   * @return {string} The transpiled code.\n   */\n  goog.Transpiler.prototype.transpile = function(code, path) {\n    // TODO(johnplaisted): We should delete goog.transpile_ and just have this\n    // function. But there's some compile error atm where goog.global is being\n    // stripped incorrectly without this.\n    return goog.transpile_(code, path, this.transpilationTarget_);\n  };\n\n\n  /** @private @final {!goog.Transpiler} */\n  goog.transpiler_ = new goog.Transpiler();\n\n  /**\n   * Rewrites closing script tags in input to avoid ending an enclosing script\n   * tag.\n   *\n   * @param {string} str\n   * @return {string}\n   * @private\n   */\n  goog.protectScriptTag_ = function(str) {\n    return str.replace(/<\\/(SCRIPT)/ig, '\\\\x3c/$1');\n  };\n\n\n  /**\n   * A debug loader is responsible for downloading and executing javascript\n   * files in an unbundled, uncompiled environment.\n   *\n   * This can be custimized via the setDependencyFactory method, or by\n   * CLOSURE_IMPORT_SCRIPT/CLOSURE_LOAD_FILE_SYNC.\n   *\n   * @struct @constructor @final @private\n   */\n  goog.DebugLoader_ = function() {\n    /** @private @const {!Object<string, !goog.Dependency>} */\n    this.dependencies_ = {};\n    /** @private @const {!Object<string, string>} */\n    this.idToPath_ = {};\n    /** @private @const {!Object<string, boolean>} */\n    this.written_ = {};\n    /** @private @const {!Array<!goog.Dependency>} */\n    this.loadingDeps_ = [];\n    /** @private {!Array<!goog.Dependency>} */\n    this.depsToLoad_ = [];\n    /** @private {boolean} */\n    this.paused_ = false;\n    /** @private {!goog.DependencyFactory} */\n    this.factory_ = new goog.DependencyFactory(goog.transpiler_);\n    /** @private @const {!Object<string, !Function>} */\n    this.deferredCallbacks_ = {};\n    /** @private @const {!Array<string>} */\n    this.deferredQueue_ = [];\n  };\n\n  /**\n   * @param {!Array<string>} namespaces\n   * @param {function(): undefined} callback Function to call once all the\n   *     namespaces have loaded.\n   */\n  goog.DebugLoader_.prototype.bootstrap = function(namespaces, callback) {\n    var cb = callback;\n    function resolve() {\n      if (cb) {\n        goog.global.setTimeout(cb, 0);\n        cb = null;\n      }\n    }\n\n    if (!namespaces.length) {\n      resolve();\n      return;\n    }\n\n    var deps = [];\n    for (var i = 0; i < namespaces.length; i++) {\n      var path = this.getPathFromDeps_(namespaces[i]);\n      if (!path) {\n        throw new Error('Unregonized namespace: ' + namespaces[i]);\n      }\n      deps.push(this.dependencies_[path]);\n    }\n\n    var require = goog.require;\n    var loaded = 0;\n    for (var i = 0; i < namespaces.length; i++) {\n      require(namespaces[i]);\n      deps[i].onLoad(function() {\n        if (++loaded == namespaces.length) {\n          resolve();\n        }\n      });\n    }\n  };\n\n\n  /**\n   * Loads the Closure Dependency file.\n   *\n   * Exposed a public function so CLOSURE_NO_DEPS can be set to false, base\n   * loaded, setDependencyFactory called, and then this called. i.e. allows\n   * custom loading of the deps file.\n   */\n  goog.DebugLoader_.prototype.loadClosureDeps = function() {\n    // Circumvent addDependency, which would try to transpile deps.js if\n    // transpile is set to always.\n    var relPath = 'deps.js';\n    this.depsToLoad_.push(this.factory_.createDependency(\n        goog.normalizePath_(goog.basePath + relPath), relPath, [], [], {},\n        false));\n    this.loadDeps_();\n  };\n\n\n  /**\n   * Notifies the debug loader when a dependency has been requested.\n   *\n   * @param {string} absPathOrId Path of the dependency or goog id.\n   * @param {boolean=} opt_force\n   */\n  goog.DebugLoader_.prototype.requested = function(absPathOrId, opt_force) {\n    var path = this.getPathFromDeps_(absPathOrId);\n    if (path &&\n        (opt_force || this.areDepsLoaded_(this.dependencies_[path].requires))) {\n      var callback = this.deferredCallbacks_[path];\n      if (callback) {\n        delete this.deferredCallbacks_[path];\n        callback();\n      }\n    }\n  };\n\n\n  /**\n   * Sets the dependency factory, which can be used to create custom\n   * goog.Dependency implementations to control how dependencies are loaded.\n   *\n   * @param {!goog.DependencyFactory} factory\n   */\n  goog.DebugLoader_.prototype.setDependencyFactory = function(factory) {\n    this.factory_ = factory;\n  };\n\n\n  /**\n   * Travserses the dependency graph and queues the given dependency, and all of\n   * its transitive dependencies, for loading and then starts loading if not\n   * paused.\n   *\n   * @param {string} namespace\n   * @private\n   */\n  goog.DebugLoader_.prototype.load_ = function(namespace) {\n    if (!this.getPathFromDeps_(namespace)) {\n      var errorMessage = 'goog.require could not find: ' + namespace;\n\n      goog.logToConsole_(errorMessage);\n      throw Error(errorMessage);\n    } else {\n      var loader = this;\n\n      var deps = [];\n\n      /** @param {string} namespace */\n      var visit = function(namespace) {\n        var path = loader.getPathFromDeps_(namespace);\n\n        if (!path) {\n          throw new Error('Bad dependency path or symbol: ' + namespace);\n        }\n\n        if (loader.written_[path]) {\n          return;\n        }\n\n        loader.written_[path] = true;\n\n        var dep = loader.dependencies_[path];\n        for (var i = 0; i < dep.requires.length; i++) {\n          if (!goog.isProvided_(dep.requires[i])) {\n            visit(dep.requires[i]);\n          }\n        }\n\n        deps.push(dep);\n      };\n\n      visit(namespace);\n\n      var wasLoading = !!this.depsToLoad_.length;\n      this.depsToLoad_ = this.depsToLoad_.concat(deps);\n\n      if (!this.paused_ && !wasLoading) {\n        this.loadDeps_();\n      }\n    }\n  };\n\n\n  /**\n   * Loads any queued dependencies until they are all loaded or paused.\n   *\n   * @private\n   */\n  goog.DebugLoader_.prototype.loadDeps_ = function() {\n    var loader = this;\n    var paused = this.paused_;\n\n    while (this.depsToLoad_.length && !paused) {\n      (function() {\n        var loadCallDone = false;\n        var dep = loader.depsToLoad_.shift();\n\n        var loaded = false;\n        loader.loading_(dep);\n\n        var controller = {\n          pause: function() {\n            if (loadCallDone) {\n              throw new Error('Cannot call pause after the call to load.');\n            } else {\n              paused = true;\n            }\n          },\n          resume: function() {\n            if (loadCallDone) {\n              loader.resume_();\n            } else {\n              // Some dep called pause and then resume in the same load call.\n              // Just keep running this same loop.\n              paused = false;\n            }\n          },\n          loaded: function() {\n            if (loaded) {\n              throw new Error('Double call to loaded.');\n            }\n\n            loaded = true;\n            loader.loaded_(dep);\n          },\n          pending: function() {\n            // Defensive copy.\n            var pending = [];\n            for (var i = 0; i < loader.loadingDeps_.length; i++) {\n              pending.push(loader.loadingDeps_[i]);\n            }\n            return pending;\n          },\n          /**\n           * @param {goog.ModuleType} type\n           */\n          setModuleState: function(type) {\n            goog.moduleLoaderState_ = {\n              type: type,\n              moduleName: '',\n              declareLegacyNamespace: false\n            };\n          },\n          /** @type {function(string, string, string=)} */\n          registerEs6ModuleExports: function(\n              path, exports, opt_closureNamespace) {\n            if (opt_closureNamespace) {\n              goog.loadedModules_[opt_closureNamespace] = {\n                exports: exports,\n                type: goog.ModuleType.ES6,\n                moduleId: opt_closureNamespace || ''\n              };\n            }\n          },\n          /** @type {function(string, ?)} */\n          registerGoogModuleExports: function(moduleId, exports) {\n            goog.loadedModules_[moduleId] = {\n              exports: exports,\n              type: goog.ModuleType.GOOG,\n              moduleId: moduleId\n            };\n          },\n          clearModuleState: function() {\n            goog.moduleLoaderState_ = null;\n          },\n          defer: function(callback) {\n            if (loadCallDone) {\n              throw new Error(\n                  'Cannot register with defer after the call to load.');\n            }\n            loader.defer_(dep, callback);\n          },\n          areDepsLoaded: function() {\n            return loader.areDepsLoaded_(dep.requires);\n          }\n        };\n\n        try {\n          dep.load(controller);\n        } finally {\n          loadCallDone = true;\n        }\n      })();\n    }\n\n    if (paused) {\n      this.pause_();\n    }\n  };\n\n\n  /** @private */\n  goog.DebugLoader_.prototype.pause_ = function() {\n    this.paused_ = true;\n  };\n\n\n  /** @private */\n  goog.DebugLoader_.prototype.resume_ = function() {\n    if (this.paused_) {\n      this.paused_ = false;\n      this.loadDeps_();\n    }\n  };\n\n\n  /**\n   * Marks the given dependency as loading (load has been called but it has not\n   * yet marked itself as finished). Useful for dependencies that want to know\n   * what else is loading. Example: goog.modules cannot eval if there are\n   * loading dependencies.\n   *\n   * @param {!goog.Dependency} dep\n   * @private\n   */\n  goog.DebugLoader_.prototype.loading_ = function(dep) {\n    this.loadingDeps_.push(dep);\n  };\n\n\n  /**\n   * Marks the given dependency as having finished loading and being available\n   * for require.\n   *\n   * @param {!goog.Dependency} dep\n   * @private\n   */\n  goog.DebugLoader_.prototype.loaded_ = function(dep) {\n    for (var i = 0; i < this.loadingDeps_.length; i++) {\n      if (this.loadingDeps_[i] == dep) {\n        this.loadingDeps_.splice(i, 1);\n        break;\n      }\n    }\n\n    for (var i = 0; i < this.deferredQueue_.length; i++) {\n      if (this.deferredQueue_[i] == dep.path) {\n        this.deferredQueue_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (this.loadingDeps_.length == this.deferredQueue_.length &&\n        !this.depsToLoad_.length) {\n      // Something has asked to load these, but they may not be directly\n      // required again later, so load them now that we know we're done loading\n      // everything else. e.g. a goog module entry point.\n      while (this.deferredQueue_.length) {\n        this.requested(this.deferredQueue_.shift(), true);\n      }\n    }\n\n    dep.loaded();\n  };\n\n\n  /**\n   * @param {!Array<string>} pathsOrIds\n   * @return {boolean}\n   * @private\n   */\n  goog.DebugLoader_.prototype.areDepsLoaded_ = function(pathsOrIds) {\n    for (var i = 0; i < pathsOrIds.length; i++) {\n      var path = this.getPathFromDeps_(pathsOrIds[i]);\n      if (!path ||\n          (!(path in this.deferredCallbacks_) &&\n           !goog.isProvided_(pathsOrIds[i]))) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n\n  /**\n   * @param {string} absPathOrId\n   * @return {?string}\n   * @private\n   */\n  goog.DebugLoader_.prototype.getPathFromDeps_ = function(absPathOrId) {\n    if (absPathOrId in this.idToPath_) {\n      return this.idToPath_[absPathOrId];\n    } else if (absPathOrId in this.dependencies_) {\n      return absPathOrId;\n    } else {\n      return null;\n    }\n  };\n\n\n  /**\n   * @param {!goog.Dependency} dependency\n   * @param {!Function} callback\n   * @private\n   */\n  goog.DebugLoader_.prototype.defer_ = function(dependency, callback) {\n    this.deferredCallbacks_[dependency.path] = callback;\n    this.deferredQueue_.push(dependency.path);\n  };\n\n\n  /**\n   * Interface for goog.Dependency implementations to have some control over\n   * loading of dependencies.\n   *\n   * @record\n   */\n  goog.LoadController = function() {};\n\n\n  /**\n   * Tells the controller to halt loading of more dependencies.\n   */\n  goog.LoadController.prototype.pause = function() {};\n\n\n  /**\n   * Tells the controller to resume loading of more dependencies if paused.\n   */\n  goog.LoadController.prototype.resume = function() {};\n\n\n  /**\n   * Tells the controller that this dependency has finished loading.\n   *\n   * This causes this to be removed from pending() and any load callbacks to\n   * fire.\n   */\n  goog.LoadController.prototype.loaded = function() {};\n\n\n  /**\n   * List of dependencies on which load has been called but which have not\n   * called loaded on their controller. This includes the current dependency.\n   *\n   * @return {!Array<!goog.Dependency>}\n   */\n  goog.LoadController.prototype.pending = function() {};\n\n\n  /**\n   * Registers an object as an ES6 module's exports so that goog.modules may\n   * require it by path.\n   *\n   * @param {string} path Full path of the module.\n   * @param {?} exports\n   * @param {string=} opt_closureNamespace Closure namespace to associate with\n   *     this module.\n   */\n  goog.LoadController.prototype.registerEs6ModuleExports = function(\n      path, exports, opt_closureNamespace) {};\n\n\n  /**\n   * Sets the current module state.\n   *\n   * @param {goog.ModuleType} type Type of module.\n   */\n  goog.LoadController.prototype.setModuleState = function(type) {};\n\n\n  /**\n   * Clears the current module state.\n   */\n  goog.LoadController.prototype.clearModuleState = function() {};\n\n\n  /**\n   * Registers a callback to call once the dependency is actually requested\n   * via goog.require + all of the immediate dependencies have been loaded or\n   * all other files have been loaded. Allows for lazy loading until\n   * require'd without pausing dependency loading, which is needed on old IE.\n   *\n   * @param {!Function} callback\n   */\n  goog.LoadController.prototype.defer = function(callback) {};\n\n\n  /**\n   * @return {boolean}\n   */\n  goog.LoadController.prototype.areDepsLoaded = function() {};\n\n\n  /**\n   * Basic super class for all dependencies Closure Library can load.\n   *\n   * This default implementation is designed to load untranspiled, non-module\n   * scripts in a web broswer.\n   *\n   * For transpiled non-goog.module files {@see goog.TranspiledDependency}.\n   * For goog.modules see {@see goog.GoogModuleDependency}.\n   * For untranspiled ES6 modules {@see goog.Es6ModuleDependency}.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   */\n  goog.Dependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    /** @const */\n    this.path = path;\n    /** @const */\n    this.relativePath = relativePath;\n    /** @const */\n    this.provides = provides;\n    /** @const */\n    this.requires = requires;\n    /** @const */\n    this.loadFlags = loadFlags;\n    /** @private {boolean} */\n    this.loaded_ = false;\n    /** @private {!Array<function()>} */\n    this.loadCallbacks_ = [];\n  };\n\n\n  /**\n   * @return {string} The pathname part of this dependency's path if it is a\n   *     URI.\n   */\n  goog.Dependency.prototype.getPathName = function() {\n    var pathName = this.path;\n    var protocolIndex = pathName.indexOf('://');\n    if (protocolIndex >= 0) {\n      pathName = pathName.substring(protocolIndex + 3);\n      var slashIndex = pathName.indexOf('/');\n      if (slashIndex >= 0) {\n        pathName = pathName.substring(slashIndex + 1);\n      }\n    }\n    return pathName;\n  };\n\n\n  /**\n   * @param {function()} callback Callback to fire as soon as this has loaded.\n   * @final\n   */\n  goog.Dependency.prototype.onLoad = function(callback) {\n    if (this.loaded_) {\n      callback();\n    } else {\n      this.loadCallbacks_.push(callback);\n    }\n  };\n\n\n  /**\n   * Marks this dependency as loaded and fires any callbacks registered with\n   * onLoad.\n   * @final\n   */\n  goog.Dependency.prototype.loaded = function() {\n    this.loaded_ = true;\n    var callbacks = this.loadCallbacks_;\n    this.loadCallbacks_ = [];\n    for (var i = 0; i < callbacks.length; i++) {\n      callbacks[i]();\n    }\n  };\n\n\n  /**\n   * Whether or not document.written / appended script tags should be deferred.\n   *\n   * @private {boolean}\n   */\n  goog.Dependency.defer_ = false;\n\n\n  /**\n   * Map of script ready / state change callbacks. Old IE cannot handle putting\n   * these properties on goog.global.\n   *\n   * @private @const {!Object<string, function(?):undefined>}\n   */\n  goog.Dependency.callbackMap_ = {};\n\n\n  /**\n   * @param {function(...?):?} callback\n   * @return {string}\n   * @private\n   */\n  goog.Dependency.registerCallback_ = function(callback) {\n    var key = Math.random().toString(32);\n    goog.Dependency.callbackMap_[key] = callback;\n    return key;\n  };\n\n\n  /**\n   * @param {string} key\n   * @private\n   */\n  goog.Dependency.unregisterCallback_ = function(key) {\n    delete goog.Dependency.callbackMap_[key];\n  };\n\n\n  /**\n   * @param {string} key\n   * @param {...?} var_args\n   * @private\n   * @suppress {unusedPrivateMembers}\n   */\n  goog.Dependency.callback_ = function(key, var_args) {\n    if (key in goog.Dependency.callbackMap_) {\n      var callback = goog.Dependency.callbackMap_[key];\n      var args = [];\n      for (var i = 1; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n      callback.apply(undefined, args);\n    } else {\n      var errorMessage = 'Callback key ' + key +\n          ' does not exist (was base.js loaded more than once?).';\n      throw Error(errorMessage);\n    }\n  };\n\n\n  /**\n   * Starts loading this dependency. This dependency can pause loading if it\n   * needs to and resume it later via the controller interface.\n   *\n   * When this is loaded it should call controller.loaded(). Note that this will\n   * end up calling the loaded method of this dependency; there is no need to\n   * call it explicitly.\n   *\n   * @param {!goog.LoadController} controller\n   */\n  goog.Dependency.prototype.load = function(controller) {\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    if (!goog.inHtmlDocument_()) {\n      goog.logToConsole_(\n          'Cannot use default debug loader outside of HTML documents.');\n      if (this.relativePath == 'deps.js') {\n        // Some old code is relying on base.js auto loading deps.js failing with\n        // no error before later setting CLOSURE_IMPORT_SCRIPT.\n        // CLOSURE_IMPORT_SCRIPT should be set *before* base.js is loaded, or\n        // CLOSURE_NO_DEPS set to true.\n        goog.logToConsole_(\n            'Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, ' +\n            'or setting CLOSURE_NO_DEPS to true.');\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n\n    // If the user tries to require a new symbol after document load,\n    // something has gone terribly wrong. Doing a document.write would\n    // wipe out the page. This does not apply to the CSP-compliant method\n    // of writing script tags.\n    if (doc.readyState == 'complete' &&\n        !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {\n      // Certain test frameworks load base.js multiple times, which tries\n      // to write deps.js each time. If that happens, just fail silently.\n      // These frameworks wipe the page between each load of base.js, so this\n      // is OK.\n      var isDeps = /\\bdeps.js$/.test(this.path);\n      if (isDeps) {\n        controller.loaded();\n        return;\n      } else {\n        throw Error('Cannot write \"' + this.path + '\" after document load');\n      }\n    }\n\n    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING &&\n        goog.isDocumentLoading_()) {\n      var key = goog.Dependency.registerCallback_(function(script) {\n        if (!goog.DebugLoader_.IS_OLD_IE_ || script.readyState == 'complete') {\n          goog.Dependency.unregisterCallback_(key);\n          controller.loaded();\n        }\n      });\n      var nonceAttr = !goog.DebugLoader_.IS_OLD_IE_ && goog.getScriptNonce() ?\n          ' nonce=\"' + goog.getScriptNonce() + '\"' :\n          '';\n      var event =\n          goog.DebugLoader_.IS_OLD_IE_ ? 'onreadystatechange' : 'onload';\n      var defer = goog.Dependency.defer_ ? 'defer' : '';\n      var script = '<script src=\"' + this.path + '\" ' + event +\n          '=\"goog.Dependency.callback_(\\'' + key +\n          '\\', this)\" type=\"text/javascript\" ' + defer + nonceAttr + '><' +\n          '/script>';\n      doc.write(\n          goog.TRUSTED_TYPES_POLICY_ ?\n              goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n              script);\n    } else {\n      var scriptEl =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('script'));\n      scriptEl.defer = goog.Dependency.defer_;\n      scriptEl.async = false;\n      scriptEl.type = 'text/javascript';\n\n      // If CSP nonces are used, propagate them to dynamically created scripts.\n      // This is necessary to allow nonce-based CSPs without 'strict-dynamic'.\n      var nonce = goog.getScriptNonce();\n      if (nonce) {\n        scriptEl.setAttribute('nonce', nonce);\n      }\n\n      if (goog.DebugLoader_.IS_OLD_IE_) {\n        // Execution order is not guaranteed on old IE, halt loading and write\n        // these scripts one at a time, after each loads.\n        controller.pause();\n        scriptEl.onreadystatechange = function() {\n          if (scriptEl.readyState == 'loaded' ||\n              scriptEl.readyState == 'complete') {\n            controller.loaded();\n            controller.resume();\n          }\n        };\n      } else {\n        scriptEl.onload = function() {\n          scriptEl.onload = null;\n          controller.loaded();\n        };\n      }\n\n      scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ?\n          goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path) :\n          this.path;\n      doc.head.appendChild(scriptEl);\n    }\n  };\n\n\n  /**\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides Should be an empty array.\n   *     TODO(johnplaisted) add support for adding closure namespaces to ES6\n   *     modules for interop purposes.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   * @extends {goog.Dependency}\n   */\n  goog.Es6ModuleDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.Es6ModuleDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n  };\n  goog.inherits(goog.Es6ModuleDependency, goog.Dependency);\n\n\n  /** @override */\n  goog.Es6ModuleDependency.prototype.load = function(controller) {\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    if (!goog.inHtmlDocument_()) {\n      goog.logToConsole_(\n          'Cannot use default debug loader outside of HTML documents.');\n      controller.pause();\n      return;\n    }\n\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n\n    var dep = this;\n\n    // TODO(johnplaisted): Does document.writing really speed up anything? Any\n    // difference between this and just waiting for interactive mode and then\n    // appending?\n    function write(src, contents) {\n      if (contents) {\n        var script = '<script type=\"module\" crossorigin>' + contents + '</' +\n            'script>';\n        doc.write(\n            goog.TRUSTED_TYPES_POLICY_ ?\n                goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n                script);\n      } else {\n        var script = '<script type=\"module\" crossorigin src=\"' + src + '\"></' +\n            'script>';\n        doc.write(\n            goog.TRUSTED_TYPES_POLICY_ ?\n                goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n                script);\n      }\n    }\n\n    function append(src, contents) {\n      var scriptEl =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('script'));\n      scriptEl.defer = true;\n      scriptEl.async = false;\n      scriptEl.type = 'module';\n      scriptEl.setAttribute('crossorigin', true);\n\n      // If CSP nonces are used, propagate them to dynamically created scripts.\n      // This is necessary to allow nonce-based CSPs without 'strict-dynamic'.\n      var nonce = goog.getScriptNonce();\n      if (nonce) {\n        scriptEl.setAttribute('nonce', nonce);\n      }\n\n      if (contents) {\n        scriptEl.textContent = goog.TRUSTED_TYPES_POLICY_ ?\n            goog.TRUSTED_TYPES_POLICY_.createScript(contents) :\n            contents;\n      } else {\n        scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ?\n            goog.TRUSTED_TYPES_POLICY_.createScriptURL(src) :\n            src;\n      }\n\n      doc.head.appendChild(scriptEl);\n    }\n\n    var create;\n\n    if (goog.isDocumentLoading_()) {\n      create = write;\n      // We can ONLY call document.write if we are guaranteed that any\n      // non-module script tags document.written after this are deferred.\n      // Small optimization, in theory document.writing is faster.\n      goog.Dependency.defer_ = true;\n    } else {\n      create = append;\n    }\n\n    // Write 4 separate tags here:\n    // 1) Sets the module state at the correct time (just before execution).\n    // 2) A src node for this, which just hopefully lets the browser load it a\n    //    little early (no need to parse #3).\n    // 3) Import the module and register it.\n    // 4) Clear the module state at the correct time. Guaranteed to run even\n    //    if there is an error in the module (#3 will not run if there is an\n    //    error in the module).\n    var beforeKey = goog.Dependency.registerCallback_(function() {\n      goog.Dependency.unregisterCallback_(beforeKey);\n      controller.setModuleState(goog.ModuleType.ES6);\n    });\n    create(undefined, 'goog.Dependency.callback_(\"' + beforeKey + '\")');\n\n    // TODO(johnplaisted): Does this really speed up anything?\n    create(this.path, undefined);\n\n    var registerKey = goog.Dependency.registerCallback_(function(exports) {\n      goog.Dependency.unregisterCallback_(registerKey);\n      controller.registerEs6ModuleExports(\n          dep.path, exports, goog.moduleLoaderState_.moduleName);\n    });\n    create(\n        undefined,\n        'import * as m from \"' + this.path + '\"; goog.Dependency.callback_(\"' +\n            registerKey + '\", m)');\n\n    var afterKey = goog.Dependency.registerCallback_(function() {\n      goog.Dependency.unregisterCallback_(afterKey);\n      controller.clearModuleState();\n      controller.loaded();\n    });\n    create(undefined, 'goog.Dependency.callback_(\"' + afterKey + '\")');\n  };\n\n\n  /**\n   * Superclass of any dependency that needs to be loaded into memory,\n   * transformed, and then eval'd (goog.modules and transpiled files).\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor @abstract\n   * @extends {goog.Dependency}\n   */\n  goog.TransformedDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.TransformedDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n    /** @private {?string} */\n    this.contents_ = null;\n\n    /**\n     * Whether to lazily make the synchronous XHR (when goog.require'd) or make\n     * the synchronous XHR when initially loading. On FireFox 61 there is a bug\n     * where an ES6 module cannot make a synchronous XHR (rather, it can, but if\n     * it does then no other ES6 modules will load after).\n     *\n     * tl;dr we lazy load due to bugs on older browsers and eager load due to\n     * bugs on newer ones.\n     *\n     * https://bugzilla.mozilla.org/show_bug.cgi?id=1477090\n     *\n     * @private @const {boolean}\n     */\n    this.lazyFetch_ = !goog.inHtmlDocument_() ||\n        !('noModule' in goog.global.document.createElement('script'));\n  };\n  goog.inherits(goog.TransformedDependency, goog.Dependency);\n\n\n  /** @override */\n  goog.TransformedDependency.prototype.load = function(controller) {\n    var dep = this;\n\n    function fetch() {\n      dep.contents_ = goog.loadFileSync_(dep.path);\n\n      if (dep.contents_) {\n        dep.contents_ = dep.transform(dep.contents_);\n        if (dep.contents_) {\n          dep.contents_ += '\\n//# sourceURL=' + dep.path;\n        }\n      }\n    }\n\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      fetch();\n      if (this.contents_ &&\n          goog.global.CLOSURE_IMPORT_SCRIPT('', this.contents_)) {\n        this.contents_ = null;\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n\n    var isEs6 = this.loadFlags['module'] == goog.ModuleType.ES6;\n\n    if (!this.lazyFetch_) {\n      fetch();\n    }\n\n    function load() {\n      if (dep.lazyFetch_) {\n        fetch();\n      }\n\n      if (!dep.contents_) {\n        // loadFileSync_ or transform are responsible. Assume they logged an\n        // error.\n        return;\n      }\n\n      if (isEs6) {\n        controller.setModuleState(goog.ModuleType.ES6);\n      }\n\n      var namespace;\n\n      try {\n        var contents = dep.contents_;\n        dep.contents_ = null;\n        goog.globalEval(contents);\n        if (isEs6) {\n          namespace = goog.moduleLoaderState_.moduleName;\n        }\n      } finally {\n        if (isEs6) {\n          controller.clearModuleState();\n        }\n      }\n\n      if (isEs6) {\n        // Due to circular dependencies this may not be available for require\n        // right now.\n        goog.global['$jscomp']['require']['ensure'](\n            [dep.getPathName()], function() {\n              controller.registerEs6ModuleExports(\n                  dep.path,\n                  goog.global['$jscomp']['require'](dep.getPathName()),\n                  namespace);\n            });\n      }\n\n      controller.loaded();\n    }\n\n    // Do not fetch now; in FireFox 47 the synchronous XHR doesn't block all\n    // events. If we fetched now and then document.write'd the contents the\n    // document.write would be an eval and would execute too soon! Instead write\n    // a script tag to fetch and eval synchronously at the correct time.\n    function fetchInOwnScriptThenLoad() {\n      /** @type {!HTMLDocument} */\n      var doc = goog.global.document;\n\n      var key = goog.Dependency.registerCallback_(function() {\n        goog.Dependency.unregisterCallback_(key);\n        load();\n      });\n\n      var script = '<script type=\"text/javascript\">' +\n          goog.protectScriptTag_('goog.Dependency.callback_(\"' + key + '\");') +\n          '</' +\n          'script>';\n      doc.write(\n          goog.TRUSTED_TYPES_POLICY_ ?\n              goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n              script);\n    }\n\n    // If one thing is pending it is this.\n    var anythingElsePending = controller.pending().length > 1;\n\n    // If anything else is loading we need to lazy load due to bugs in old IE.\n    // Specifically script tags with src and script tags with contents could\n    // execute out of order if document.write is used, so we cannot use\n    // document.write. Do not pause here; it breaks old IE as well.\n    var useOldIeWorkAround =\n        anythingElsePending && goog.DebugLoader_.IS_OLD_IE_;\n\n    // Additionally if we are meant to defer scripts but the page is still\n    // loading (e.g. an ES6 module is loading) then also defer. Or if we are\n    // meant to defer and anything else is pending then defer (those may be\n    // scripts that did not need transformation and are just script tags with\n    // defer set to true, and we need to evaluate after that deferred script).\n    var needsAsyncLoading = goog.Dependency.defer_ &&\n        (anythingElsePending || goog.isDocumentLoading_());\n\n    if (useOldIeWorkAround || needsAsyncLoading) {\n      // Note that we only defer when we have to rather than 100% of the time.\n      // Always defering would work, but then in theory the order of\n      // goog.require calls would then matter. We want to enforce that most of\n      // the time the order of the require calls does not matter.\n      controller.defer(function() {\n        load();\n      });\n      return;\n    }\n    // TODO(johnplaisted): Externs are missing onreadystatechange for\n    // HTMLDocument.\n    /** @type {?} */\n    var doc = goog.global.document;\n\n    var isInternetExplorer =\n        goog.inHtmlDocument_() && 'ActiveXObject' in goog.global;\n\n    // Don't delay in any version of IE. There's bug around this that will\n    // cause out of order script execution. This means that on older IE ES6\n    // modules will load too early (while the document is still loading + the\n    // dom is not available). The other option is to load too late (when the\n    // document is complete and the onload even will never fire). This seems\n    // to be the lesser of two evils as scripts already act like the former.\n    if (isEs6 && goog.inHtmlDocument_() && goog.isDocumentLoading_() &&\n        !isInternetExplorer) {\n      goog.Dependency.defer_ = true;\n      // Transpiled ES6 modules still need to load like regular ES6 modules,\n      // aka only after the document is interactive.\n      controller.pause();\n      var oldCallback = doc.onreadystatechange;\n      doc.onreadystatechange = function() {\n        if (doc.readyState == 'interactive') {\n          doc.onreadystatechange = oldCallback;\n          load();\n          controller.resume();\n        }\n        if (goog.isFunction(oldCallback)) {\n          oldCallback.apply(undefined, arguments);\n        }\n      };\n    } else {\n      // Always eval on old IE.\n      if (goog.DebugLoader_.IS_OLD_IE_ || !goog.inHtmlDocument_() ||\n          !goog.isDocumentLoading_()) {\n        load();\n      } else {\n        fetchInOwnScriptThenLoad();\n      }\n    }\n  };\n\n\n  /**\n   * @param {string} contents\n   * @return {string}\n   * @abstract\n   */\n  goog.TransformedDependency.prototype.transform = function(contents) {};\n\n\n  /**\n   * Any non-goog.module dependency which needs to be transpiled before eval.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @param {!goog.Transpiler} transpiler\n   * @struct @constructor\n   * @extends {goog.TransformedDependency}\n   */\n  goog.TranspiledDependency = function(\n      path, relativePath, provides, requires, loadFlags, transpiler) {\n    goog.TranspiledDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n    /** @protected @const*/\n    this.transpiler = transpiler;\n  };\n  goog.inherits(goog.TranspiledDependency, goog.TransformedDependency);\n\n\n  /** @override */\n  goog.TranspiledDependency.prototype.transform = function(contents) {\n    // Transpile with the pathname so that ES6 modules are domain agnostic.\n    return this.transpiler.transpile(contents, this.getPathName());\n  };\n\n\n  /**\n   * An ES6 module dependency that was transpiled to a jscomp module outside\n   * of the debug loader, e.g. server side.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   * @extends {goog.TransformedDependency}\n   */\n  goog.PreTranspiledEs6ModuleDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.PreTranspiledEs6ModuleDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n  };\n  goog.inherits(\n      goog.PreTranspiledEs6ModuleDependency, goog.TransformedDependency);\n\n\n  /** @override */\n  goog.PreTranspiledEs6ModuleDependency.prototype.transform = function(\n      contents) {\n    return contents;\n  };\n\n\n  /**\n   * A goog.module, transpiled or not. Will always perform some minimal\n   * transformation even when not transpiled to wrap in a goog.loadModule\n   * statement.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @param {boolean} needsTranspile\n   * @param {!goog.Transpiler} transpiler\n   * @struct @constructor\n   * @extends {goog.TransformedDependency}\n   */\n  goog.GoogModuleDependency = function(\n      path, relativePath, provides, requires, loadFlags, needsTranspile,\n      transpiler) {\n    goog.GoogModuleDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n    /** @private @const */\n    this.needsTranspile_ = needsTranspile;\n    /** @private @const */\n    this.transpiler_ = transpiler;\n  };\n  goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency);\n\n\n  /** @override */\n  goog.GoogModuleDependency.prototype.transform = function(contents) {\n    if (this.needsTranspile_) {\n      contents = this.transpiler_.transpile(contents, this.getPathName());\n    }\n\n    if (!goog.LOAD_MODULE_USING_EVAL || goog.global.JSON === undefined) {\n      return '' +\n          'goog.loadModule(function(exports) {' +\n          '\"use strict\";' + contents +\n          '\\n' +  // terminate any trailing single line comment.\n          ';return exports' +\n          '});' +\n          '\\n//# sourceURL=' + this.path + '\\n';\n    } else {\n      return '' +\n          'goog.loadModule(' +\n          goog.global.JSON.stringify(\n              contents + '\\n//# sourceURL=' + this.path + '\\n') +\n          ');';\n    }\n  };\n\n\n  /**\n   * Whether the browser is IE9 or earlier, which needs special handling\n   * for deferred modules.\n   * @const @private {boolean}\n   */\n  goog.DebugLoader_.IS_OLD_IE_ = !!(\n      !goog.global.atob && goog.global.document && goog.global.document['all']);\n\n\n  /**\n   * @param {string} relPath\n   * @param {!Array<string>|undefined} provides\n   * @param {!Array<string>} requires\n   * @param {boolean|!Object<string>=} opt_loadFlags\n   * @see goog.addDependency\n   */\n  goog.DebugLoader_.prototype.addDependency = function(\n      relPath, provides, requires, opt_loadFlags) {\n    provides = provides || [];\n    relPath = relPath.replace(/\\\\/g, '/');\n    var path = goog.normalizePath_(goog.basePath + relPath);\n    if (!opt_loadFlags || typeof opt_loadFlags === 'boolean') {\n      opt_loadFlags = opt_loadFlags ? {'module': goog.ModuleType.GOOG} : {};\n    }\n    var dep = this.factory_.createDependency(\n        path, relPath, provides, requires, opt_loadFlags,\n        goog.transpiler_.needsTranspile(\n            opt_loadFlags['lang'] || 'es3', opt_loadFlags['module']));\n    this.dependencies_[path] = dep;\n    for (var i = 0; i < provides.length; i++) {\n      this.idToPath_[provides[i]] = path;\n    }\n    this.idToPath_[relPath] = path;\n  };\n\n\n  /**\n   * Creates goog.Dependency instances for the debug loader to load.\n   *\n   * Should be overridden to have the debug loader use custom subclasses of\n   * goog.Dependency.\n   *\n   * @param {!goog.Transpiler} transpiler\n   * @struct @constructor\n   */\n  goog.DependencyFactory = function(transpiler) {\n    /** @protected @const */\n    this.transpiler = transpiler;\n  };\n\n\n  /**\n   * @param {string} path Absolute path of the file.\n   * @param {string} relativePath Path relative to closure\u2019s base.js.\n   * @param {!Array<string>} provides Array of provided goog.provide/module ids.\n   * @param {!Array<string>} requires Array of required goog.provide/module /\n   *     relative ES6 module paths.\n   * @param {!Object<string, string>} loadFlags\n   * @param {boolean} needsTranspile True if the file needs to be transpiled\n   *     per the goog.Transpiler.\n   * @return {!goog.Dependency}\n   */\n  goog.DependencyFactory.prototype.createDependency = function(\n      path, relativePath, provides, requires, loadFlags, needsTranspile) {\n\n    if (loadFlags['module'] == goog.ModuleType.GOOG) {\n      return new goog.GoogModuleDependency(\n          path, relativePath, provides, requires, loadFlags, needsTranspile,\n          this.transpiler);\n    } else if (needsTranspile) {\n      return new goog.TranspiledDependency(\n          path, relativePath, provides, requires, loadFlags, this.transpiler);\n    } else {\n      if (loadFlags['module'] == goog.ModuleType.ES6) {\n        if (goog.TRANSPILE == 'never' && goog.ASSUME_ES_MODULES_TRANSPILED) {\n          return new goog.PreTranspiledEs6ModuleDependency(\n              path, relativePath, provides, requires, loadFlags);\n        } else {\n          return new goog.Es6ModuleDependency(\n              path, relativePath, provides, requires, loadFlags);\n        }\n      } else {\n        return new goog.Dependency(\n            path, relativePath, provides, requires, loadFlags);\n      }\n    }\n  };\n\n\n  /** @private @const */\n  goog.debugLoader_ = new goog.DebugLoader_();\n\n\n  /**\n   * Loads the Closure Dependency file.\n   *\n   * Exposed a public function so CLOSURE_NO_DEPS can be set to false, base\n   * loaded, setDependencyFactory called, and then this called. i.e. allows\n   * custom loading of the deps file.\n   */\n  goog.loadClosureDeps = function() {\n    goog.debugLoader_.loadClosureDeps();\n  };\n\n\n  /**\n   * Sets the dependency factory, which can be used to create custom\n   * goog.Dependency implementations to control how dependencies are loaded.\n   *\n   * Note: if you wish to call this function and provide your own implemnetation\n   * it is a wise idea to set CLOSURE_NO_DEPS to true, otherwise the dependency\n   * file and all of its goog.addDependency calls will use the default factory.\n   * You can call goog.loadClosureDeps to load the Closure dependency file\n   * later, after your factory is injected.\n   *\n   * @param {!goog.DependencyFactory} factory\n   */\n  goog.setDependencyFactory = function(factory) {\n    goog.debugLoader_.setDependencyFactory(factory);\n  };\n\n\n  if (!goog.global.CLOSURE_NO_DEPS) {\n    goog.debugLoader_.loadClosureDeps();\n  }\n\n\n  /**\n   * Bootstraps the given namespaces and calls the callback once they are\n   * available either via goog.require. This is a replacement for using\n   * `goog.require` to bootstrap Closure JavaScript. Previously a `goog.require`\n   * in an HTML file would guarantee that the require'd namespace was available\n   * in the next immediate script tag. With ES6 modules this no longer a\n   * guarantee.\n   *\n   * @param {!Array<string>} namespaces\n   * @param {function(): ?} callback Function to call once all the namespaces\n   *     have loaded. Always called asynchronously.\n   */\n  goog.bootstrap = function(namespaces, callback) {\n    goog.debugLoader_.bootstrap(namespaces, callback);\n  };\n}\n\n\n/**\n * @define {string} Trusted Types policy name. If non-empty then Closure will\n * use Trusted Types.\n */\ngoog.TRUSTED_TYPES_POLICY_NAME =\n    goog.define('goog.TRUSTED_TYPES_POLICY_NAME', '');\n\n\n/**\n * Returns the parameter.\n * @param {string} s\n * @return {string}\n * @private\n */\ngoog.identity_ = function(s) {\n  return s;\n};\n\n\n/**\n * Creates Trusted Types policy if Trusted Types are supported by the browser.\n * The policy just blesses any string as a Trusted Type. It is not visibility\n * restricted because anyone can also call TrustedTypes.createPolicy directly.\n * However, the allowed names should be restricted by a HTTP header and the\n * reference to the created policy should be visibility restricted.\n * @param {string} name\n * @return {?TrustedTypePolicy}\n */\ngoog.createTrustedTypesPolicy = function(name) {\n  var policy = null;\n  // TODO(koto): Remove window.TrustedTypes variant when the newer API ships.\n  var policyFactory = goog.global.trustedTypes || goog.global.TrustedTypes;\n  if (!policyFactory || !policyFactory.createPolicy) {\n    return policy;\n  }\n  // TrustedTypes.createPolicy throws if called with a name that is already\n  // registered, even in report-only mode. Until the API changes, catch the\n  // error not to break the applications functionally. In such case, the code\n  // will fall back to using regular Safe Types.\n  // TODO(koto): Remove catching once createPolicy API stops throwing.\n  try {\n    policy = policyFactory.createPolicy(name, {\n      createHTML: goog.identity_,\n      createScript: goog.identity_,\n      createScriptURL: goog.identity_,\n      createURL: goog.identity_\n    });\n  } catch (e) {\n    goog.logToConsole_(e.message);\n  }\n  return policy;\n};\n\n\n/** @private @const {?TrustedTypePolicy} */\ngoog.TRUSTED_TYPES_POLICY_ = goog.TRUSTED_TYPES_POLICY_NAME ?\n    goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + '#base') :\n    null;\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * Wicked Good XPath\n *\n * @fileoverview A cross-browser XPath library forked from the\n * JavaScript-XPath project by Cybozu Labs.\n * @author gdennis@google.com (Greg Dennis)\n * @author joonlee@google.com (Joon Lee)\n * @author moz@google.com (Michael Zhou)\n * @author evanrthomas@google.com (Evan Thomas)\n */\n\ngoog.provide('wgxpath');\n\ngoog.require('wgxpath.Context');\ngoog.require('wgxpath.IEAttrWrapper');\ngoog.require('wgxpath.Lexer');\ngoog.require('wgxpath.NodeSet');\ngoog.require('wgxpath.Parser');\ngoog.require('wgxpath.nsResolver');\n\n\n/**\n * Enum for XPathResult types.\n *\n * @enum {number}\n */\nwgxpath.XPathResultType = {\n  ANY_TYPE: 0,\n  NUMBER_TYPE: 1,\n  STRING_TYPE: 2,\n  BOOLEAN_TYPE: 3,\n  UNORDERED_NODE_ITERATOR_TYPE: 4,\n  ORDERED_NODE_ITERATOR_TYPE: 5,\n  UNORDERED_NODE_SNAPSHOT_TYPE: 6,\n  ORDERED_NODE_SNAPSHOT_TYPE: 7,\n  ANY_UNORDERED_NODE_TYPE: 8,\n  FIRST_ORDERED_NODE_TYPE: 9\n};\n\n\n\n/**\n * The exported XPathExpression type.\n *\n * @constructor\n * @extends {XPathExpression}\n * @param {string} expr The expression string.\n * @param {?(XPathNSResolver|function(string): ?string)} nsResolver\n *     XPath namespace resolver.\n * @private\n */\nwgxpath.XPathExpression_ = function(expr, nsResolver) {\n  if (!expr.length) {\n    throw Error('Empty XPath expression.');\n  }\n  var lexer = wgxpath.Lexer.tokenize(expr);\n  if (lexer.empty()) {\n    throw Error('Invalid XPath expression.');\n  }\n\n  // nsResolver may either be an XPathNSResolver, which has a lookupNamespaceURI\n  // function, a custom function, or null. Standardize it to a function.\n  if (!nsResolver) {\n    nsResolver = function(string) {return null;};\n  } else if (!goog.isFunction(nsResolver)) {\n    nsResolver = goog.bind(nsResolver.lookupNamespaceURI, nsResolver);\n  }\n\n  var gexpr = new wgxpath.Parser(lexer, nsResolver).parseExpr();\n  if (!lexer.empty()) {\n    throw Error('Bad token: ' + lexer.next());\n  }\n  this['evaluate'] = function(node, type) {\n    var value = gexpr.evaluate(new wgxpath.Context(node));\n    return new wgxpath.XPathResult_(value, type);\n  };\n};\n\n\n\n/**\n * The exported XPathResult type.\n *\n * @constructor\n * @extends {XPathResult}\n * @param {(!wgxpath.NodeSet|number|string|boolean)} value The result value.\n * @param {number} type The result type.\n * @private\n */\nwgxpath.XPathResult_ = function(value, type) {\n  if (type == wgxpath.XPathResultType.ANY_TYPE) {\n    if (value instanceof wgxpath.NodeSet) {\n      type = wgxpath.XPathResultType.UNORDERED_NODE_ITERATOR_TYPE;\n    } else if (typeof value == 'string') {\n      type = wgxpath.XPathResultType.STRING_TYPE;\n    } else if (typeof value == 'number') {\n      type = wgxpath.XPathResultType.NUMBER_TYPE;\n    } else if (typeof value == 'boolean') {\n      type = wgxpath.XPathResultType.BOOLEAN_TYPE;\n    } else {\n      throw Error('Unexpected evaluation result.');\n    }\n  }\n  if (type != wgxpath.XPathResultType.STRING_TYPE &&\n      type != wgxpath.XPathResultType.NUMBER_TYPE &&\n      type != wgxpath.XPathResultType.BOOLEAN_TYPE &&\n      !(value instanceof wgxpath.NodeSet)) {\n    throw Error('value could not be converted to the specified type');\n  }\n  this['resultType'] = type;\n  var nodes;\n  switch (type) {\n    case wgxpath.XPathResultType.STRING_TYPE:\n      this['stringValue'] = (value instanceof wgxpath.NodeSet) ?\n          value.string() : '' + value;\n      break;\n    case wgxpath.XPathResultType.NUMBER_TYPE:\n      this['numberValue'] = (value instanceof wgxpath.NodeSet) ?\n          value.number() : +value;\n      break;\n    case wgxpath.XPathResultType.BOOLEAN_TYPE:\n      this['booleanValue'] = (value instanceof wgxpath.NodeSet) ?\n          value.getLength() > 0 : !!value;\n      break;\n    case wgxpath.XPathResultType.UNORDERED_NODE_ITERATOR_TYPE:\n    case wgxpath.XPathResultType.ORDERED_NODE_ITERATOR_TYPE:\n    case wgxpath.XPathResultType.UNORDERED_NODE_SNAPSHOT_TYPE:\n    case wgxpath.XPathResultType.ORDERED_NODE_SNAPSHOT_TYPE:\n      var iter = value.iterator();\n      nodes = [];\n      for (var node = iter.next(); node; node = iter.next()) {\n        nodes.push(node instanceof wgxpath.IEAttrWrapper ?\n            node.getNode() : node);\n      }\n      this['snapshotLength'] = value.getLength();\n      this['invalidIteratorState'] = false;\n      break;\n    case wgxpath.XPathResultType.ANY_UNORDERED_NODE_TYPE:\n    case wgxpath.XPathResultType.FIRST_ORDERED_NODE_TYPE:\n      var firstNode = value.getFirst();\n      this['singleNodeValue'] =\n          firstNode instanceof wgxpath.IEAttrWrapper ?\n          firstNode.getNode() : firstNode;\n      break;\n    default:\n      throw Error('Unknown XPathResult type.');\n  }\n  var index = 0;\n  this['iterateNext'] = function() {\n    if (type != wgxpath.XPathResultType.UNORDERED_NODE_ITERATOR_TYPE &&\n        type != wgxpath.XPathResultType.ORDERED_NODE_ITERATOR_TYPE) {\n      throw Error('iterateNext called with wrong result type');\n    }\n    return (index >= nodes.length) ? null : nodes[index++];\n  };\n  this['snapshotItem'] = function(i) {\n    if (type != wgxpath.XPathResultType.UNORDERED_NODE_SNAPSHOT_TYPE &&\n        type != wgxpath.XPathResultType.ORDERED_NODE_SNAPSHOT_TYPE) {\n      throw Error('snapshotItem called with wrong result type');\n    }\n    return (i >= nodes.length || i < 0) ? null : nodes[i];\n  };\n};\nwgxpath.XPathResult_['ANY_TYPE'] = wgxpath.XPathResultType.ANY_TYPE;\nwgxpath.XPathResult_['NUMBER_TYPE'] = wgxpath.XPathResultType.NUMBER_TYPE;\nwgxpath.XPathResult_['STRING_TYPE'] = wgxpath.XPathResultType.STRING_TYPE;\nwgxpath.XPathResult_['BOOLEAN_TYPE'] = wgxpath.XPathResultType.BOOLEAN_TYPE;\nwgxpath.XPathResult_['UNORDERED_NODE_ITERATOR_TYPE'] =\n    wgxpath.XPathResultType.UNORDERED_NODE_ITERATOR_TYPE;\nwgxpath.XPathResult_['ORDERED_NODE_ITERATOR_TYPE'] =\n    wgxpath.XPathResultType.ORDERED_NODE_ITERATOR_TYPE;\nwgxpath.XPathResult_['UNORDERED_NODE_SNAPSHOT_TYPE'] =\n    wgxpath.XPathResultType.UNORDERED_NODE_SNAPSHOT_TYPE;\nwgxpath.XPathResult_['ORDERED_NODE_SNAPSHOT_TYPE'] =\n    wgxpath.XPathResultType.ORDERED_NODE_SNAPSHOT_TYPE;\nwgxpath.XPathResult_['ANY_UNORDERED_NODE_TYPE'] =\n    wgxpath.XPathResultType.ANY_UNORDERED_NODE_TYPE;\nwgxpath.XPathResult_['FIRST_ORDERED_NODE_TYPE'] =\n    wgxpath.XPathResultType.FIRST_ORDERED_NODE_TYPE;\n\n\n\n/**\n * The exported XPathNSResolver type.\n *\n * @constructor\n * @extends {XPathNSResolver}\n * @param {!Node} node Context node for the namespace resolution.\n * @private\n */\nwgxpath.XPathNSResolver_ = function(node) {\n  this['lookupNamespaceURI'] = wgxpath.nsResolver.getResolver(node);\n};\n\n\n/**\n * Installs the library. Unless opt_force is true, this is a noop if native\n * XPath is available.\n *\n * @param {Window=} opt_win The window to install the library on.\n * @param {boolean=} opt_force Forces installation of this library,\n *     overwriting existing XPath functionality.\n */\nwgxpath.install = function(opt_win, opt_force) {\n  var win = opt_win || goog.global;\n  var doc = (win.Document && win.Document.prototype) || win.document;\n\n  // Unless opt_force is true, installation is a noop if native XPath is\n  // available.\n  if (doc['evaluate'] && !opt_force) {\n    return;\n  }\n\n  win['XPathResult'] = wgxpath.XPathResult_;\n  doc['evaluate'] = function(expr, context, nsResolver, type, result) {\n    return new wgxpath.XPathExpression_(expr, nsResolver).\n        evaluate(context, type);\n  };\n  doc['createExpression'] = function(expr, nsResolver) {\n    return new wgxpath.XPathExpression_(expr, nsResolver);\n  };\n  doc['createNSResolver'] = function(node) {\n    return new wgxpath.XPathNSResolver_(node);\n  };\n};\n\ngoog.exportSymbol('wgxpath.install', wgxpath.install);\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview Context information about nodes in their nodeset.\n * @author evanrthomas@google.com (Evan Thomas)\n */\n\ngoog.provide('wgxpath.Context');\n\n\n\n/**\n * Provides information for where something is in the DOM.\n *\n * @param {!wgxpath.Node} node A node in the DOM.\n * @param {number=} opt_position The position of this node in its nodeset,\n *     defaults to 1.\n * @param {number=} opt_last Index of the last node in this nodeset,\n *     defaults to 1.\n * @constructor\n */\nwgxpath.Context = function(node, opt_position, opt_last) {\n\n  /**\n    * @private\n    * @type {!wgxpath.Node}\n    */\n  this.node_ = node;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.position_ = opt_position || 1;\n\n  /**\n   * @private\n   * @type {number} opt_last\n   */\n  this.last_ = opt_last || 1;\n};\n\n\n/**\n * Returns the node for this context object.\n *\n * @return {!wgxpath.Node} The node for this context object.\n */\nwgxpath.Context.prototype.getNode = function() {\n  return this.node_;\n};\n\n\n/**\n * Returns the position for this context object.\n *\n * @return {number} The position for this context object.\n */\nwgxpath.Context.prototype.getPosition = function() {\n  return this.position_;\n};\n\n\n/**\n * Returns the last field for this context object.\n *\n * @return {number} The last field for this context object.\n */\nwgxpath.Context.prototype.getLast = function() {\n  return this.last_;\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Definition of goog.dom.NodeType.\n */\n\ngoog.provide('goog.dom.NodeType');\n\n\n/**\n * Constants for the nodeType attribute in the Node interface.\n *\n * These constants match those specified in the Node interface. These are\n * usually present on the Node object in recent browsers, but not in older\n * browsers (specifically, early IEs) and thus are given here.\n *\n * In some browsers (early IEs), these are not defined on the Node object,\n * so they are provided here.\n *\n * See http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-1950641247\n * @enum {number}\n */\ngoog.dom.NodeType = {\n  ELEMENT: 1,\n  ATTRIBUTE: 2,\n  TEXT: 3,\n  CDATA_SECTION: 4,\n  ENTITY_REFERENCE: 5,\n  ENTITY: 6,\n  PROCESSING_INSTRUCTION: 7,\n  COMMENT: 8,\n  DOCUMENT: 9,\n  DOCUMENT_TYPE: 10,\n  DOCUMENT_FRAGMENT: 11,\n  NOTATION: 12\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for manipulating arrays.\n */\n\n\ngoog.provide('goog.array');\n\ngoog.require('goog.asserts');\n\n\n/**\n * @define {boolean} NATIVE_ARRAY_PROTOTYPES indicates whether the code should\n * rely on Array.prototype functions, if available.\n *\n * The Array.prototype functions can be defined by external libraries like\n * Prototype and setting this flag to false forces closure to use its own\n * goog.array implementation.\n *\n * If your javascript can be loaded by a third party site and you are wary about\n * relying on the prototype functions, specify\n * \"--define goog.NATIVE_ARRAY_PROTOTYPES=false\" to the JSCompiler.\n *\n * Setting goog.TRUSTED_SITE to false will automatically set\n * NATIVE_ARRAY_PROTOTYPES to false.\n */\ngoog.NATIVE_ARRAY_PROTOTYPES =\n    goog.define('goog.NATIVE_ARRAY_PROTOTYPES', goog.TRUSTED_SITE);\n\n\n/**\n * @define {boolean} If true, JSCompiler will use the native implementation of\n * array functions where appropriate (e.g., `Array#filter`) and remove the\n * unused pure JS implementation.\n */\ngoog.array.ASSUME_NATIVE_FUNCTIONS = goog.define(\n    'goog.array.ASSUME_NATIVE_FUNCTIONS', goog.FEATURESET_YEAR > 2012);\n\n\n/**\n * Returns the last element in an array without removing it.\n * Same as goog.array.last.\n * @param {IArrayLike<T>|string} array The array.\n * @return {T} Last item in array.\n * @template T\n */\ngoog.array.peek = function(array) {\n  return array[array.length - 1];\n};\n\n\n/**\n * Returns the last element in an array without removing it.\n * Same as goog.array.peek.\n * @param {IArrayLike<T>|string} array The array.\n * @return {T} Last item in array.\n * @template T\n */\ngoog.array.last = goog.array.peek;\n\n// NOTE(arv): Since most of the array functions are generic it allows you to\n// pass an array-like object. Strings have a length and are considered array-\n// like. However, the 'in' operator does not work on strings so we cannot just\n// use the array path even if the browser supports indexing into strings. We\n// therefore end up splitting the string.\n\n\n/**\n * Returns the index of the first element of an array with a specified value, or\n * -1 if the element is not present in the array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-indexof}\n *\n * @param {IArrayLike<T>|string} arr The array to be searched.\n * @param {T} obj The object for which we are searching.\n * @param {number=} opt_fromIndex The index at which to start the search. If\n *     omitted the search starts at index 0.\n * @return {number} The index of the first matching array element.\n * @template T\n */\ngoog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ?\n    function(arr, obj, opt_fromIndex) {\n      goog.asserts.assert(arr.length != null);\n\n      return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);\n    } :\n    function(arr, obj, opt_fromIndex) {\n      var fromIndex = opt_fromIndex == null ?\n          0 :\n          (opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) :\n                               opt_fromIndex);\n\n      if (typeof arr === 'string') {\n        // Array.prototype.indexOf uses === so only strings should be found.\n        if (typeof obj !== 'string' || obj.length != 1) {\n          return -1;\n        }\n        return arr.indexOf(obj, fromIndex);\n      }\n\n      for (var i = fromIndex; i < arr.length; i++) {\n        if (i in arr && arr[i] === obj) return i;\n      }\n      return -1;\n    };\n\n\n/**\n * Returns the index of the last element of an array with a specified value, or\n * -1 if the element is not present in the array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-lastindexof}\n *\n * @param {!IArrayLike<T>|string} arr The array to be searched.\n * @param {T} obj The object for which we are searching.\n * @param {?number=} opt_fromIndex The index at which to start the search. If\n *     omitted the search starts at the end of the array.\n * @return {number} The index of the last matching array element.\n * @template T\n */\ngoog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ?\n    function(arr, obj, opt_fromIndex) {\n      goog.asserts.assert(arr.length != null);\n\n      // Firefox treats undefined and null as 0 in the fromIndex argument which\n      // leads it to always return -1\n      var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;\n      return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);\n    } :\n    function(arr, obj, opt_fromIndex) {\n      var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;\n\n      if (fromIndex < 0) {\n        fromIndex = Math.max(0, arr.length + fromIndex);\n      }\n\n      if (typeof arr === 'string') {\n        // Array.prototype.lastIndexOf uses === so only strings should be found.\n        if (typeof obj !== 'string' || obj.length != 1) {\n          return -1;\n        }\n        return arr.lastIndexOf(obj, fromIndex);\n      }\n\n      for (var i = fromIndex; i >= 0; i--) {\n        if (i in arr && arr[i] === obj) return i;\n      }\n      return -1;\n    };\n\n\n/**\n * Calls a function for each element in an array. Skips holes in the array.\n * See {@link http://tinyurl.com/developer-mozilla-org-array-foreach}\n *\n * @param {IArrayLike<T>|string} arr Array or array like object over\n *     which to iterate.\n * @param {?function(this: S, T, number, ?): ?} f The function to call for every\n *     element. This function takes 3 arguments (the element, the index and the\n *     array). The return value is ignored.\n * @param {S=} opt_obj The object to be used as the value of 'this' within f.\n * @template T,S\n */\ngoog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ?\n    function(arr, f, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n\n      Array.prototype.forEach.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      var l = arr.length;  // must be fixed during loop... see docs\n      var arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n      for (var i = 0; i < l; i++) {\n        if (i in arr2) {\n          f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr);\n        }\n      }\n    };\n\n\n/**\n * Calls a function for each element in an array, starting from the last\n * element rather than the first.\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this: S, T, number, ?): ?} f The function to call for every\n *     element. This function\n *     takes 3 arguments (the element, the index and the array). The return\n *     value is ignored.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @template T,S\n */\ngoog.array.forEachRight = function(arr, f, opt_obj) {\n  var l = arr.length;  // must be fixed during loop... see docs\n  var arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n  for (var i = l - 1; i >= 0; --i) {\n    if (i in arr2) {\n      f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr);\n    }\n  }\n};\n\n\n/**\n * Calls a function for each element in an array, and if the function returns\n * true adds the element to a new array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-filter}\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?):boolean} f The function to call for\n *     every element. This function\n *     takes 3 arguments (the element, the index and the array) and must\n *     return a Boolean. If the return value is true the element is added to the\n *     result array. If it is false the element is not included.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @return {!Array<T>} a new array in which only elements that passed the test\n *     are present.\n * @template T,S\n */\ngoog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ?\n    function(arr, f, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n\n      return Array.prototype.filter.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      var l = arr.length;  // must be fixed during loop... see docs\n      var res = [];\n      var resLength = 0;\n      var arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n      for (var i = 0; i < l; i++) {\n        if (i in arr2) {\n          var val = arr2[i];  // in case f mutates arr2\n          if (f.call(/** @type {?} */ (opt_obj), val, i, arr)) {\n            res[resLength++] = val;\n          }\n        }\n      }\n      return res;\n    };\n\n\n/**\n * Calls a function for each element in an array and inserts the result into a\n * new array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-map}\n *\n * @param {IArrayLike<VALUE>|string} arr Array or array like object\n *     over which to iterate.\n * @param {function(this:THIS, VALUE, number, ?): RESULT} f The function to call\n *     for every element. This function takes 3 arguments (the element,\n *     the index and the array) and should return something. The result will be\n *     inserted into a new array.\n * @param {THIS=} opt_obj The object to be used as the value of 'this' within f.\n * @return {!Array<RESULT>} a new array with the results from f.\n * @template THIS, VALUE, RESULT\n */\ngoog.array.map = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ?\n    function(arr, f, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n\n      return Array.prototype.map.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      var l = arr.length;  // must be fixed during loop... see docs\n      var res = new Array(l);\n      var arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n      for (var i = 0; i < l; i++) {\n        if (i in arr2) {\n          res[i] = f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr);\n        }\n      }\n      return res;\n    };\n\n\n/**\n * Passes every element of an array into a function and accumulates the result.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-reduce}\n *\n * For example:\n * var a = [1, 2, 3, 4];\n * goog.array.reduce(a, function(r, v, i, arr) {return r + v;}, 0);\n * returns 10\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {function(this:S, R, T, number, ?) : R} f The function to call for\n *     every element. This function\n *     takes 4 arguments (the function's previous result or the initial value,\n *     the value of the current array element, the current array index, and the\n *     array itself)\n *     function(previousValue, currentValue, index, array).\n * @param {?} val The initial value to pass into the function on the first call.\n * @param {S=} opt_obj  The object to be used as the value of 'this'\n *     within f.\n * @return {R} Result of evaluating f repeatedly across the values of the array.\n * @template T,S,R\n */\ngoog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ?\n    function(arr, f, val, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n      if (opt_obj) {\n        f = goog.bind(f, opt_obj);\n      }\n      return Array.prototype.reduce.call(arr, f, val);\n    } :\n    function(arr, f, val, opt_obj) {\n      var rval = val;\n      goog.array.forEach(arr, function(val, index) {\n        rval = f.call(/** @type {?} */ (opt_obj), rval, val, index, arr);\n      });\n      return rval;\n    };\n\n\n/**\n * Passes every element of an array into a function and accumulates the result,\n * starting from the last element and working towards the first.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-reduceright}\n *\n * For example:\n * var a = ['a', 'b', 'c'];\n * goog.array.reduceRight(a, function(r, v, i, arr) {return r + v;}, '');\n * returns 'cba'\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, R, T, number, ?) : R} f The function to call for\n *     every element. This function\n *     takes 4 arguments (the function's previous result or the initial value,\n *     the value of the current array element, the current array index, and the\n *     array itself)\n *     function(previousValue, currentValue, index, array).\n * @param {?} val The initial value to pass into the function on the first call.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @return {R} Object returned as a result of evaluating f repeatedly across the\n *     values of the array.\n * @template T,S,R\n */\ngoog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ?\n    function(arr, f, val, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n      goog.asserts.assert(f != null);\n      if (opt_obj) {\n        f = goog.bind(f, opt_obj);\n      }\n      return Array.prototype.reduceRight.call(arr, f, val);\n    } :\n    function(arr, f, val, opt_obj) {\n      var rval = val;\n      goog.array.forEachRight(arr, function(val, index) {\n        rval = f.call(/** @type {?} */ (opt_obj), rval, val, index, arr);\n      });\n      return rval;\n    };\n\n\n/**\n * Calls f for each element of an array. If any call returns true, some()\n * returns true (without checking the remaining elements). If all calls\n * return false, some() returns false.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-some}\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call for\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a boolean.\n * @param {S=} opt_obj  The object to be used as the value of 'this'\n *     within f.\n * @return {boolean} true if any element passes the test.\n * @template T,S\n */\ngoog.array.some = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ?\n    function(arr, f, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n\n      return Array.prototype.some.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      var l = arr.length;  // must be fixed during loop... see docs\n      var arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n      for (var i = 0; i < l; i++) {\n        if (i in arr2 && f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n\n/**\n * Call f for each element of an array. If all calls return true, every()\n * returns true. If any call returns false, every() returns false and\n * does not continue to check the remaining elements.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-every}\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call for\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a boolean.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @return {boolean} false if any element fails the test.\n * @template T,S\n */\ngoog.array.every = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ?\n    function(arr, f, opt_obj) {\n      goog.asserts.assert(arr.length != null);\n\n      return Array.prototype.every.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      var l = arr.length;  // must be fixed during loop... see docs\n      var arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n      for (var i = 0; i < l; i++) {\n        if (i in arr2 && !f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n\n/**\n * Counts the array elements that fulfill the predicate, i.e. for which the\n * callback function returns true. Skips holes in the array.\n *\n * @param {!IArrayLike<T>|string} arr Array or array like object\n *     over which to iterate.\n * @param {function(this: S, T, number, ?): boolean} f The function to call for\n *     every element. Takes 3 arguments (the element, the index and the array).\n * @param {S=} opt_obj The object to be used as the value of 'this' within f.\n * @return {number} The number of the matching elements.\n * @template T,S\n */\ngoog.array.count = function(arr, f, opt_obj) {\n  var count = 0;\n  goog.array.forEach(arr, function(element, index, arr) {\n    if (f.call(/** @type {?} */ (opt_obj), element, index, arr)) {\n      ++count;\n    }\n  }, opt_obj);\n  return count;\n};\n\n\n/**\n * Search an array for the first element that satisfies a given condition and\n * return that element.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {T|null} The first array element that passes the test, or null if no\n *     element is found.\n * @template T,S\n */\ngoog.array.find = function(arr, f, opt_obj) {\n  var i = goog.array.findIndex(arr, f, opt_obj);\n  return i < 0 ? null : typeof arr === 'string' ? arr.charAt(i) : arr[i];\n};\n\n\n/**\n * Search an array for the first element that satisfies a given condition and\n * return its index.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call for\n *     every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {number} The index of the first array element that passes the test,\n *     or -1 if no element is found.\n * @template T,S\n */\ngoog.array.findIndex = function(arr, f, opt_obj) {\n  var l = arr.length;  // must be fixed during loop... see docs\n  var arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n  for (var i = 0; i < l; i++) {\n    if (i in arr2 && f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n/**\n * Search an array (in reverse order) for the last element that satisfies a\n * given condition and return that element.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {T|null} The last array element that passes the test, or null if no\n *     element is found.\n * @template T,S\n */\ngoog.array.findRight = function(arr, f, opt_obj) {\n  var i = goog.array.findIndexRight(arr, f, opt_obj);\n  return i < 0 ? null : typeof arr === 'string' ? arr.charAt(i) : arr[i];\n};\n\n\n/**\n * Search an array (in reverse order) for the last element that satisfies a\n * given condition and return its index.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {number} The index of the last array element that passes the test,\n *     or -1 if no element is found.\n * @template T,S\n */\ngoog.array.findIndexRight = function(arr, f, opt_obj) {\n  var l = arr.length;  // must be fixed during loop... see docs\n  var arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n  for (var i = l - 1; i >= 0; i--) {\n    if (i in arr2 && f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n/**\n * Whether the array contains the given object.\n * @param {IArrayLike<?>|string} arr The array to test for the presence of the\n *     element.\n * @param {*} obj The object for which to test.\n * @return {boolean} true if obj is present.\n */\ngoog.array.contains = function(arr, obj) {\n  return goog.array.indexOf(arr, obj) >= 0;\n};\n\n\n/**\n * Whether the array is empty.\n * @param {IArrayLike<?>|string} arr The array to test.\n * @return {boolean} true if empty.\n */\ngoog.array.isEmpty = function(arr) {\n  return arr.length == 0;\n};\n\n\n/**\n * Clears the array.\n * @param {IArrayLike<?>} arr Array or array like object to clear.\n */\ngoog.array.clear = function(arr) {\n  // For non real arrays we don't have the magic length so we delete the\n  // indices.\n  if (!goog.isArray(arr)) {\n    for (var i = arr.length - 1; i >= 0; i--) {\n      delete arr[i];\n    }\n  }\n  arr.length = 0;\n};\n\n\n/**\n * Pushes an item into an array, if it's not already in the array.\n * @param {Array<T>} arr Array into which to insert the item.\n * @param {T} obj Value to add.\n * @template T\n */\ngoog.array.insert = function(arr, obj) {\n  if (!goog.array.contains(arr, obj)) {\n    arr.push(obj);\n  }\n};\n\n\n/**\n * Inserts an object at the given index of the array.\n * @param {IArrayLike<?>} arr The array to modify.\n * @param {*} obj The object to insert.\n * @param {number=} opt_i The index at which to insert the object. If omitted,\n *      treated as 0. A negative index is counted from the end of the array.\n */\ngoog.array.insertAt = function(arr, obj, opt_i) {\n  goog.array.splice(arr, opt_i, 0, obj);\n};\n\n\n/**\n * Inserts at the given index of the array, all elements of another array.\n * @param {IArrayLike<?>} arr The array to modify.\n * @param {IArrayLike<?>} elementsToAdd The array of elements to add.\n * @param {number=} opt_i The index at which to insert the object. If omitted,\n *      treated as 0. A negative index is counted from the end of the array.\n */\ngoog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {\n  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);\n};\n\n\n/**\n * Inserts an object into an array before a specified object.\n * @param {Array<T>} arr The array to modify.\n * @param {T} obj The object to insert.\n * @param {T=} opt_obj2 The object before which obj should be inserted. If obj2\n *     is omitted or not found, obj is inserted at the end of the array.\n * @template T\n */\ngoog.array.insertBefore = function(arr, obj, opt_obj2) {\n  var i;\n  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {\n    arr.push(obj);\n  } else {\n    goog.array.insertAt(arr, obj, i);\n  }\n};\n\n\n/**\n * Removes the first occurrence of a particular value from an array.\n * @param {IArrayLike<T>} arr Array from which to remove\n *     value.\n * @param {T} obj Object to remove.\n * @return {boolean} True if an element was removed.\n * @template T\n */\ngoog.array.remove = function(arr, obj) {\n  var i = goog.array.indexOf(arr, obj);\n  var rv;\n  if ((rv = i >= 0)) {\n    goog.array.removeAt(arr, i);\n  }\n  return rv;\n};\n\n\n/**\n * Removes the last occurrence of a particular value from an array.\n * @param {!IArrayLike<T>} arr Array from which to remove value.\n * @param {T} obj Object to remove.\n * @return {boolean} True if an element was removed.\n * @template T\n */\ngoog.array.removeLast = function(arr, obj) {\n  var i = goog.array.lastIndexOf(arr, obj);\n  if (i >= 0) {\n    goog.array.removeAt(arr, i);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Removes from an array the element at index i\n * @param {IArrayLike<?>} arr Array or array like object from which to\n *     remove value.\n * @param {number} i The index to remove.\n * @return {boolean} True if an element was removed.\n */\ngoog.array.removeAt = function(arr, i) {\n  goog.asserts.assert(arr.length != null);\n\n  // use generic form of splice\n  // splice returns the removed items and if successful the length of that\n  // will be 1\n  return Array.prototype.splice.call(arr, i, 1).length == 1;\n};\n\n\n/**\n * Removes the first value that satisfies the given condition.\n * @param {IArrayLike<T>} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {boolean} True if an element was removed.\n * @template T,S\n */\ngoog.array.removeIf = function(arr, f, opt_obj) {\n  var i = goog.array.findIndex(arr, f, opt_obj);\n  if (i >= 0) {\n    goog.array.removeAt(arr, i);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Removes all values that satisfy the given condition.\n * @param {IArrayLike<T>} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {number} The number of items removed\n * @template T,S\n */\ngoog.array.removeAllIf = function(arr, f, opt_obj) {\n  var removedCount = 0;\n  goog.array.forEachRight(arr, function(val, index) {\n    if (f.call(/** @type {?} */ (opt_obj), val, index, arr)) {\n      if (goog.array.removeAt(arr, index)) {\n        removedCount++;\n      }\n    }\n  });\n  return removedCount;\n};\n\n\n/**\n * Returns a new array that is the result of joining the arguments.  If arrays\n * are passed then their items are added, however, if non-arrays are passed they\n * will be added to the return array as is.\n *\n * Note that ArrayLike objects will be added as is, rather than having their\n * items added.\n *\n * goog.array.concat([1, 2], [3, 4]) -> [1, 2, 3, 4]\n * goog.array.concat(0, [1, 2]) -> [0, 1, 2]\n * goog.array.concat([1, 2], null) -> [1, 2, null]\n *\n * There is bug in all current versions of IE (6, 7 and 8) where arrays created\n * in an iframe become corrupted soon (not immediately) after the iframe is\n * destroyed. This is common if loading data via goog.net.IframeIo, for example.\n * This corruption only affects the concat method which will start throwing\n * Catastrophic Errors (#-2147418113).\n *\n * See http://endoflow.com/scratch/corrupted-arrays.html for a test case.\n *\n * Internally goog.array should use this, so that all methods will continue to\n * work on these broken array objects.\n *\n * @param {...*} var_args Items to concatenate.  Arrays will have each item\n *     added, while primitives and objects will be added as is.\n * @return {!Array<?>} The new resultant array.\n */\ngoog.array.concat = function(var_args) {\n  return Array.prototype.concat.apply([], arguments);\n};\n\n\n/**\n * Returns a new array that contains the contents of all the arrays passed.\n * @param {...!Array<T>} var_args\n * @return {!Array<T>}\n * @template T\n */\ngoog.array.join = function(var_args) {\n  return Array.prototype.concat.apply([], arguments);\n};\n\n\n/**\n * Converts an object to an array.\n * @param {IArrayLike<T>|string} object  The object to convert to an\n *     array.\n * @return {!Array<T>} The object converted into an array. If object has a\n *     length property, every property indexed with a non-negative number\n *     less than length will be included in the result. If object does not\n *     have a length property, an empty array will be returned.\n * @template T\n */\ngoog.array.toArray = function(object) {\n  var length = object.length;\n\n  // If length is not a number the following is false. This case is kept for\n  // backwards compatibility since there are callers that pass objects that are\n  // not array like.\n  if (length > 0) {\n    var rv = new Array(length);\n    for (var i = 0; i < length; i++) {\n      rv[i] = object[i];\n    }\n    return rv;\n  }\n  return [];\n};\n\n\n/**\n * Does a shallow copy of an array.\n * @param {IArrayLike<T>|string} arr  Array or array-like object to\n *     clone.\n * @return {!Array<T>} Clone of the input array.\n * @template T\n */\ngoog.array.clone = goog.array.toArray;\n\n\n/**\n * Extends an array with another array, element, or \"array like\" object.\n * This function operates 'in-place', it does not create a new Array.\n *\n * Example:\n * var a = [];\n * goog.array.extend(a, [0, 1]);\n * a; // [0, 1]\n * goog.array.extend(a, 2);\n * a; // [0, 1, 2]\n *\n * @param {Array<VALUE>} arr1  The array to modify.\n * @param {...(IArrayLike<VALUE>|VALUE)} var_args The elements or arrays of\n *     elements to add to arr1.\n * @template VALUE\n */\ngoog.array.extend = function(arr1, var_args) {\n  for (var i = 1; i < arguments.length; i++) {\n    var arr2 = arguments[i];\n    if (goog.isArrayLike(arr2)) {\n      var len1 = arr1.length || 0;\n      var len2 = arr2.length || 0;\n      arr1.length = len1 + len2;\n      for (var j = 0; j < len2; j++) {\n        arr1[len1 + j] = arr2[j];\n      }\n    } else {\n      arr1.push(arr2);\n    }\n  }\n};\n\n\n/**\n * Adds or removes elements from an array. This is a generic version of Array\n * splice. This means that it might work on other objects similar to arrays,\n * such as the arguments object.\n *\n * @param {IArrayLike<T>} arr The array to modify.\n * @param {number|undefined} index The index at which to start changing the\n *     array. If not defined, treated as 0.\n * @param {number} howMany How many elements to remove (0 means no removal. A\n *     value below 0 is treated as zero and so is any other non number. Numbers\n *     are floored).\n * @param {...T} var_args Optional, additional elements to insert into the\n *     array.\n * @return {!Array<T>} the removed elements.\n * @template T\n */\ngoog.array.splice = function(arr, index, howMany, var_args) {\n  goog.asserts.assert(arr.length != null);\n\n  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));\n};\n\n\n/**\n * Returns a new array from a segment of an array. This is a generic version of\n * Array slice. This means that it might work on other objects similar to\n * arrays, such as the arguments object.\n *\n * @param {IArrayLike<T>|string} arr The array from\n * which to copy a segment.\n * @param {number} start The index of the first element to copy.\n * @param {number=} opt_end The index after the last element to copy.\n * @return {!Array<T>} A new array containing the specified segment of the\n *     original array.\n * @template T\n */\ngoog.array.slice = function(arr, start, opt_end) {\n  goog.asserts.assert(arr.length != null);\n\n  // passing 1 arg to slice is not the same as passing 2 where the second is\n  // null or undefined (in that case the second argument is treated as 0).\n  // we could use slice on the arguments object and then use apply instead of\n  // testing the length\n  if (arguments.length <= 2) {\n    return Array.prototype.slice.call(arr, start);\n  } else {\n    return Array.prototype.slice.call(arr, start, opt_end);\n  }\n};\n\n\n/**\n * Removes all duplicates from an array (retaining only the first\n * occurrence of each array element).  This function modifies the\n * array in place and doesn't change the order of the non-duplicate items.\n *\n * For objects, duplicates are identified as having the same unique ID as\n * defined by {@link goog.getUid}.\n *\n * Alternatively you can specify a custom hash function that returns a unique\n * value for each item in the array it should consider unique.\n *\n * Runtime: N,\n * Worstcase space: 2N (no dupes)\n *\n * @param {IArrayLike<T>} arr The array from which to remove\n *     duplicates.\n * @param {Array=} opt_rv An optional array in which to return the results,\n *     instead of performing the removal inplace.  If specified, the original\n *     array will remain unchanged.\n * @param {function(T):string=} opt_hashFn An optional function to use to\n *     apply to every item in the array. This function should return a unique\n *     value for each item in the array it should consider unique.\n * @template T\n */\ngoog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {\n  var returnArray = opt_rv || arr;\n  var defaultHashFn = function(item) {\n    // Prefix each type with a single character representing the type to\n    // prevent conflicting keys (e.g. true and 'true').\n    return goog.isObject(item) ? 'o' + goog.getUid(item) :\n                                 (typeof item).charAt(0) + item;\n  };\n  var hashFn = opt_hashFn || defaultHashFn;\n\n  var seen = {}, cursorInsert = 0, cursorRead = 0;\n  while (cursorRead < arr.length) {\n    var current = arr[cursorRead++];\n    var key = hashFn(current);\n    if (!Object.prototype.hasOwnProperty.call(seen, key)) {\n      seen[key] = true;\n      returnArray[cursorInsert++] = current;\n    }\n  }\n  returnArray.length = cursorInsert;\n};\n\n\n/**\n * Searches the specified array for the specified target using the binary\n * search algorithm.  If no opt_compareFn is specified, elements are compared\n * using <code>goog.array.defaultCompare</code>, which compares the elements\n * using the built in < and > operators.  This will produce the expected\n * behavior for homogeneous arrays of String(s) and Number(s). The array\n * specified <b>must</b> be sorted in ascending order (as defined by the\n * comparison function).  If the array is not sorted, results are undefined.\n * If the array contains multiple instances of the specified target value, the\n * left-most instance will be found.\n *\n * Runtime: O(log n)\n *\n * @param {IArrayLike<VALUE>} arr The array to be searched.\n * @param {TARGET} target The sought value.\n * @param {function(TARGET, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is ordered. Should take 2 arguments to\n *     compare, the target value and an element from your array, and return a\n *     negative number, zero, or a positive number depending on whether the\n *     first argument is less than, equal to, or greater than the second.\n * @return {number} Lowest index of the target value if found, otherwise\n *     (-(insertion point) - 1). The insertion point is where the value should\n *     be inserted into arr to preserve the sorted property.  Return value >= 0\n *     iff target is found.\n * @template TARGET, VALUE\n */\ngoog.array.binarySearch = function(arr, target, opt_compareFn) {\n  return goog.array.binarySearch_(\n      arr, opt_compareFn || goog.array.defaultCompare, false /* isEvaluator */,\n      target);\n};\n\n\n/**\n * Selects an index in the specified array using the binary search algorithm.\n * The evaluator receives an element and determines whether the desired index\n * is before, at, or after it.  The evaluator must be consistent (formally,\n * goog.array.map(goog.array.map(arr, evaluator, opt_obj), goog.math.sign)\n * must be monotonically non-increasing).\n *\n * Runtime: O(log n)\n *\n * @param {IArrayLike<VALUE>} arr The array to be searched.\n * @param {function(this:THIS, VALUE, number, ?): number} evaluator\n *     Evaluator function that receives 3 arguments (the element, the index and\n *     the array). Should return a negative number, zero, or a positive number\n *     depending on whether the desired index is before, at, or after the\n *     element passed to it.\n * @param {THIS=} opt_obj The object to be used as the value of 'this'\n *     within evaluator.\n * @return {number} Index of the leftmost element matched by the evaluator, if\n *     such exists; otherwise (-(insertion point) - 1). The insertion point is\n *     the index of the first element for which the evaluator returns negative,\n *     or arr.length if no such element exists. The return value is non-negative\n *     iff a match is found.\n * @template THIS, VALUE\n */\ngoog.array.binarySelect = function(arr, evaluator, opt_obj) {\n  return goog.array.binarySearch_(\n      arr, evaluator, true /* isEvaluator */, undefined /* opt_target */,\n      opt_obj);\n};\n\n\n/**\n * Implementation of a binary search algorithm which knows how to use both\n * comparison functions and evaluators. If an evaluator is provided, will call\n * the evaluator with the given optional data object, conforming to the\n * interface defined in binarySelect. Otherwise, if a comparison function is\n * provided, will call the comparison function against the given data object.\n *\n * This implementation purposefully does not use goog.bind or goog.partial for\n * performance reasons.\n *\n * Runtime: O(log n)\n *\n * @param {IArrayLike<?>} arr The array to be searched.\n * @param {function(?, ?, ?): number | function(?, ?): number} compareFn\n *     Either an evaluator or a comparison function, as defined by binarySearch\n *     and binarySelect above.\n * @param {boolean} isEvaluator Whether the function is an evaluator or a\n *     comparison function.\n * @param {?=} opt_target If the function is a comparison function, then\n *     this is the target to binary search for.\n * @param {Object=} opt_selfObj If the function is an evaluator, this is an\n *     optional this object for the evaluator.\n * @return {number} Lowest index of the target value if found, otherwise\n *     (-(insertion point) - 1). The insertion point is where the value should\n *     be inserted into arr to preserve the sorted property.  Return value >= 0\n *     iff target is found.\n * @private\n */\ngoog.array.binarySearch_ = function(\n    arr, compareFn, isEvaluator, opt_target, opt_selfObj) {\n  var left = 0;            // inclusive\n  var right = arr.length;  // exclusive\n  var found;\n  while (left < right) {\n    var middle = left + ((right - left) >>> 1);\n    var compareResult;\n    if (isEvaluator) {\n      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);\n    } else {\n      // NOTE(dimvar): To avoid this cast, we'd have to use function overloading\n      // for the type of binarySearch_, which the type system can't express yet.\n      compareResult = /** @type {function(?, ?): number} */ (compareFn)(\n          opt_target, arr[middle]);\n    }\n    if (compareResult > 0) {\n      left = middle + 1;\n    } else {\n      right = middle;\n      // We are looking for the lowest index so we can't return immediately.\n      found = !compareResult;\n    }\n  }\n  // left is the index if found, or the insertion point otherwise.\n  // Avoiding bitwise not operator, as that causes a loss in precision for array\n  // indexes outside the bounds of a 32-bit signed integer.  Array indexes have\n  // a maximum value of 2^32-2 https://tc39.es/ecma262/#array-index\n  return found ? left : -left - 1;\n};\n\n\n/**\n * Sorts the specified array into ascending order.  If no opt_compareFn is\n * specified, elements are compared using\n * <code>goog.array.defaultCompare</code>, which compares the elements using\n * the built in < and > operators.  This will produce the expected behavior\n * for homogeneous arrays of String(s) and Number(s), unlike the native sort,\n * but will give unpredictable results for heterogeneous lists of strings and\n * numbers with different numbers of digits.\n *\n * This sort is not guaranteed to be stable.\n *\n * Runtime: Same as <code>Array.prototype.sort</code>\n *\n * @param {Array<T>} arr The array to be sorted.\n * @param {?function(T,T):number=} opt_compareFn Optional comparison\n *     function by which the\n *     array is to be ordered. Should take 2 arguments to compare, and return a\n *     negative number, zero, or a positive number depending on whether the\n *     first argument is less than, equal to, or greater than the second.\n * @template T\n */\ngoog.array.sort = function(arr, opt_compareFn) {\n  // TODO(arv): Update type annotation since null is not accepted.\n  arr.sort(opt_compareFn || goog.array.defaultCompare);\n};\n\n\n/**\n * Sorts the specified array into ascending order in a stable way.  If no\n * opt_compareFn is specified, elements are compared using\n * <code>goog.array.defaultCompare</code>, which compares the elements using\n * the built in < and > operators.  This will produce the expected behavior\n * for homogeneous arrays of String(s) and Number(s).\n *\n * Runtime: Same as <code>Array.prototype.sort</code>, plus an additional\n * O(n) overhead of copying the array twice.\n *\n * @param {Array<T>} arr The array to be sorted.\n * @param {?function(T, T): number=} opt_compareFn Optional comparison function\n *     by which the array is to be ordered. Should take 2 arguments to compare,\n *     and return a negative number, zero, or a positive number depending on\n *     whether the first argument is less than, equal to, or greater than the\n *     second.\n * @template T\n */\ngoog.array.stableSort = function(arr, opt_compareFn) {\n  var compArr = new Array(arr.length);\n  for (var i = 0; i < arr.length; i++) {\n    compArr[i] = {index: i, value: arr[i]};\n  }\n  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;\n  function stableCompareFn(obj1, obj2) {\n    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;\n  }\n  goog.array.sort(compArr, stableCompareFn);\n  for (var i = 0; i < arr.length; i++) {\n    arr[i] = compArr[i].value;\n  }\n};\n\n\n/**\n * Sort the specified array into ascending order based on item keys\n * returned by the specified key function.\n * If no opt_compareFn is specified, the keys are compared in ascending order\n * using <code>goog.array.defaultCompare</code>.\n *\n * Runtime: O(S(f(n)), where S is runtime of <code>goog.array.sort</code>\n * and f(n) is runtime of the key function.\n *\n * @param {Array<T>} arr The array to be sorted.\n * @param {function(T): K} keyFn Function taking array element and returning\n *     a key used for sorting this element.\n * @param {?function(K, K): number=} opt_compareFn Optional comparison function\n *     by which the keys are to be ordered. Should take 2 arguments to compare,\n *     and return a negative number, zero, or a positive number depending on\n *     whether the first argument is less than, equal to, or greater than the\n *     second.\n * @template T,K\n */\ngoog.array.sortByKey = function(arr, keyFn, opt_compareFn) {\n  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;\n  goog.array.sort(\n      arr, function(a, b) { return keyCompareFn(keyFn(a), keyFn(b)); });\n};\n\n\n/**\n * Sorts an array of objects by the specified object key and compare\n * function. If no compare function is provided, the key values are\n * compared in ascending order using <code>goog.array.defaultCompare</code>.\n * This won't work for keys that get renamed by the compiler. So use\n * {'foo': 1, 'bar': 2} rather than {foo: 1, bar: 2}.\n * @param {Array<Object>} arr An array of objects to sort.\n * @param {string} key The object key to sort by.\n * @param {Function=} opt_compareFn The function to use to compare key\n *     values.\n */\ngoog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {\n  goog.array.sortByKey(arr, function(obj) { return obj[key]; }, opt_compareFn);\n};\n\n\n/**\n * Tells if the array is sorted.\n * @param {!IArrayLike<T>} arr The array.\n * @param {?function(T,T):number=} opt_compareFn Function to compare the\n *     array elements.\n *     Should take 2 arguments to compare, and return a negative number, zero,\n *     or a positive number depending on whether the first argument is less\n *     than, equal to, or greater than the second.\n * @param {boolean=} opt_strict If true no equal elements are allowed.\n * @return {boolean} Whether the array is sorted.\n * @template T\n */\ngoog.array.isSorted = function(arr, opt_compareFn, opt_strict) {\n  var compare = opt_compareFn || goog.array.defaultCompare;\n  for (var i = 1; i < arr.length; i++) {\n    var compareResult = compare(arr[i - 1], arr[i]);\n    if (compareResult > 0 || compareResult == 0 && opt_strict) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * Compares two arrays for equality. Two arrays are considered equal if they\n * have the same length and their corresponding elements are equal according to\n * the comparison function.\n *\n * @param {IArrayLike<?>} arr1 The first array to compare.\n * @param {IArrayLike<?>} arr2 The second array to compare.\n * @param {Function=} opt_equalsFn Optional comparison function.\n *     Should take 2 arguments to compare, and return true if the arguments\n *     are equal. Defaults to {@link goog.array.defaultCompareEquality} which\n *     compares the elements using the built-in '===' operator.\n * @return {boolean} Whether the two arrays are equal.\n */\ngoog.array.equals = function(arr1, arr2, opt_equalsFn) {\n  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) ||\n      arr1.length != arr2.length) {\n    return false;\n  }\n  var l = arr1.length;\n  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;\n  for (var i = 0; i < l; i++) {\n    if (!equalsFn(arr1[i], arr2[i])) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * 3-way array compare function.\n * @param {!IArrayLike<VALUE>} arr1 The first array to\n *     compare.\n * @param {!IArrayLike<VALUE>} arr2 The second array to\n *     compare.\n * @param {function(VALUE, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is to be ordered. Should take 2 arguments to\n *     compare, and return a negative number, zero, or a positive number\n *     depending on whether the first argument is less than, equal to, or\n *     greater than the second.\n * @return {number} Negative number, zero, or a positive number depending on\n *     whether the first argument is less than, equal to, or greater than the\n *     second.\n * @template VALUE\n */\ngoog.array.compare3 = function(arr1, arr2, opt_compareFn) {\n  var compare = opt_compareFn || goog.array.defaultCompare;\n  var l = Math.min(arr1.length, arr2.length);\n  for (var i = 0; i < l; i++) {\n    var result = compare(arr1[i], arr2[i]);\n    if (result != 0) {\n      return result;\n    }\n  }\n  return goog.array.defaultCompare(arr1.length, arr2.length);\n};\n\n\n/**\n * Compares its two arguments for order, using the built in < and >\n * operators.\n * @param {VALUE} a The first object to be compared.\n * @param {VALUE} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second,\n *     respectively.\n * @template VALUE\n */\ngoog.array.defaultCompare = function(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n};\n\n\n/**\n * Compares its two arguments for inverse order, using the built in < and >\n * operators.\n * @param {VALUE} a The first object to be compared.\n * @param {VALUE} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second,\n *     respectively.\n * @template VALUE\n */\ngoog.array.inverseDefaultCompare = function(a, b) {\n  return -goog.array.defaultCompare(a, b);\n};\n\n\n/**\n * Compares its two arguments for equality, using the built in === operator.\n * @param {*} a The first object to compare.\n * @param {*} b The second object to compare.\n * @return {boolean} True if the two arguments are equal, false otherwise.\n */\ngoog.array.defaultCompareEquality = function(a, b) {\n  return a === b;\n};\n\n\n/**\n * Inserts a value into a sorted array. The array is not modified if the\n * value is already present.\n * @param {IArrayLike<VALUE>} array The array to modify.\n * @param {VALUE} value The object to insert.\n * @param {function(VALUE, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is ordered. Should take 2 arguments to\n *     compare, and return a negative number, zero, or a positive number\n *     depending on whether the first argument is less than, equal to, or\n *     greater than the second.\n * @return {boolean} True if an element was inserted.\n * @template VALUE\n */\ngoog.array.binaryInsert = function(array, value, opt_compareFn) {\n  var index = goog.array.binarySearch(array, value, opt_compareFn);\n  if (index < 0) {\n    goog.array.insertAt(array, value, -(index + 1));\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Removes a value from a sorted array.\n * @param {!IArrayLike<VALUE>} array The array to modify.\n * @param {VALUE} value The object to remove.\n * @param {function(VALUE, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is ordered. Should take 2 arguments to\n *     compare, and return a negative number, zero, or a positive number\n *     depending on whether the first argument is less than, equal to, or\n *     greater than the second.\n * @return {boolean} True if an element was removed.\n * @template VALUE\n */\ngoog.array.binaryRemove = function(array, value, opt_compareFn) {\n  var index = goog.array.binarySearch(array, value, opt_compareFn);\n  return (index >= 0) ? goog.array.removeAt(array, index) : false;\n};\n\n\n/**\n * Splits an array into disjoint buckets according to a splitting function.\n * @param {IArrayLike<T>} array The array.\n * @param {function(this:S, T, number, !IArrayLike<T>):?} sorter Function to\n *     call for every element.  This takes 3 arguments (the element, the index\n *     and the array) and must return a valid object key (a string, number,\n *     etc), or undefined, if that object should not be placed in a bucket.\n * @param {S=} opt_obj The object to be used as the value of 'this' within\n *     sorter.\n * @return {!Object<!Array<T>>} An object, with keys being all of the unique\n *     return values of sorter, and values being arrays containing the items for\n *     which the splitter returned that key.\n * @template T,S\n */\ngoog.array.bucket = function(array, sorter, opt_obj) {\n  var buckets = {};\n\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i];\n    var key = sorter.call(/** @type {?} */ (opt_obj), value, i, array);\n    if (key !== undefined) {\n      // Push the value to the right bucket, creating it if necessary.\n      var bucket = buckets[key] || (buckets[key] = []);\n      bucket.push(value);\n    }\n  }\n\n  return buckets;\n};\n\n\n/**\n * Creates a new object built from the provided array and the key-generation\n * function.\n * @param {IArrayLike<T>} arr Array or array like object over\n *     which to iterate whose elements will be the values in the new object.\n * @param {?function(this:S, T, number, ?) : string} keyFunc The function to\n *     call for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a string that will be used as the\n *     key for the element in the new object. If the function returns the same\n *     key for more than one element, the value for that key is\n *     implementation-defined.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within keyFunc.\n * @return {!Object<T>} The new object.\n * @template T,S\n */\ngoog.array.toObject = function(arr, keyFunc, opt_obj) {\n  var ret = {};\n  goog.array.forEach(arr, function(element, index) {\n    ret[keyFunc.call(/** @type {?} */ (opt_obj), element, index, arr)] =\n        element;\n  });\n  return ret;\n};\n\n\n/**\n * Creates a range of numbers in an arithmetic progression.\n *\n * Range takes 1, 2, or 3 arguments:\n * <pre>\n * range(5) is the same as range(0, 5, 1) and produces [0, 1, 2, 3, 4]\n * range(2, 5) is the same as range(2, 5, 1) and produces [2, 3, 4]\n * range(-2, -5, -1) produces [-2, -3, -4]\n * range(-2, -5, 1) produces [], since stepping by 1 wouldn't ever reach -5.\n * </pre>\n *\n * @param {number} startOrEnd The starting value of the range if an end argument\n *     is provided. Otherwise, the start value is 0, and this is the end value.\n * @param {number=} opt_end The optional end value of the range.\n * @param {number=} opt_step The step size between range values. Defaults to 1\n *     if opt_step is undefined or 0.\n * @return {!Array<number>} An array of numbers for the requested range. May be\n *     an empty array if adding the step would not converge toward the end\n *     value.\n */\ngoog.array.range = function(startOrEnd, opt_end, opt_step) {\n  var array = [];\n  var start = 0;\n  var end = startOrEnd;\n  var step = opt_step || 1;\n  if (opt_end !== undefined) {\n    start = startOrEnd;\n    end = opt_end;\n  }\n\n  if (step * (end - start) < 0) {\n    // Sign mismatch: start + step will never reach the end value.\n    return [];\n  }\n\n  if (step > 0) {\n    for (var i = start; i < end; i += step) {\n      array.push(i);\n    }\n  } else {\n    for (var i = start; i > end; i += step) {\n      array.push(i);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Returns an array consisting of the given value repeated N times.\n *\n * @param {VALUE} value The value to repeat.\n * @param {number} n The repeat count.\n * @return {!Array<VALUE>} An array with the repeated value.\n * @template VALUE\n */\ngoog.array.repeat = function(value, n) {\n  var array = [];\n  for (var i = 0; i < n; i++) {\n    array[i] = value;\n  }\n  return array;\n};\n\n\n/**\n * Returns an array consisting of every argument with all arrays\n * expanded in-place recursively.\n *\n * @param {...*} var_args The values to flatten.\n * @return {!Array<?>} An array containing the flattened values.\n */\ngoog.array.flatten = function(var_args) {\n  var CHUNK_SIZE = 8192;\n\n  var result = [];\n  for (var i = 0; i < arguments.length; i++) {\n    var element = arguments[i];\n    if (goog.isArray(element)) {\n      for (var c = 0; c < element.length; c += CHUNK_SIZE) {\n        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);\n        var recurseResult = goog.array.flatten.apply(null, chunk);\n        for (var r = 0; r < recurseResult.length; r++) {\n          result.push(recurseResult[r]);\n        }\n      }\n    } else {\n      result.push(element);\n    }\n  }\n  return result;\n};\n\n\n/**\n * Rotates an array in-place. After calling this method, the element at\n * index i will be the element previously at index (i - n) %\n * array.length, for all values of i between 0 and array.length - 1,\n * inclusive.\n *\n * For example, suppose list comprises [t, a, n, k, s]. After invoking\n * rotate(array, 1) (or rotate(array, -4)), array will comprise [s, t, a, n, k].\n *\n * @param {!Array<T>} array The array to rotate.\n * @param {number} n The amount to rotate.\n * @return {!Array<T>} The array.\n * @template T\n */\ngoog.array.rotate = function(array, n) {\n  goog.asserts.assert(array.length != null);\n\n  if (array.length) {\n    n %= array.length;\n    if (n > 0) {\n      Array.prototype.unshift.apply(array, array.splice(-n, n));\n    } else if (n < 0) {\n      Array.prototype.push.apply(array, array.splice(0, -n));\n    }\n  }\n  return array;\n};\n\n\n/**\n * Moves one item of an array to a new position keeping the order of the rest\n * of the items. Example use case: keeping a list of JavaScript objects\n * synchronized with the corresponding list of DOM elements after one of the\n * elements has been dragged to a new position.\n * @param {!IArrayLike<?>} arr The array to modify.\n * @param {number} fromIndex Index of the item to move between 0 and\n *     {@code arr.length - 1}.\n * @param {number} toIndex Target index between 0 and {@code arr.length - 1}.\n */\ngoog.array.moveItem = function(arr, fromIndex, toIndex) {\n  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);\n  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);\n  // Remove 1 item at fromIndex.\n  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);\n  // Insert the removed item at toIndex.\n  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);\n  // We don't use goog.array.insertAt and goog.array.removeAt, because they're\n  // significantly slower than splice.\n};\n\n\n/**\n * Creates a new array for which the element at position i is an array of the\n * ith element of the provided arrays.  The returned array will only be as long\n * as the shortest array provided; additional values are ignored.  For example,\n * the result of zipping [1, 2] and [3, 4, 5] is [[1,3], [2, 4]].\n *\n * This is similar to the zip() function in Python.  See {@link\n * http://docs.python.org/library/functions.html#zip}\n *\n * @param {...!IArrayLike<?>} var_args Arrays to be combined.\n * @return {!Array<!Array<?>>} A new array of arrays created from\n *     provided arrays.\n */\ngoog.array.zip = function(var_args) {\n  if (!arguments.length) {\n    return [];\n  }\n  var result = [];\n  var minLen = arguments[0].length;\n  for (var i = 1; i < arguments.length; i++) {\n    if (arguments[i].length < minLen) {\n      minLen = arguments[i].length;\n    }\n  }\n  for (var i = 0; i < minLen; i++) {\n    var value = [];\n    for (var j = 0; j < arguments.length; j++) {\n      value.push(arguments[j][i]);\n    }\n    result.push(value);\n  }\n  return result;\n};\n\n\n/**\n * Shuffles the values in the specified array using the Fisher-Yates in-place\n * shuffle (also known as the Knuth Shuffle). By default, calls Math.random()\n * and so resets the state of that random number generator. Similarly, may reset\n * the state of any other specified random number generator.\n *\n * Runtime: O(n)\n *\n * @param {!Array<?>} arr The array to be shuffled.\n * @param {function():number=} opt_randFn Optional random function to use for\n *     shuffling.\n *     Takes no arguments, and returns a random number on the interval [0, 1).\n *     Defaults to Math.random() using JavaScript's built-in Math library.\n */\ngoog.array.shuffle = function(arr, opt_randFn) {\n  var randFn = opt_randFn || Math.random;\n\n  for (var i = arr.length - 1; i > 0; i--) {\n    // Choose a random array index in [0, i] (inclusive with i).\n    var j = Math.floor(randFn() * (i + 1));\n\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n  }\n};\n\n\n/**\n * Returns a new array of elements from arr, based on the indexes of elements\n * provided by index_arr. For example, the result of index copying\n * ['a', 'b', 'c'] with index_arr [1,0,0,2] is ['b', 'a', 'a', 'c'].\n *\n * @param {!IArrayLike<T>} arr The array to get a indexed copy from.\n * @param {!IArrayLike<number>} index_arr An array of indexes to get from arr.\n * @return {!Array<T>} A new array of elements from arr in index_arr order.\n * @template T\n */\ngoog.array.copyByIndex = function(arr, index_arr) {\n  var result = [];\n  goog.array.forEach(index_arr, function(index) { result.push(arr[index]); });\n  return result;\n};\n\n\n/**\n * Maps each element of the input array into zero or more elements of the output\n * array.\n *\n * @param {!IArrayLike<VALUE>|string} arr Array or array like object\n *     over which to iterate.\n * @param {function(this:THIS, VALUE, number, ?): !Array<RESULT>} f The function\n *     to call for every element. This function takes 3 arguments (the element,\n *     the index and the array) and should return an array. The result will be\n *     used to extend a new array.\n * @param {THIS=} opt_obj The object to be used as the value of 'this' within f.\n * @return {!Array<RESULT>} a new array with the concatenation of all arrays\n *     returned from f.\n * @template THIS, VALUE, RESULT\n */\ngoog.array.concatMap = function(arr, f, opt_obj) {\n  return goog.array.concat.apply([], goog.array.map(arr, f, opt_obj));\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview String functions called from Closure packages that couldn't\n * depend on each other. Outside Closure, use goog.string function which\n * delegate to these.\n */\n\n\ngoog.provide('goog.string.internal');\n\n\n/**\n * Fast prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix A string to look for at the start of `str`.\n * @return {boolean} True if `str` begins with `prefix`.\n * @see goog.string.startsWith\n */\ngoog.string.internal.startsWith = function(str, prefix) {\n  return str.lastIndexOf(prefix, 0) == 0;\n};\n\n\n/**\n * Fast suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix`.\n * @see goog.string.endsWith\n */\ngoog.string.internal.endsWith = function(str, suffix) {\n  const l = str.length - suffix.length;\n  return l >= 0 && str.indexOf(suffix, l) == l;\n};\n\n\n/**\n * Case-insensitive prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix  A string to look for at the end of `str`.\n * @return {boolean} True if `str` begins with `prefix` (ignoring\n *     case).\n * @see goog.string.caseInsensitiveStartsWith\n */\ngoog.string.internal.caseInsensitiveStartsWith = function(str, prefix) {\n  return goog.string.internal.caseInsensitiveCompare(\n             prefix, str.substr(0, prefix.length)) == 0;\n};\n\n\n/**\n * Case-insensitive suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix` (ignoring\n *     case).\n * @see goog.string.caseInsensitiveEndsWith\n */\ngoog.string.internal.caseInsensitiveEndsWith = function(str, suffix) {\n  return (\n      goog.string.internal.caseInsensitiveCompare(\n          suffix, str.substr(str.length - suffix.length, suffix.length)) == 0);\n};\n\n\n/**\n * Case-insensitive equality checker.\n * @param {string} str1 First string to check.\n * @param {string} str2 Second string to check.\n * @return {boolean} True if `str1` and `str2` are the same string,\n *     ignoring case.\n * @see goog.string.caseInsensitiveEquals\n */\ngoog.string.internal.caseInsensitiveEquals = function(str1, str2) {\n  return str1.toLowerCase() == str2.toLowerCase();\n};\n\n\n/**\n * Checks if a string is empty or contains only whitespaces.\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty or whitespace only.\n * @see goog.string.isEmptyOrWhitespace\n */\ngoog.string.internal.isEmptyOrWhitespace = function(str) {\n  // testing length == 0 first is actually slower in all browsers (about the\n  // same in Opera).\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return /^[\\s\\xa0]*$/.test(str);\n};\n\n\n/**\n * Trims white spaces to the left and right of a string.\n * @param {string} str The string to trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.internal.trim =\n    (goog.TRUSTED_SITE && String.prototype.trim) ? function(str) {\n      return str.trim();\n    } : function(str) {\n      // Since IE doesn't include non-breaking-space (0xa0) in their \\s\n      // character class (as required by section 7.2 of the ECMAScript spec),\n      // we explicitly include it in the regexp to enforce consistent\n      // cross-browser behavior.\n      // NOTE: We don't use String#replace because it might have side effects\n      // causing this function to not compile to 0 bytes.\n      return /^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(str)[1];\n    };\n\n\n/**\n * A string comparator that ignores case.\n * -1 = str1 less than str2\n *  0 = str1 equals str2\n *  1 = str1 greater than str2\n *\n * @param {string} str1 The string to compare.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} The comparator result, as described above.\n * @see goog.string.caseInsensitiveCompare\n */\ngoog.string.internal.caseInsensitiveCompare = function(str1, str2) {\n  const test1 = String(str1).toLowerCase();\n  const test2 = String(str2).toLowerCase();\n\n  if (test1 < test2) {\n    return -1;\n  } else if (test1 == test2) {\n    return 0;\n  } else {\n    return 1;\n  }\n};\n\n\n/**\n * Converts \\n to <br>s or <br />s.\n * @param {string} str The string in which to convert newlines.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} A copy of `str` with converted newlines.\n * @see goog.string.newLineToBr\n */\ngoog.string.internal.newLineToBr = function(str, opt_xml) {\n  return str.replace(/(\\r\\n|\\r|\\n)/g, opt_xml ? '<br />' : '<br>');\n};\n\n\n/**\n * Escapes double quote '\"' and single quote '\\'' characters in addition to\n * '&', '<', and '>' so that a string can be included in an HTML tag attribute\n * value within double or single quotes.\n * @param {string} str string to be escaped.\n * @param {boolean=} opt_isLikelyToContainHtmlChars\n * @return {string} An escaped copy of `str`.\n * @see goog.string.htmlEscape\n */\ngoog.string.internal.htmlEscape = function(\n    str, opt_isLikelyToContainHtmlChars) {\n  if (opt_isLikelyToContainHtmlChars) {\n    str = str.replace(goog.string.internal.AMP_RE_, '&amp;')\n              .replace(goog.string.internal.LT_RE_, '&lt;')\n              .replace(goog.string.internal.GT_RE_, '&gt;')\n              .replace(goog.string.internal.QUOT_RE_, '&quot;')\n              .replace(goog.string.internal.SINGLE_QUOTE_RE_, '&#39;')\n              .replace(goog.string.internal.NULL_RE_, '&#0;');\n    return str;\n\n  } else {\n    // quick test helps in the case when there are no chars to replace, in\n    // worst case this makes barely a difference to the time taken\n    if (!goog.string.internal.ALL_RE_.test(str)) return str;\n\n    // str.indexOf is faster than regex.test in this case\n    if (str.indexOf('&') != -1) {\n      str = str.replace(goog.string.internal.AMP_RE_, '&amp;');\n    }\n    if (str.indexOf('<') != -1) {\n      str = str.replace(goog.string.internal.LT_RE_, '&lt;');\n    }\n    if (str.indexOf('>') != -1) {\n      str = str.replace(goog.string.internal.GT_RE_, '&gt;');\n    }\n    if (str.indexOf('\"') != -1) {\n      str = str.replace(goog.string.internal.QUOT_RE_, '&quot;');\n    }\n    if (str.indexOf('\\'') != -1) {\n      str = str.replace(goog.string.internal.SINGLE_QUOTE_RE_, '&#39;');\n    }\n    if (str.indexOf('\\x00') != -1) {\n      str = str.replace(goog.string.internal.NULL_RE_, '&#0;');\n    }\n    return str;\n  }\n};\n\n\n/**\n * Regular expression that matches an ampersand, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.AMP_RE_ = /&/g;\n\n\n/**\n * Regular expression that matches a less than sign, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.LT_RE_ = /</g;\n\n\n/**\n * Regular expression that matches a greater than sign, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.GT_RE_ = />/g;\n\n\n/**\n * Regular expression that matches a double quote, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.QUOT_RE_ = /\"/g;\n\n\n/**\n * Regular expression that matches a single quote, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.SINGLE_QUOTE_RE_ = /'/g;\n\n\n/**\n * Regular expression that matches null character, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.NULL_RE_ = /\\x00/g;\n\n\n/**\n * Regular expression that matches any character that needs to be escaped.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.ALL_RE_ = /[\\x00&<>\"']/;\n\n\n/**\n * Do escaping of whitespace to preserve spatial formatting. We use character\n * entity #160 to make it safer for xml.\n * @param {string} str The string in which to escape whitespace.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} An escaped copy of `str`.\n * @see goog.string.whitespaceEscape\n */\ngoog.string.internal.whitespaceEscape = function(str, opt_xml) {\n  // This doesn't use goog.string.preserveSpaces for backwards compatibility.\n  return goog.string.internal.newLineToBr(\n      str.replace(/  /g, ' &#160;'), opt_xml);\n};\n\n\n/**\n * Determines whether a string contains a substring.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n * @see goog.string.contains\n */\ngoog.string.internal.contains = function(str, subString) {\n  return str.indexOf(subString) != -1;\n};\n\n\n/**\n * Determines whether a string contains a substring, ignoring case.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n * @see goog.string.caseInsensitiveContains\n */\ngoog.string.internal.caseInsensitiveContains = function(str, subString) {\n  return goog.string.internal.contains(\n      str.toLowerCase(), subString.toLowerCase());\n};\n\n\n/**\n * Compares two version numbers.\n *\n * @param {string|number} version1 Version of first item.\n * @param {string|number} version2 Version of second item.\n *\n * @return {number}  1 if `version1` is higher.\n *                   0 if arguments are equal.\n *                  -1 if `version2` is higher.\n * @see goog.string.compareVersions\n */\ngoog.string.internal.compareVersions = function(version1, version2) {\n  let order = 0;\n  // Trim leading and trailing whitespace and split the versions into\n  // subversions.\n  const v1Subs = goog.string.internal.trim(String(version1)).split('.');\n  const v2Subs = goog.string.internal.trim(String(version2)).split('.');\n  const subCount = Math.max(v1Subs.length, v2Subs.length);\n\n  // Iterate over the subversions, as long as they appear to be equivalent.\n  for (let subIdx = 0; order == 0 && subIdx < subCount; subIdx++) {\n    let v1Sub = v1Subs[subIdx] || '';\n    let v2Sub = v2Subs[subIdx] || '';\n\n    do {\n      // Split the subversions into pairs of numbers and qualifiers (like 'b').\n      // Two different RegExp objects are use to make it clear the code\n      // is side-effect free\n      const v1Comp = /(\\d*)(\\D*)(.*)/.exec(v1Sub) || ['', '', '', ''];\n      const v2Comp = /(\\d*)(\\D*)(.*)/.exec(v2Sub) || ['', '', '', ''];\n      // Break if there are no more matches.\n      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {\n        break;\n      }\n\n      // Parse the numeric part of the subversion. A missing number is\n      // equivalent to 0.\n      const v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);\n      const v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);\n\n      // Compare the subversion components. The number has the highest\n      // precedence. Next, if the numbers are equal, a subversion without any\n      // qualifier is always higher than a subversion with any qualifier. Next,\n      // the qualifiers are compared as strings.\n      order = goog.string.internal.compareElements_(v1CompNum, v2CompNum) ||\n          goog.string.internal.compareElements_(\n              v1Comp[2].length == 0, v2Comp[2].length == 0) ||\n          goog.string.internal.compareElements_(v1Comp[2], v2Comp[2]);\n      // Stop as soon as an inequality is discovered.\n\n      v1Sub = v1Comp[3];\n      v2Sub = v2Comp[3];\n    } while (order == 0);\n  }\n\n  return order;\n};\n\n\n/**\n * Compares elements of a version number.\n *\n * @param {string|number|boolean} left An element from a version number.\n * @param {string|number|boolean} right An element from a version number.\n *\n * @return {number}  1 if `left` is higher.\n *                   0 if arguments are equal.\n *                  -1 if `right` is higher.\n * @private\n */\ngoog.string.internal.compareElements_ = function(left, right) {\n  if (left < right) {\n    return -1;\n  } else if (left > right) {\n    return 1;\n  }\n  return 0;\n};\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview DOM manipulation and querying routines.\n */\n\ngoog.provide('bot.dom');\n\ngoog.require('bot');\ngoog.require('bot.color');\ngoog.require('bot.dom.core');\ngoog.require('bot.locators.xpath');\ngoog.require('bot.userAgent');\ngoog.require('goog.array');\ngoog.require('goog.dom');\ngoog.require('goog.dom.DomHelper');\ngoog.require('goog.dom.NodeType');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.math');\ngoog.require('goog.math.Coordinate');\ngoog.require('goog.math.Rect');\ngoog.require('goog.string');\ngoog.require('goog.style');\ngoog.require('goog.userAgent');\n\n\n/**\n * Whether Shadow DOM operations are supported by the browser.\n * @const {boolean}\n */\nbot.dom.IS_SHADOW_DOM_ENABLED = (typeof ShadowRoot === 'function');\n\n\n/**\n * Retrieves the active element for a node's owner document.\n * @param {(!Node|!Window)} nodeOrWindow The node whose owner document to get\n *     the active element for.\n * @return {?Element} The active element, if any.\n */\nbot.dom.getActiveElement = function(nodeOrWindow) {\n  var active = goog.dom.getActiveElement(\n      goog.dom.getOwnerDocument(nodeOrWindow));\n  // IE has the habit of returning an empty object from\n  // goog.dom.getActiveElement instead of null.\n  if (goog.userAgent.IE &&\n      active &&\n      typeof active.nodeType === 'undefined') {\n    return null;\n  }\n  return active;\n};\n\n\n/**\n * @const\n */\nbot.dom.isElement = bot.dom.core.isElement;\n\n\n/**\n * Returns whether an element is in an interactable state: whether it is shown\n * to the user, ignoring its opacity, and whether it is enabled.\n *\n * @param {!Element} element The element to check.\n * @return {boolean} Whether the element is interactable.\n * @see bot.dom.isShown.\n * @see bot.dom.isEnabled\n */\nbot.dom.isInteractable = function(element) {\n  return bot.dom.isShown(element, /*ignoreOpacity=*/true) &&\n      bot.dom.isEnabled(element) &&\n      !bot.dom.hasPointerEventsDisabled_(element);\n};\n\n\n/**\n * @param {!Element} element Element.\n * @return {boolean} Whether element is set by the CSS pointer-events property\n *     not to be interactable.\n * @private\n */\nbot.dom.hasPointerEventsDisabled_ = function(element) {\n  if (goog.userAgent.IE ||\n      (goog.userAgent.GECKO && !bot.userAgent.isEngineVersion('1.9.2'))) {\n    // Don't support pointer events\n    return false;\n  }\n  return bot.dom.getEffectiveStyle(element, 'pointer-events') == 'none';\n};\n\n\n/**\n * @const\n */\nbot.dom.isSelectable = bot.dom.core.isSelectable;\n\n\n/**\n * @const\n */\nbot.dom.isSelected = bot.dom.core.isSelected;\n\n\n/**\n * List of the focusable fields, according to\n * http://www.w3.org/TR/html401/interact/scripts.html#adef-onfocus\n * @private {!Array.<!goog.dom.TagName>}\n * @const\n */\nbot.dom.FOCUSABLE_FORM_FIELDS_ = [\n  goog.dom.TagName.A,\n  goog.dom.TagName.AREA,\n  goog.dom.TagName.BUTTON,\n  goog.dom.TagName.INPUT,\n  goog.dom.TagName.LABEL,\n  goog.dom.TagName.SELECT,\n  goog.dom.TagName.TEXTAREA\n];\n\n\n/**\n * Returns whether a node is a focusable element.  An element may receive focus\n * if it is a form field, has a non-negative tabindex, or is editable.\n * @param {!Element} element The node to test.\n * @return {boolean} Whether the node is focusable.\n */\nbot.dom.isFocusable = function(element) {\n  return goog.array.some(bot.dom.FOCUSABLE_FORM_FIELDS_, tagNameMatches) ||\n      (bot.dom.getAttribute(element, 'tabindex') != null &&\n          Number(bot.dom.getProperty(element, 'tabIndex')) >= 0) ||\n      bot.dom.isEditable(element);\n\n  function tagNameMatches(tagName) {\n    return bot.dom.isElement(element, tagName);\n  }\n};\n\n\n/**\n * @const\n */\nbot.dom.getProperty = bot.dom.core.getProperty;\n\n\n/**\n * @const\n */\nbot.dom.getAttribute = bot.dom.core.getAttribute;\n\n\n/**\n * List of elements that support the \"disabled\" attribute, as defined by the\n * HTML 4.01 specification.\n * @private {!Array.<!goog.dom.TagName>}\n * @const\n * @see http://www.w3.org/TR/html401/interact/forms.html#h-17.12.1\n */\nbot.dom.DISABLED_ATTRIBUTE_SUPPORTED_ = [\n  goog.dom.TagName.BUTTON,\n  goog.dom.TagName.INPUT,\n  goog.dom.TagName.OPTGROUP,\n  goog.dom.TagName.OPTION,\n  goog.dom.TagName.SELECT,\n  goog.dom.TagName.TEXTAREA\n];\n\n\n/**\n * Determines if an element is enabled. An element is considered enabled if it\n * does not support the \"disabled\" attribute, or if it is not disabled.\n * @param {!Element} el The element to test.\n * @return {boolean} Whether the element is enabled.\n */\nbot.dom.isEnabled = function(el) {\n  var isSupported = goog.array.some(\n      bot.dom.DISABLED_ATTRIBUTE_SUPPORTED_,\n      function(tagName) { return bot.dom.isElement(el, tagName); });\n  if (!isSupported) {\n    return true;\n  }\n\n  if (bot.dom.getProperty(el, 'disabled')) {\n    return false;\n  }\n\n  // The element is not explicitly disabled, but if it is an OPTION or OPTGROUP,\n  // we must test if it inherits its state from a parent.\n  if (el.parentNode &&\n      el.parentNode.nodeType == goog.dom.NodeType.ELEMENT &&\n      bot.dom.isElement(el, goog.dom.TagName.OPTGROUP) ||\n      bot.dom.isElement(el, goog.dom.TagName.OPTION)) {\n    return bot.dom.isEnabled(/**@type{!Element}*/ (el.parentNode));\n  }\n\n  // Is there an ancestor of the current element that is a disabled fieldset\n  // and whose child is also an ancestor-or-self of the current element but is\n  // not the first legend child of the fieldset. If so then the element is\n  // disabled.\n  return !goog.dom.getAncestor(el, function(e) {\n    var parent = e.parentNode;\n\n    if (parent &&\n        bot.dom.isElement(parent, goog.dom.TagName.FIELDSET) &&\n        bot.dom.getProperty(/** @type {!Element} */ (parent), 'disabled')) {\n      if (!bot.dom.isElement(e, goog.dom.TagName.LEGEND)) {\n        return true;\n      }\n\n      var sibling = e;\n      // Are there any previous legend siblings? If so then we are not the\n      // first and the element is disabled\n      while (sibling = goog.dom.getPreviousElementSibling(sibling)) {\n        if (bot.dom.isElement(sibling, goog.dom.TagName.LEGEND)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }, true);\n};\n\n\n/**\n * List of input types that create text fields.\n * @private {!Array.<string>}\n * @const\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#attr-input-type\n */\nbot.dom.TEXTUAL_INPUT_TYPES_ = [\n  'text',\n  'search',\n  'tel',\n  'url',\n  'email',\n  'password',\n  'number'\n];\n\n\n/**\n * TODO: Add support for designMode elements.\n *\n * @param {!Element} element The element to check.\n * @return {boolean} Whether the element accepts user-typed text.\n */\nbot.dom.isTextual = function(element) {\n  if (bot.dom.isElement(element, goog.dom.TagName.TEXTAREA)) {\n    return true;\n  }\n\n  if (bot.dom.isElement(element, goog.dom.TagName.INPUT)) {\n    var type = element.type.toLowerCase();\n    return goog.array.contains(bot.dom.TEXTUAL_INPUT_TYPES_, type);\n  }\n\n  if (bot.dom.isContentEditable(element)) {\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {!Element} element The element to check.\n * @return {boolean} Whether the element is a file input.\n */\nbot.dom.isFileInput = function(element) {\n  if (bot.dom.isElement(element, goog.dom.TagName.INPUT)) {\n    var type = element.type.toLowerCase();\n    return type == 'file';\n  }\n\n  return false;\n};\n\n\n/**\n * @param {!Element} element The element to check.\n * @param {string} inputType The type of input to check.\n * @return {boolean} Whether the element is an input with specified type.\n */\nbot.dom.isInputType = function(element, inputType) {\n  if (bot.dom.isElement(element, goog.dom.TagName.INPUT)) {\n    var type = element.type.toLowerCase();\n    return type == inputType;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {!Element} element The element to check.\n * @return {boolean} Whether the element is contentEditable.\n */\nbot.dom.isContentEditable = function(element) {\n  // Check if browser supports contentEditable.\n  if (!goog.isDef(element['contentEditable'])) {\n    return false;\n  }\n\n  // Checking the element's isContentEditable property is preferred except for\n  // IE where that property is not reliable on IE versions 7, 8, and 9.\n  if (!goog.userAgent.IE && goog.isDef(element['isContentEditable'])) {\n    return element.isContentEditable;\n  }\n\n  // For IE and for browsers where contentEditable is supported but\n  // isContentEditable is not, traverse up the ancestors:\n  function legacyIsContentEditable(e) {\n    if (e.contentEditable == 'inherit') {\n      var parent = bot.dom.getParentElement(e);\n      return parent ? legacyIsContentEditable(parent) : false;\n    } else {\n      return e.contentEditable == 'true';\n    }\n  }\n  return legacyIsContentEditable(element);\n};\n\n\n/**\n * TODO: Merge isTextual into this function and move to bot.dom.\n * For Puppet, requires adding support to getVisibleText for grabbing\n * text from all textual elements.\n *\n * Whether the element may contain text the user can edit.\n *\n * @param {!Element} element The element to check.\n * @return {boolean} Whether the element accepts user-typed text.\n */\nbot.dom.isEditable = function(element) {\n  return (bot.dom.isTextual(element) ||\n          bot.dom.isFileInput(element) ||\n          bot.dom.isInputType(element, 'range') ||\n          bot.dom.isInputType(element, 'date') ||\n          bot.dom.isInputType(element, 'month') ||\n          bot.dom.isInputType(element, 'week') ||\n          bot.dom.isInputType(element, 'time') ||\n          bot.dom.isInputType(element, 'datetime-local') ||\n          bot.dom.isInputType(element, 'color')) &&\n      !bot.dom.getProperty(element, 'readOnly');\n};\n\n\n/**\n * Returns the parent element of the given node, or null. This is required\n * because the parent node may not be another element.\n *\n * @param {!Node} node The node who's parent is desired.\n * @return {Element} The parent element, if available, null otherwise.\n */\nbot.dom.getParentElement = function(node) {\n  var elem = node.parentNode;\n\n  while (elem &&\n         elem.nodeType != goog.dom.NodeType.ELEMENT &&\n         elem.nodeType != goog.dom.NodeType.DOCUMENT &&\n         elem.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {\n    elem = elem.parentNode;\n  }\n  return /** @type {Element} */ (bot.dom.isElement(elem) ? elem : null);\n};\n\n\n/**\n * Retrieves an explicitly-set, inline style value of an element. This returns\n * '' if there isn't a style attribute on the element or if this style property\n * has not been explicitly set in script.\n *\n * @param {!Element} elem Element to get the style value from.\n * @param {string} styleName Name of the style property in selector-case.\n * @return {string} The value of the style property.\n */\nbot.dom.getInlineStyle = function(elem, styleName) {\n  return goog.style.getStyle(elem, styleName);\n};\n\n\n/**\n * Retrieves the implicitly-set, effective style of an element, or null if it is\n * unknown. It returns the computed style where available; otherwise it looks\n * up the DOM tree for the first style value not equal to 'inherit,' using the\n * IE currentStyle of each node if available, and otherwise the inline style.\n * Since the computed, current, and inline styles can be different, the return\n * value of this function is not always consistent across browsers. See:\n * http://code.google.com/p/doctype/wiki/ArticleComputedStyleVsCascadedStyle\n *\n * @param {!Element} elem Element to get the style value from.\n * @param {string} propertyName Name of the CSS property.\n * @return {?string} The value of the style property, or null.\n */\nbot.dom.getEffectiveStyle = function(elem, propertyName) {\n  var styleName = goog.string.toCamelCase(propertyName);\n  if (styleName == 'float' ||\n      styleName == 'cssFloat' ||\n      styleName == 'styleFloat') {\n    styleName = bot.userAgent.IE_DOC_PRE9 ? 'styleFloat' : 'cssFloat';\n  }\n  var style = goog.style.getComputedStyle(elem, styleName) ||\n      bot.dom.getCascadedStyle_(elem, styleName);\n  if (style === null) {\n    return null;\n  }\n  return bot.color.standardizeColor(styleName, style);\n};\n\n\n/**\n * Looks up the DOM tree for the first style value not equal to 'inherit,' using\n * the currentStyle of each node if available, and otherwise the inline style.\n *\n * @param {!Element} elem Element to get the style value from.\n * @param {string} styleName CSS style property in camelCase.\n * @return {?string} The value of the style property, or null.\n * @private\n */\nbot.dom.getCascadedStyle_ = function(elem, styleName) {\n  var style = elem.currentStyle || elem.style;\n  var value = style[styleName];\n  if (!goog.isDef(value) && goog.isFunction(style.getPropertyValue)) {\n    value = style.getPropertyValue(styleName);\n  }\n\n  if (value != 'inherit') {\n    return goog.isDef(value) ? value : null;\n  }\n  var parent = bot.dom.getParentElement(elem);\n  return parent ? bot.dom.getCascadedStyle_(parent, styleName) : null;\n};\n\n\n/**\n * Extracted code from bot.dom.isShown.\n *\n * @param {!Element} elem The element to consider.\n * @param {boolean} ignoreOpacity Whether to ignore the element's opacity\n *     when determining whether it is shown.\n * @param {function(!Element):boolean} parentsDisplayedFn a function that's used\n *     to tell if the chain of ancestors are all shown.\n * @return {boolean} Whether or not the element is visible.\n * @private\n */\nbot.dom.isShown_ = function(elem, ignoreOpacity, parentsDisplayedFn) {\n  if (!bot.dom.isElement(elem)) {\n    throw new Error('Argument to isShown must be of type Element');\n  }\n\n  // By convention, BODY element is always shown: BODY represents the document\n  // and even if there's nothing rendered in there, user can always see there's\n  // the document.\n  if (bot.dom.isElement(elem, goog.dom.TagName.BODY)) {\n    return true;\n  }\n\n  // Option or optgroup is shown iff enclosing select is shown (ignoring the\n  // select's opacity).\n  if (bot.dom.isElement(elem, goog.dom.TagName.OPTION) ||\n      bot.dom.isElement(elem, goog.dom.TagName.OPTGROUP)) {\n    var select = /**@type {Element}*/ (goog.dom.getAncestor(elem, function(e) {\n      return bot.dom.isElement(e, goog.dom.TagName.SELECT);\n    }));\n    return !!select && bot.dom.isShown_(select, true, parentsDisplayedFn);\n  }\n\n  // Image map elements are shown if image that uses it is shown, and\n  // the area of the element is positive.\n  var imageMap = bot.dom.maybeFindImageMap_(elem);\n  if (imageMap) {\n    return !!imageMap.image &&\n           imageMap.rect.width > 0 && imageMap.rect.height > 0 &&\n           bot.dom.isShown_(\n               imageMap.image, ignoreOpacity, parentsDisplayedFn);\n  }\n\n  // Any hidden input is not shown.\n  if (bot.dom.isElement(elem, goog.dom.TagName.INPUT) &&\n      elem.type.toLowerCase() == 'hidden') {\n    return false;\n  }\n\n  // Any NOSCRIPT element is not shown.\n  if (bot.dom.isElement(elem, goog.dom.TagName.NOSCRIPT)) {\n    return false;\n  }\n\n  // Any element with hidden/collapsed visibility is not shown.\n  var visibility = bot.dom.getEffectiveStyle(elem, 'visibility');\n  if (visibility == 'collapse' || visibility == 'hidden') {\n    return false;\n  }\n\n  if (!parentsDisplayedFn(elem)) {\n    return false;\n  }\n\n  // Any transparent element is not shown.\n  if (!ignoreOpacity && bot.dom.getOpacity(elem) == 0) {\n    return false;\n  }\n\n  // Any element without positive size dimensions is not shown.\n  function positiveSize(e) {\n    var rect = bot.dom.getClientRect(e);\n    if (rect.height > 0 && rect.width > 0) {\n      return true;\n    }\n    // A vertical or horizontal SVG Path element will report zero width or\n    // height but is \"shown\" if it has a positive stroke-width.\n    if (bot.dom.isElement(e, 'PATH') && (rect.height > 0 || rect.width > 0)) {\n      var strokeWidth = bot.dom.getEffectiveStyle(e, 'stroke-width');\n      return !!strokeWidth && (parseInt(strokeWidth, 10) > 0);\n    }\n    // Zero-sized elements should still be considered to have positive size\n    // if they have a child element or text node with positive size, unless\n    // the element has an 'overflow' style of 'hidden'.\n    return bot.dom.getEffectiveStyle(e, 'overflow') != 'hidden' &&\n        goog.array.some(e.childNodes, function(n) {\n          return n.nodeType == goog.dom.NodeType.TEXT ||\n                 (bot.dom.isElement(n) && positiveSize(n));\n        });\n  }\n  if (!positiveSize(elem)) {\n    return false;\n  }\n\n  // Elements that are hidden by overflow are not shown.\n  function hiddenByOverflow(e) {\n    return bot.dom.getOverflowState(e) == bot.dom.OverflowState.HIDDEN &&\n        goog.array.every(e.childNodes, function(n) {\n          return !bot.dom.isElement(n) || hiddenByOverflow(n) ||\n                 !positiveSize(n);\n        });\n  }\n  return !hiddenByOverflow(elem);\n};\n\n\n/**\n * Determines whether an element is what a user would call \"shown\". This means\n * that the element is shown in the viewport of the browser, and only has\n * height and width greater than 0px, and that its visibility is not \"hidden\"\n * and its display property is not \"none\".\n * Options and Optgroup elements are treated as special cases: they are\n * considered shown iff they have a enclosing select element that is shown.\n *\n * Elements in Shadow DOMs with younger shadow roots are not visible, and\n * elements distributed into shadow DOMs check the visibility of the\n * ancestors in the Composed DOM, rather than their ancestors in the logical\n * DOM.\n *\n * @param {!Element} elem The element to consider.\n * @param {boolean=} opt_ignoreOpacity Whether to ignore the element's opacity\n *     when determining whether it is shown; defaults to false.\n * @return {boolean} Whether or not the element is visible.\n */\nbot.dom.isShown = function(elem, opt_ignoreOpacity) {\n  /**\n   * Determines whether an element or its parents have `display: none` set\n   * @param {!Node} e the element\n   * @return {!boolean}\n   */\n  function displayed(e) {\n    if (bot.dom.isElement(e)) {\n      var elem = /** @type {!Element} */ (e);\n      if (bot.dom.getEffectiveStyle(elem, 'display') == 'none') {\n        return false;\n      }\n    }\n\n    var parent = bot.dom.getParentNodeInComposedDom(e);\n\n    if (bot.dom.IS_SHADOW_DOM_ENABLED && (parent instanceof ShadowRoot)) {\n      if (parent.host.shadowRoot && parent.host.shadowRoot !== parent) {\n        // There is a younger shadow root, which will take precedence over\n        // the shadow this element is in, thus this element won't be\n        // displayed.\n        return false;\n      } else {\n        parent = parent.host;\n      }\n    }\n\n    if (parent && (parent.nodeType == goog.dom.NodeType.DOCUMENT ||\n        parent.nodeType == goog.dom.NodeType.DOCUMENT_FRAGMENT)) {\n      return true;\n    }\n\n    // Child of DETAILS element is not shown unless the DETAILS element is open\n    // or the child is a SUMMARY element.\n    if (parent && bot.dom.isElement(parent, goog.dom.TagName.DETAILS) &&\n        !parent.open && !bot.dom.isElement(e, goog.dom.TagName.SUMMARY)) {\n      return false;\n    }\n\n    return !!parent && displayed(parent);\n  }\n\n  return bot.dom.isShown_(elem, !!opt_ignoreOpacity, displayed);\n};\n\n\n/**\n * The kind of overflow area in which an element may be located. NONE if it does\n * not overflow any ancestor element; HIDDEN if it overflows and cannot be\n * scrolled into view; SCROLL if it overflows but can be scrolled into view.\n *\n * @enum {string}\n */\nbot.dom.OverflowState = {\n  NONE: 'none',\n  HIDDEN: 'hidden',\n  SCROLL: 'scroll'\n};\n\n\n/**\n * Returns the overflow state of the given element.\n *\n * If an optional coordinate or rectangle region is provided, returns the\n * overflow state of that region relative to the element. A coordinate is\n * treated as a 1x1 rectangle whose top-left corner is the coordinate.\n *\n * @param {!Element} elem Element.\n * @param {!(goog.math.Coordinate|goog.math.Rect)=} opt_region\n *     Coordinate or rectangle relative to the top-left corner of the element.\n * @return {bot.dom.OverflowState} Overflow state of the element.\n */\nbot.dom.getOverflowState = function(elem, opt_region) {\n  var region = bot.dom.getClientRegion(elem, opt_region);\n  var ownerDoc = goog.dom.getOwnerDocument(elem);\n  var htmlElem = ownerDoc.documentElement;\n  var bodyElem = ownerDoc.body;\n  var htmlOverflowStyle = bot.dom.getEffectiveStyle(htmlElem, 'overflow');\n  var treatAsFixedPosition;\n\n  // Return the closest ancestor that the given element may overflow.\n  function getOverflowParent(e) {\n    var position = bot.dom.getEffectiveStyle(e, 'position');\n    if (position == 'fixed') {\n      treatAsFixedPosition = true;\n      // Fixed-position element may only overflow the viewport.\n      return e == htmlElem ? null : htmlElem;\n    } else {\n      var parent = bot.dom.getParentElement(e);\n      while (parent && !canBeOverflowed(parent)) {\n        parent = bot.dom.getParentElement(parent);\n      }\n      return parent;\n    }\n\n    function canBeOverflowed(container) {\n      // The HTML element can always be overflowed.\n      if (container == htmlElem) {\n        return true;\n      }\n      // An element cannot overflow an element with an inline or contents display style.\n      var containerDisplay = /** @type {string} */ (\n          bot.dom.getEffectiveStyle(container, 'display'));\n      if (goog.string.startsWith(containerDisplay, 'inline') ||\n          (containerDisplay == 'contents')) {\n        return false;\n      }\n      // An absolute-positioned element cannot overflow a static-positioned one.\n      if (position == 'absolute' &&\n          bot.dom.getEffectiveStyle(container, 'position') == 'static') {\n        return false;\n      }\n      return true;\n    }\n  }\n\n  // Return the x and y overflow styles for the given element.\n  function getOverflowStyles(e) {\n    // When the <html> element has an overflow style of 'visible', it assumes\n    // the overflow style of the body, and the body is really overflow:visible.\n    var overflowElem = e;\n    if (htmlOverflowStyle == 'visible') {\n      // Note: bodyElem will be null/undefined in SVG documents.\n      if (e == htmlElem && bodyElem) {\n        overflowElem = bodyElem;\n      } else if (e == bodyElem) {\n        return {x: 'visible', y: 'visible'};\n      }\n    }\n    var overflow = {\n      x: bot.dom.getEffectiveStyle(overflowElem, 'overflow-x'),\n      y: bot.dom.getEffectiveStyle(overflowElem, 'overflow-y')\n    };\n    // The <html> element cannot have a genuine 'visible' overflow style,\n    // because the viewport can't expand; 'visible' is really 'auto'.\n    if (e == htmlElem) {\n      overflow.x = overflow.x == 'visible' ? 'auto' : overflow.x;\n      overflow.y = overflow.y == 'visible' ? 'auto' : overflow.y;\n    }\n    return overflow;\n  }\n\n  // Returns the scroll offset of the given element.\n  function getScroll(e) {\n    if (e == htmlElem) {\n      return new goog.dom.DomHelper(ownerDoc).getDocumentScroll();\n    } else {\n      return new goog.math.Coordinate(e.scrollLeft, e.scrollTop);\n    }\n  }\n\n  // Check if the element overflows any ancestor element.\n  for (var container = getOverflowParent(elem);\n       !!container;\n       container = getOverflowParent(container)) {\n    var containerOverflow = getOverflowStyles(container);\n\n    // If the container has overflow:visible, the element cannot overflow it.\n    if (containerOverflow.x == 'visible' && containerOverflow.y == 'visible') {\n      continue;\n    }\n\n    var containerRect = bot.dom.getClientRect(container);\n\n    // Zero-sized containers without overflow:visible hide all descendants.\n    if (containerRect.width == 0 || containerRect.height == 0) {\n      return bot.dom.OverflowState.HIDDEN;\n    }\n\n    // Check \"underflow\": if an element is to the left or above the container\n    var underflowsX = region.right < containerRect.left;\n    var underflowsY = region.bottom < containerRect.top;\n    if ((underflowsX && containerOverflow.x == 'hidden') ||\n        (underflowsY && containerOverflow.y == 'hidden')) {\n      return bot.dom.OverflowState.HIDDEN;\n    } else if ((underflowsX && containerOverflow.x != 'visible') ||\n               (underflowsY && containerOverflow.y != 'visible')) {\n      // When the element is positioned to the left or above a container, we\n      // have to distinguish between the element being completely outside the\n      // container and merely scrolled out of view within the container.\n      var containerScroll = getScroll(container);\n      var unscrollableX = region.right < containerRect.left - containerScroll.x;\n      var unscrollableY = region.bottom < containerRect.top - containerScroll.y;\n      if ((unscrollableX && containerOverflow.x != 'visible') ||\n          (unscrollableY && containerOverflow.x != 'visible')) {\n        return bot.dom.OverflowState.HIDDEN;\n      }\n      var containerState = bot.dom.getOverflowState(container);\n      return containerState == bot.dom.OverflowState.HIDDEN ?\n          bot.dom.OverflowState.HIDDEN : bot.dom.OverflowState.SCROLL;\n    }\n\n    // Check \"overflow\": if an element is to the right or below a container\n    var overflowsX = region.left >= containerRect.left + containerRect.width;\n    var overflowsY = region.top >= containerRect.top + containerRect.height;\n    if ((overflowsX && containerOverflow.x == 'hidden') ||\n        (overflowsY && containerOverflow.y == 'hidden')) {\n      return bot.dom.OverflowState.HIDDEN;\n    } else if ((overflowsX && containerOverflow.x != 'visible') ||\n               (overflowsY && containerOverflow.y != 'visible')) {\n      // If the element has fixed position and falls outside the scrollable area\n      // of the document, then it is hidden.\n      if (treatAsFixedPosition) {\n        var docScroll = getScroll(container);\n        if ((region.left >= htmlElem.scrollWidth - docScroll.x) ||\n            (region.right >= htmlElem.scrollHeight - docScroll.y)) {\n          return bot.dom.OverflowState.HIDDEN;\n        }\n      }\n      // If the element can be scrolled into view of the parent, it has a scroll\n      // state; unless the parent itself is entirely hidden by overflow, in\n      // which it is also hidden by overflow.\n      var containerState = bot.dom.getOverflowState(container);\n      return containerState == bot.dom.OverflowState.HIDDEN ?\n          bot.dom.OverflowState.HIDDEN : bot.dom.OverflowState.SCROLL;\n    }\n  }\n\n  // Does not overflow any ancestor.\n  return bot.dom.OverflowState.NONE;\n};\n\n\n/**\n * A regular expression to match the CSS transform matrix syntax.\n * @private {!RegExp}\n * @const\n */\nbot.dom.CSS_TRANSFORM_MATRIX_REGEX_ =\n    new RegExp('matrix\\\\(([\\\\d\\\\.\\\\-]+), ([\\\\d\\\\.\\\\-]+), ' +\n               '([\\\\d\\\\.\\\\-]+), ([\\\\d\\\\.\\\\-]+), ' +\n               '([\\\\d\\\\.\\\\-]+)(?:px)?, ([\\\\d\\\\.\\\\-]+)(?:px)?\\\\)');\n\n\n/**\n * Gets the client rectangle of the DOM element. It often returns the same value\n * as Element.getBoundingClientRect, but is \"fixed\" for various scenarios:\n * 1. Like goog.style.getClientPosition, it adjusts for the inset border in IE.\n * 2. Gets a rect for <map>'s and <area>'s relative to the image using them.\n * 3. Gets a rect for SVG elements representing their true bounding box.\n * 4. Defines the client rect of the <html> element to be the window viewport.\n *\n * @param {!Element} elem The element to use.\n * @return {!goog.math.Rect} The interaction box of the element.\n */\nbot.dom.getClientRect = function(elem) {\n  var imageMap = bot.dom.maybeFindImageMap_(elem);\n  if (imageMap) {\n    return imageMap.rect;\n  } else if (bot.dom.isElement(elem, goog.dom.TagName.HTML)) {\n    // Define the client rect of the <html> element to be the viewport.\n    var doc = goog.dom.getOwnerDocument(elem);\n    var viewportSize = goog.dom.getViewportSize(goog.dom.getWindow(doc));\n    return new goog.math.Rect(0, 0, viewportSize.width, viewportSize.height);\n  } else {\n    var nativeRect;\n    try {\n      // TODO: in IE and Firefox, getBoundingClientRect includes stroke width,\n      // but getBBox does not.\n      nativeRect = elem.getBoundingClientRect();\n    } catch (e) {\n      // On IE < 9, calling getBoundingClientRect on an orphan element raises\n      // an \"Unspecified Error\". All other browsers return zeros.\n      return new goog.math.Rect(0, 0, 0, 0);\n    }\n\n    var rect = new goog.math.Rect(nativeRect.left, nativeRect.top,\n        nativeRect.right - nativeRect.left, nativeRect.bottom - nativeRect.top);\n\n    // In IE, the element can additionally be offset by a border around the\n    // documentElement or body element that we have to subtract.\n    if (goog.userAgent.IE && elem.ownerDocument.body) {\n      var doc = goog.dom.getOwnerDocument(elem);\n      rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;\n      rect.top -= doc.documentElement.clientTop + doc.body.clientTop;\n    }\n\n    return rect;\n  }\n};\n\n\n/**\n * If given a <map> or <area> element, finds the corresponding image and client\n * rectangle of the element; otherwise returns null. The return value is an\n * object with 'image' and 'rect' properties. When no image uses the given\n * element, the returned rectangle is present but has zero size.\n *\n * @param {!Element} elem Element to test.\n * @return {?{image: Element, rect: !goog.math.Rect}} Image and rectangle.\n * @private\n */\nbot.dom.maybeFindImageMap_ = function(elem) {\n  // If not a <map> or <area>, return null indicating so.\n  var isMap = bot.dom.isElement(elem, goog.dom.TagName.MAP);\n  if (!isMap && !bot.dom.isElement(elem, goog.dom.TagName.AREA)) {\n    return null;\n  }\n\n  // Get the <map> associated with this element, or null if none.\n  var map = isMap ? elem :\n      (bot.dom.isElement(elem.parentNode, goog.dom.TagName.MAP) ?\n          elem.parentNode : null);\n\n  var image = null, rect = null;\n  if (map && map.name) {\n    var mapDoc = goog.dom.getOwnerDocument(map);\n\n    // The \"//*\" XPath syntax can confuse the closure compiler, so we use\n    // the \"/descendant::*\" syntax instead.\n    // TODO: Try to find a reproducible case for the compiler bug.\n    // TODO: Restrict to applet, img, input:image, and object nodes.\n    var imageXpath = '/descendant::*[@usemap = \"#' + map.name + '\"]';\n\n    // TODO: Break dependency of bot.locators on bot.dom,\n    // so bot.locators.findElement can be called here instead.\n    image = bot.locators.xpath.single(imageXpath, mapDoc);\n\n    if (image) {\n      rect = bot.dom.getClientRect(image);\n      if (!isMap && elem.shape.toLowerCase() != 'default') {\n        // Shift and crop the relative area rectangle to the map.\n        var relRect = bot.dom.getAreaRelativeRect_(elem);\n        var relX = Math.min(Math.max(relRect.left, 0), rect.width);\n        var relY = Math.min(Math.max(relRect.top, 0), rect.height);\n        var w = Math.min(relRect.width, rect.width - relX);\n        var h = Math.min(relRect.height, rect.height - relY);\n        rect = new goog.math.Rect(relX + rect.left, relY + rect.top, w, h);\n      }\n    }\n  }\n\n  return {image: image, rect: rect || new goog.math.Rect(0, 0, 0, 0)};\n};\n\n\n/**\n * Returns the bounding box around an <area> element relative to its enclosing\n * <map>. Does not apply to <area> elements with shape=='default'.\n *\n * @param {!Element} area Area element.\n * @return {!goog.math.Rect} Bounding box of the area element.\n * @private\n */\nbot.dom.getAreaRelativeRect_ = function(area) {\n  var shape = area.shape.toLowerCase();\n  var coords = area.coords.split(',');\n  if (shape == 'rect' && coords.length == 4) {\n    var x = coords[0], y = coords[1];\n    return new goog.math.Rect(x, y, coords[2] - x, coords[3] - y);\n  } else if (shape == 'circle' && coords.length == 3) {\n    var centerX = coords[0], centerY = coords[1], radius = coords[2];\n    return new goog.math.Rect(centerX - radius, centerY - radius,\n                              2 * radius, 2 * radius);\n  } else if (shape == 'poly' && coords.length > 2) {\n    var minX = coords[0], minY = coords[1], maxX = minX, maxY = minY;\n    for (var i = 2; i + 1 < coords.length; i += 2) {\n      minX = Math.min(minX, coords[i]);\n      maxX = Math.max(maxX, coords[i]);\n      minY = Math.min(minY, coords[i + 1]);\n      maxY = Math.max(maxY, coords[i + 1]);\n    }\n    return new goog.math.Rect(minX, minY, maxX - minX, maxY - minY);\n  }\n  return new goog.math.Rect(0, 0, 0, 0);\n};\n\n\n/**\n * Gets the element's client rectangle as a box, optionally clipped to the\n * given coordinate or rectangle relative to the client's position. A coordinate\n * is treated as a 1x1 rectangle whose top-left corner is the coordinate.\n *\n * @param {!Element} elem The element.\n * @param {!(goog.math.Coordinate|goog.math.Rect)=} opt_region\n *     Coordinate or rectangle relative to the top-left corner of the element.\n * @return {!goog.math.Box} The client region box.\n */\nbot.dom.getClientRegion = function(elem, opt_region) {\n  var region = bot.dom.getClientRect(elem).toBox();\n\n  if (opt_region) {\n    var rect = opt_region instanceof goog.math.Rect ? opt_region :\n        new goog.math.Rect(opt_region.x, opt_region.y, 1, 1);\n    region.left = goog.math.clamp(\n        region.left + rect.left, region.left, region.right);\n    region.top = goog.math.clamp(\n        region.top + rect.top, region.top, region.bottom);\n    region.right = goog.math.clamp(\n        region.left + rect.width, region.left, region.right);\n    region.bottom = goog.math.clamp(\n        region.top + rect.height, region.top, region.bottom);\n  }\n\n  return region;\n};\n\n\n/**\n * Trims leading and trailing whitespace from strings, leaving non-breaking\n * space characters in place.\n *\n * @param {string} str The string to trim.\n * @return {string} str without any leading or trailing whitespace characters\n *     except non-breaking spaces.\n * @private\n */\nbot.dom.trimExcludingNonBreakingSpaceCharacters_ = function(str) {\n  return str.replace(/^[^\\S\\xa0]+|[^\\S\\xa0]+$/g, '');\n};\n\n\n/**\n * Helper function for getVisibleText[InDisplayedDom].\n * @param {!Array.<string>} lines Accumulated visible lines of text.\n * @return {string} cleaned up concatenated lines\n * @private\n */\nbot.dom.concatenateCleanedLines_ = function(lines) {\n  lines = goog.array.map(\n    lines,\n    bot.dom.trimExcludingNonBreakingSpaceCharacters_);\n  var joined = lines.join('\\n');\n  var trimmed = bot.dom.trimExcludingNonBreakingSpaceCharacters_(joined);\n\n  // Replace non-breakable spaces with regular ones.\n  return trimmed.replace(/\\xa0/g, ' ');\n};\n\n\n/**\n * @param {!Element} elem The element to consider.\n * @return {string} visible text.\n */\nbot.dom.getVisibleText = function(elem) {\n  var lines = [];\n\n  if (bot.dom.IS_SHADOW_DOM_ENABLED) {\n    bot.dom.appendVisibleTextLinesFromElementInComposedDom_(elem, lines);\n  } else {\n    bot.dom.appendVisibleTextLinesFromElement_(elem, lines);\n  }\n  return bot.dom.concatenateCleanedLines_(lines);\n};\n\n\n/**\n * Helper function used by bot.dom.appendVisibleTextLinesFromElement_ and\n * bot.dom.appendVisibleTextLinesFromElementInComposedDom_\n * @param {!Element} elem Element.\n * @param {!Array.<string>} lines Accumulated visible lines of text.\n * @param {function(!Element):boolean} isShownFn function to call to\n *     tell if an element is shown\n * @param {function(!Node, !Array.<string>, boolean, ?string, ?string):void}\n *     childNodeFn function to call to append lines from any child nodes\n * @private\n */\nbot.dom.appendVisibleTextLinesFromElementCommon_ = function(\n    elem, lines, isShownFn, childNodeFn) {\n  function currLine() {\n    return /** @type {string|undefined} */ (goog.array.peek(lines)) || '';\n  }\n\n  // TODO: Add case here for textual form elements.\n  if (bot.dom.isElement(elem, goog.dom.TagName.BR)) {\n    lines.push('');\n  } else {\n    // TODO: properly handle display:run-in\n    var isTD = bot.dom.isElement(elem, goog.dom.TagName.TD);\n    var display = bot.dom.getEffectiveStyle(elem, 'display');\n    // On some browsers, table cells incorrectly show up with block styles.\n    var isBlock = !isTD &&\n        !goog.array.contains(bot.dom.INLINE_DISPLAY_BOXES_, display);\n\n    // Add a newline before block elems when there is text on the current line,\n    // except when the previous sibling has a display: run-in.\n    // Also, do not run-in the previous sibling if this element is floated.\n\n    var previousElementSibling = goog.dom.getPreviousElementSibling(elem);\n    var prevDisplay = (previousElementSibling) ?\n        bot.dom.getEffectiveStyle(previousElementSibling, 'display') : '';\n    // TODO: getEffectiveStyle should mask this for us\n    var thisFloat = bot.dom.getEffectiveStyle(elem, 'float') ||\n        bot.dom.getEffectiveStyle(elem, 'cssFloat') ||\n        bot.dom.getEffectiveStyle(elem, 'styleFloat');\n    var runIntoThis = prevDisplay == 'run-in' && thisFloat == 'none';\n    if (isBlock && !runIntoThis &&\n        !goog.string.isEmptyOrWhitespace(currLine())) {\n      lines.push('');\n    }\n\n    // This element may be considered unshown, but have a child that is\n    // explicitly shown (e.g. this element has \"visibility:hidden\").\n    // Nevertheless, any text nodes that are direct descendants of this\n    // element will not contribute to the visible text.\n    var shown = isShownFn(elem);\n\n    // All text nodes that are children of this element need to know the\n    // effective \"white-space\" and \"text-transform\" styles to properly\n    // compute their contribution to visible text. Compute these values once.\n    var whitespace = null, textTransform = null;\n    if (shown) {\n      whitespace = bot.dom.getEffectiveStyle(elem, 'white-space');\n      textTransform = bot.dom.getEffectiveStyle(elem, 'text-transform');\n    }\n\n    goog.array.forEach(elem.childNodes, function(node) {\n      childNodeFn(node, lines, shown, whitespace, textTransform);\n    });\n\n    var line = currLine();\n\n    // Here we differ from standard innerText implementations (if there were\n    // such a thing). Usually, table cells are separated by a tab, but we\n    // normalize tabs into single spaces.\n    if ((isTD || display == 'table-cell') && line &&\n        !goog.string.endsWith(line, ' ')) {\n      lines[lines.length - 1] += ' ';\n    }\n\n    // Add a newline after block elems when there is text on the current line,\n    // and the current element isn't marked as run-in.\n    if (isBlock && display != 'run-in' &&\n        !goog.string.isEmptyOrWhitespace(line)) {\n      lines.push('');\n    }\n  }\n};\n\n\n/**\n * @param {!Element} elem Element.\n * @param {!Array.<string>} lines Accumulated visible lines of text.\n * @private\n */\nbot.dom.appendVisibleTextLinesFromElement_ = function(elem, lines) {\n    bot.dom.appendVisibleTextLinesFromElementCommon_(\n      elem, lines, bot.dom.isShown,\n      function(node, lines, shown, whitespace, textTransform) {\n        if (node.nodeType == goog.dom.NodeType.TEXT && shown) {\n          var textNode = /** @type {!Text} */ (node);\n          bot.dom.appendVisibleTextLinesFromTextNode_(textNode, lines,\n              whitespace, textTransform);\n        } else if (bot.dom.isElement(node)) {\n          var castElem = /** @type {!Element} */ (node);\n          bot.dom.appendVisibleTextLinesFromElement_(castElem, lines);\n        }\n      });\n};\n\n\n/**\n * Elements with one of these effective \"display\" styles are treated as inline\n * display boxes and have their visible text appended to the current line.\n * @private {!Array.<string>}\n * @const\n */\nbot.dom.INLINE_DISPLAY_BOXES_ = [\n  'inline',\n  'inline-block',\n  'inline-table',\n  'none',\n  'table-cell',\n  'table-column',\n  'table-column-group'\n];\n\n\n/**\n * @param {!Text} textNode Text node.\n * @param {!Array.<string>} lines Accumulated visible lines of text.\n * @param {?string} whitespace Parent element's \"white-space\" style.\n * @param {?string} textTransform Parent element's \"text-transform\" style.\n * @private\n */\nbot.dom.appendVisibleTextLinesFromTextNode_ = function(textNode, lines,\n    whitespace, textTransform) {\n\n  // First, remove zero-width characters. Do this before regularizing spaces as\n  // the zero-width space is both zero-width and a space, but we do not want to\n  // make it visible by converting it to a regular space.\n  // The replaced characters are:\n  //   U+200B: Zero-width space\n  //   U+200E: Left-to-right mark\n  //   U+200F: Right-to-left mark\n  var text = textNode.nodeValue.replace(/[\\u200b\\u200e\\u200f]/g, '');\n\n  // Canonicalize the new lines, and then collapse new lines\n  // for the whitespace styles that collapse. See:\n  // https://developer.mozilla.org/en/CSS/white-space\n  text = goog.string.canonicalizeNewlines(text);\n  if (whitespace == 'normal' || whitespace == 'nowrap') {\n    text = text.replace(/\\n/g, ' ');\n  }\n\n  // For pre and pre-wrap whitespace styles, convert all breaking spaces to be\n  // non-breaking, otherwise, collapse all breaking spaces. Breaking spaces are\n  // converted to regular spaces by getVisibleText().\n  if (whitespace == 'pre' || whitespace == 'pre-wrap') {\n    text = text.replace(/[ \\f\\t\\v\\u2028\\u2029]/g, '\\xa0');\n  } else {\n    text = text.replace(/[\\ \\f\\t\\v\\u2028\\u2029]+/g, ' ');\n  }\n\n  if (textTransform == 'capitalize') {\n    // the unicode regex ending with /gu does not work in IE\n    var re = goog.userAgent.IE ? /(^|\\s|\\b)(\\S)/g : /(^|[^\\d\\p{L}\\p{S}])([\\p{Ll}|\\p{S}])/gu;\n    text = text.replace(re, function() {\n      return arguments[1] + arguments[2].toUpperCase();\n    });\n  } else if (textTransform == 'uppercase') {\n    text = text.toUpperCase();\n  } else if (textTransform == 'lowercase') {\n    text = text.toLowerCase();\n  }\n\n  var currLine = lines.pop() || '';\n  if (goog.string.endsWith(currLine, ' ') &&\n      goog.string.startsWith(text, ' ')) {\n    text = text.substr(1);\n  }\n  lines.push(currLine + text);\n};\n\n\n/**\n * Gets the opacity of a node (x-browser).\n * This gets the inline style opacity of the node and takes into account the\n * cascaded or the computed style for this node.\n *\n * @param {!Element} elem Element whose opacity has to be found.\n * @return {number} Opacity between 0 and 1.\n */\nbot.dom.getOpacity = function(elem) {\n  // TODO: Does this need to deal with rgba colors?\n  if (!bot.userAgent.IE_DOC_PRE9) {\n    return bot.dom.getOpacityNonIE_(elem);\n  } else {\n    if (bot.dom.getEffectiveStyle(elem, 'position') == 'relative') {\n      // Filter does not apply to non positioned elements.\n      return 1;\n    }\n\n    var opacityStyle = bot.dom.getEffectiveStyle(elem, 'filter');\n    var groups = opacityStyle.match(/^alpha\\(opacity=(\\d*)\\)/) ||\n        opacityStyle.match(\n        /^progid:DXImageTransform.Microsoft.Alpha\\(Opacity=(\\d*)\\)/);\n\n    if (groups) {\n      return Number(groups[1]) / 100;\n    } else {\n      return 1; // Opaque.\n    }\n  }\n};\n\n\n/**\n * Implementation of getOpacity for browsers that do support\n * the \"opacity\" style.\n *\n * @param {!Element} elem Element whose opacity has to be found.\n * @return {number} Opacity between 0 and 1.\n * @private\n */\nbot.dom.getOpacityNonIE_ = function(elem) {\n  // By default the element is opaque.\n  var elemOpacity = 1;\n\n  var opacityStyle = bot.dom.getEffectiveStyle(elem, 'opacity');\n  if (opacityStyle) {\n    elemOpacity = Number(opacityStyle);\n  }\n\n  // Let's apply the parent opacity to the element.\n  var parentElement = bot.dom.getParentElement(elem);\n  if (parentElement) {\n    elemOpacity = elemOpacity * bot.dom.getOpacityNonIE_(parentElement);\n  }\n  return elemOpacity;\n};\n\n\n/**\n * Returns the display parent element of the given node, or null. This method\n * differs from bot.dom.getParentElement in the presence of ShadowDOM and\n * &lt;shadow&gt; or &lt;content&gt; tags. For example if\n * <ul>\n * <li>div A contains div B\n * <li>div B has a css class .C\n * <li>div A contains a Shadow DOM with a div D\n * <li>div D contains a contents tag selecting all items of class .C\n * </ul>\n * then calling bot.dom.getParentElement on B will return A, but calling\n * getDisplayParentElement on B will return D.\n *\n * @param {!Node} node The node whose parent is desired.\n * @return {Node} The parent node, if available, null otherwise.\n */\nbot.dom.getParentNodeInComposedDom = function(node) {\n  var /**@type {Node}*/ parent = node.parentNode;\n\n  // Shadow DOM v1\n  if (parent && parent.shadowRoot && node.assignedSlot !== undefined) {\n    // Can be null on purpose, meaning it has no parent as\n    // it hasn't yet been slotted\n    return node.assignedSlot ? node.assignedSlot.parentNode : null;\n  }\n\n  // Shadow DOM V0 (deprecated)\n  if (node.getDestinationInsertionPoints) {\n    var destinations = node.getDestinationInsertionPoints();\n    if (destinations.length > 0) {\n      return destinations[destinations.length - 1];\n    }\n  }\n\n  return parent;\n};\n\n\n/**\n * @param {!Node} node Node.\n * @param {!Array.<string>} lines Accumulated visible lines of text.\n * @param {boolean} shown whether the node is visible\n * @param {?string} whitespace the node's 'white-space' effectiveStyle\n * @param {?string} textTransform the node's 'text-transform' effectiveStyle\n * @private\n * @suppress {missingProperties}\n */\nbot.dom.appendVisibleTextLinesFromNodeInComposedDom_ = function(\n    node, lines, shown, whitespace, textTransform) {\n\n  if (node.nodeType == goog.dom.NodeType.TEXT && shown) {\n    var textNode = /** @type {!Text} */ (node);\n    bot.dom.appendVisibleTextLinesFromTextNode_(textNode, lines,\n        whitespace, textTransform);\n  } else if (bot.dom.isElement(node)) {\n    var castElem = /** @type {!Element} */ (node);\n\n    if (bot.dom.isElement(node, 'CONTENT') || bot.dom.isElement(node, 'SLOT')) {\n      var parentNode = node;\n      while (parentNode.parentNode) {\n        parentNode = parentNode.parentNode;\n      }\n      if (parentNode instanceof ShadowRoot) {\n        // If the element is <content> and we're inside a shadow DOM then just\n        // append the contents of the nodes that have been distributed into it.\n        var contentElem = /** @type {!Object} */ (node);\n        var shadowChildren;\n        if (bot.dom.isElement(node, 'CONTENT')) {\n          shadowChildren = contentElem.getDistributedNodes();\n        } else {\n          shadowChildren = contentElem.assignedNodes();\n        }\n        goog.array.forEach(shadowChildren, function(node) {\n          bot.dom.appendVisibleTextLinesFromNodeInComposedDom_(\n              node, lines, shown, whitespace, textTransform);\n        });\n      } else {\n        // if we're not inside a shadow DOM, then we just treat <content>\n        // as an unknown element and use anything inside the tag\n        bot.dom.appendVisibleTextLinesFromElementInComposedDom_(\n          castElem, lines);\n      }\n    } else if (bot.dom.isElement(node, 'SHADOW')) {\n      // if the element is <shadow> then find the owning shadowRoot\n      var parentNode = node;\n      while (parentNode.parentNode) {\n        parentNode = parentNode.parentNode;\n      }\n      if (parentNode instanceof ShadowRoot) {\n        var thisShadowRoot = /** @type {!ShadowRoot} */ (parentNode);\n        if (thisShadowRoot) {\n          // then go through the owning shadowRoots older siblings and append\n          // their contents\n          var olderShadowRoot = thisShadowRoot.olderShadowRoot;\n          while (olderShadowRoot) {\n            goog.array.forEach(\n                olderShadowRoot.childNodes, function(childNode) {\n              bot.dom.appendVisibleTextLinesFromNodeInComposedDom_(\n                  childNode, lines, shown, whitespace, textTransform);\n            });\n            olderShadowRoot = olderShadowRoot.olderShadowRoot;\n          }\n        }\n      }\n    } else {\n      // otherwise append the contents of an element as per normal.\n      bot.dom.appendVisibleTextLinesFromElementInComposedDom_(\n        castElem, lines);\n    }\n  }\n};\n\n\n/**\n * Determines whether a given node has been distributed into a ShadowDOM\n * element somewhere.\n * @param {!Node} node The node to check\n * @return {boolean} True if the node has been distributed.\n */\nbot.dom.isNodeDistributedIntoShadowDom = function(node) {\n  var elemOrText = null;\n  if (node.nodeType == goog.dom.NodeType.ELEMENT) {\n    elemOrText = /** @type {!Element} */ (node);\n  } else if (node.nodeType == goog.dom.NodeType.TEXT) {\n    elemOrText = /** @type {!Text} */ (node);\n  }\n  return elemOrText != null &&\n      (elemOrText.assignedSlot != null ||\n        (elemOrText.getDestinationInsertionPoints &&\n        elemOrText.getDestinationInsertionPoints().length > 0)\n      );\n};\n\n\n/**\n * @param {!Element} elem Element.\n * @param {!Array.<string>} lines Accumulated visible lines of text.\n * @private\n */\nbot.dom.appendVisibleTextLinesFromElementInComposedDom_ = function(\n    elem, lines) {\n  if (elem.shadowRoot) {\n      goog.array.forEach(elem.shadowRoot.childNodes, function(node) {\n        bot.dom.appendVisibleTextLinesFromNodeInComposedDom_(\n            node, lines, true, null, null);\n      });\n  }\n\n  bot.dom.appendVisibleTextLinesFromElementCommon_(\n    elem, lines, bot.dom.isShown,\n    function(node, lines, shown, whitespace, textTransform) {\n      // If the node has been distributed into a shadowDom element\n      // to be displayed elsewhere, then we shouldn't append\n      // its contents here).\n      if (!bot.dom.isNodeDistributedIntoShadowDom(node)) {\n        bot.dom.appendVisibleTextLinesFromNodeInComposedDom_(\n            node, lines, shown, whitespace, textTransform);\n      }\n    });\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities used by goog.labs.userAgent tools. These functions\n * should not be used outside of goog.labs.userAgent.*.\n */\n\ngoog.provide('goog.labs.userAgent.util');\n\ngoog.require('goog.string.internal');\n\n\n/**\n * Gets the native userAgent string from navigator if it exists.\n * If navigator or navigator.userAgent string is missing, returns an empty\n * string.\n * @return {string}\n * @private\n */\ngoog.labs.userAgent.util.getNativeUserAgentString_ = function() {\n  var navigator = goog.labs.userAgent.util.getNavigator_();\n  if (navigator) {\n    var userAgent = navigator.userAgent;\n    if (userAgent) {\n      return userAgent;\n    }\n  }\n  return '';\n};\n\n\n/**\n * Getter for the native navigator.\n * This is a separate function so it can be stubbed out in testing.\n * @return {Navigator}\n * @private\n */\ngoog.labs.userAgent.util.getNavigator_ = function() {\n  return goog.global.navigator;\n};\n\n\n/**\n * A possible override for applications which wish to not check\n * navigator.userAgent but use a specified value for detection instead.\n * @private {string}\n */\ngoog.labs.userAgent.util.userAgent_ =\n    goog.labs.userAgent.util.getNativeUserAgentString_();\n\n\n/**\n * Applications may override browser detection on the built in\n * navigator.userAgent object by setting this string. Set to null to use the\n * browser object instead.\n * @param {?string=} opt_userAgent The User-Agent override.\n */\ngoog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {\n  goog.labs.userAgent.util.userAgent_ =\n      opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();\n};\n\n\n/**\n * @return {string} The user agent string.\n */\ngoog.labs.userAgent.util.getUserAgent = function() {\n  return goog.labs.userAgent.util.userAgent_;\n};\n\n\n/**\n * @param {string} str\n * @return {boolean} Whether the user agent contains the given string.\n */\ngoog.labs.userAgent.util.matchUserAgent = function(str) {\n  var userAgent = goog.labs.userAgent.util.getUserAgent();\n  return goog.string.internal.contains(userAgent, str);\n};\n\n\n/**\n * @param {string} str\n * @return {boolean} Whether the user agent contains the given string, ignoring\n *     case.\n */\ngoog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {\n  var userAgent = goog.labs.userAgent.util.getUserAgent();\n  return goog.string.internal.caseInsensitiveContains(userAgent, str);\n};\n\n\n/**\n * Parses the user agent into tuples for each section.\n * @param {string} userAgent\n * @return {!Array<!Array<string>>} Tuples of key, version, and the contents\n *     of the parenthetical.\n */\ngoog.labs.userAgent.util.extractVersionTuples = function(userAgent) {\n  // Matches each section of a user agent string.\n  // Example UA:\n  // Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us)\n  // AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405\n  // This has three version tuples: Mozilla, AppleWebKit, and Mobile.\n\n  var versionRegExp = new RegExp(\n      // Key. Note that a key may have a space.\n      // (i.e. 'Mobile Safari' in 'Mobile Safari/5.0')\n      '(\\\\w[\\\\w ]+)' +\n\n          '/' +                // slash\n          '([^\\\\s]+)' +        // version (i.e. '5.0b')\n          '\\\\s*' +             // whitespace\n          '(?:\\\\((.*?)\\\\))?',  // parenthetical info. parentheses not matched.\n      'g');\n\n  var data = [];\n  var match;\n\n  // Iterate and collect the version tuples.  Each iteration will be the\n  // next regex match.\n  while (match = versionRegExp.exec(userAgent)) {\n    data.push([\n      match[1],  // key\n      match[2],  // value\n      // || undefined as this is not undefined in IE7 and IE8\n      match[3] || undefined  // info\n    ]);\n  }\n\n  return data;\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Closure user agent detection (Browser).\n * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>\n * For more information on rendering engine, platform, or device see the other\n * sub-namespaces in goog.labs.userAgent, goog.labs.userAgent.platform,\n * goog.labs.userAgent.device respectively.)\n */\n\ngoog.provide('goog.labs.userAgent.browser');\n\ngoog.require('goog.array');\ngoog.require('goog.labs.userAgent.util');\ngoog.require('goog.object');\ngoog.require('goog.string.internal');\n\n\n// TODO(nnaze): Refactor to remove excessive exclusion logic in matching\n// functions.\n\n\n/**\n * @return {boolean} Whether the user's browser is Opera.  Note: Chromium\n *     based Opera (Opera 15+) is detected as Chrome to avoid unnecessary\n *     special casing.\n * @private\n */\ngoog.labs.userAgent.browser.matchOpera_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Opera');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is IE.\n * @private\n */\ngoog.labs.userAgent.browser.matchIE_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Trident') ||\n      goog.labs.userAgent.util.matchUserAgent('MSIE');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Edge. This refers to EdgeHTML\n * based Edge.\n * @private\n */\ngoog.labs.userAgent.browser.matchEdgeHtml_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Edge');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Chromium based Edge.\n * @private\n */\ngoog.labs.userAgent.browser.matchEdgeChromium_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Edg/');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Chromium based Opera.\n * @private\n */\ngoog.labs.userAgent.browser.matchOperaChromium_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('OPR');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Firefox.\n * @private\n */\ngoog.labs.userAgent.browser.matchFirefox_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Firefox') ||\n      goog.labs.userAgent.util.matchUserAgent('FxiOS');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Safari.\n * @private\n */\ngoog.labs.userAgent.browser.matchSafari_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Safari') &&\n      !(goog.labs.userAgent.browser.matchChrome_() ||\n        goog.labs.userAgent.browser.matchCoast_() ||\n        goog.labs.userAgent.browser.matchOpera_() ||\n        goog.labs.userAgent.browser.matchEdgeHtml_() ||\n        goog.labs.userAgent.browser.matchEdgeChromium_() ||\n        goog.labs.userAgent.browser.matchOperaChromium_() ||\n        goog.labs.userAgent.browser.matchFirefox_() ||\n        goog.labs.userAgent.browser.isSilk() ||\n        goog.labs.userAgent.util.matchUserAgent('Android'));\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Coast (Opera's Webkit-based\n *     iOS browser).\n * @private\n */\ngoog.labs.userAgent.browser.matchCoast_ = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Coast');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is iOS Webview.\n * @private\n */\ngoog.labs.userAgent.browser.matchIosWebview_ = function() {\n  // iOS Webview does not show up as Chrome or Safari. Also check for Opera's\n  // WebKit-based iOS browser, Coast.\n  return (goog.labs.userAgent.util.matchUserAgent('iPad') ||\n          goog.labs.userAgent.util.matchUserAgent('iPhone')) &&\n      !goog.labs.userAgent.browser.matchSafari_() &&\n      !goog.labs.userAgent.browser.matchChrome_() &&\n      !goog.labs.userAgent.browser.matchCoast_() &&\n      !goog.labs.userAgent.browser.matchFirefox_() &&\n      goog.labs.userAgent.util.matchUserAgent('AppleWebKit');\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is any Chromium browser. This\n * returns true for Chrome, Opera 15+, and Edge Chromium.\n * @private\n */\ngoog.labs.userAgent.browser.matchChrome_ = function() {\n  return (goog.labs.userAgent.util.matchUserAgent('Chrome') ||\n          goog.labs.userAgent.util.matchUserAgent('CriOS')) &&\n      !goog.labs.userAgent.browser.matchEdgeHtml_();\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is the Android browser.\n * @private\n */\ngoog.labs.userAgent.browser.matchAndroidBrowser_ = function() {\n  // Android can appear in the user agent string for Chrome on Android.\n  // This is not the Android standalone browser if it does.\n  return goog.labs.userAgent.util.matchUserAgent('Android') &&\n      !(goog.labs.userAgent.browser.isChrome() ||\n        goog.labs.userAgent.browser.isFirefox() ||\n        goog.labs.userAgent.browser.isOpera() ||\n        goog.labs.userAgent.browser.isSilk());\n};\n\n\n/**\n * @return {boolean} Whether the user's browser is Opera.\n */\ngoog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;\n\n\n/**\n * @return {boolean} Whether the user's browser is IE.\n */\ngoog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;\n\n\n/**\n * @return {boolean} Whether the user's browser is EdgeHTML based Edge.\n */\ngoog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdgeHtml_;\n\n\n/**\n * @return {boolean} Whether the user's browser is Chromium based Edge.\n */\ngoog.labs.userAgent.browser.isEdgeChromium =\n    goog.labs.userAgent.browser.matchEdgeChromium_;\n\n/**\n * @return {boolean} Whether the user's browser is Chromium based Opera.\n */\ngoog.labs.userAgent.browser.isOperaChromium =\n    goog.labs.userAgent.browser.matchOperaChromium_;\n\n/**\n * @return {boolean} Whether the user's browser is Firefox.\n */\ngoog.labs.userAgent.browser.isFirefox =\n    goog.labs.userAgent.browser.matchFirefox_;\n\n\n/**\n * @return {boolean} Whether the user's browser is Safari.\n */\ngoog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;\n\n\n/**\n * @return {boolean} Whether the user's browser is Coast (Opera's Webkit-based\n *     iOS browser).\n */\ngoog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;\n\n\n/**\n * @return {boolean} Whether the user's browser is iOS Webview.\n */\ngoog.labs.userAgent.browser.isIosWebview =\n    goog.labs.userAgent.browser.matchIosWebview_;\n\n\n/**\n * @return {boolean} Whether the user's browser is any Chromium based browser (\n * Chrome, Blink-based Opera (15+) and Edge Chromium).\n */\ngoog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;\n\n\n/**\n * @return {boolean} Whether the user's browser is the Android browser.\n */\ngoog.labs.userAgent.browser.isAndroidBrowser =\n    goog.labs.userAgent.browser.matchAndroidBrowser_;\n\n\n/**\n * For more information, see:\n * http://docs.aws.amazon.com/silk/latest/developerguide/user-agent.html\n * @return {boolean} Whether the user's browser is Silk.\n */\ngoog.labs.userAgent.browser.isSilk = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Silk');\n};\n\n\n/**\n * @return {string} The browser version or empty string if version cannot be\n *     determined. Note that for Internet Explorer, this returns the version of\n *     the browser, not the version of the rendering engine. (IE 8 in\n *     compatibility mode will return 8.0 rather than 7.0. To determine the\n *     rendering engine version, look at document.documentMode instead. See\n *     http://msdn.microsoft.com/en-us/library/cc196988(v=vs.85).aspx for more\n *     details.)\n */\ngoog.labs.userAgent.browser.getVersion = function() {\n  var userAgentString = goog.labs.userAgent.util.getUserAgent();\n  // Special case IE since IE's version is inside the parenthesis and\n  // without the '/'.\n  if (goog.labs.userAgent.browser.isIE()) {\n    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);\n  }\n\n  var versionTuples =\n      goog.labs.userAgent.util.extractVersionTuples(userAgentString);\n\n  // Construct a map for easy lookup.\n  var versionMap = {};\n  goog.array.forEach(versionTuples, function(tuple) {\n    // Note that the tuple is of length three, but we only care about the\n    // first two.\n    var key = tuple[0];\n    var value = tuple[1];\n    versionMap[key] = value;\n  });\n\n  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);\n\n  // Gives the value with the first key it finds, otherwise empty string.\n  function lookUpValueWithKeys(keys) {\n    var key = goog.array.find(keys, versionMapHasKey);\n    return versionMap[key] || '';\n  }\n\n  // Check Opera before Chrome since Opera 15+ has \"Chrome\" in the string.\n  // See\n  // http://my.opera.com/ODIN/blog/2013/07/15/opera-user-agent-strings-opera-15-and-beyond\n  if (goog.labs.userAgent.browser.isOpera()) {\n    // Opera 10 has Version/10.0 but Opera/9.8, so look for \"Version\" first.\n    // Opera uses 'OPR' for more recent UAs.\n    return lookUpValueWithKeys(['Version', 'Opera']);\n  }\n\n  // Check Edge before Chrome since it has Chrome in the string.\n  if (goog.labs.userAgent.browser.isEdge()) {\n    return lookUpValueWithKeys(['Edge']);\n  }\n\n  // Check Chromium Edge before Chrome since it has Chrome in the string.\n  if (goog.labs.userAgent.browser.isEdgeChromium()) {\n    return lookUpValueWithKeys(['Edg']);\n  }\n\n  if (goog.labs.userAgent.browser.isChrome()) {\n    return lookUpValueWithKeys(['Chrome', 'CriOS']);\n  }\n\n  // Usually products browser versions are in the third tuple after \"Mozilla\"\n  // and the engine.\n  var tuple = versionTuples[2];\n  return tuple && tuple[1] || '';\n};\n\n\n/**\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the browser version is higher or the same as the\n *     given version.\n */\ngoog.labs.userAgent.browser.isVersionOrHigher = function(version) {\n  return goog.string.internal.compareVersions(\n             goog.labs.userAgent.browser.getVersion(), version) >= 0;\n};\n\n\n/**\n * Determines IE version. More information:\n * http://msdn.microsoft.com/en-us/library/ie/bg182625(v=vs.85).aspx#uaString\n * http://msdn.microsoft.com/en-us/library/hh869301(v=vs.85).aspx\n * http://blogs.msdn.com/b/ie/archive/2010/03/23/introducing-ie9-s-user-agent-string.aspx\n * http://blogs.msdn.com/b/ie/archive/2009/01/09/the-internet-explorer-8-user-agent-string-updated-edition.aspx\n *\n * @param {string} userAgent the User-Agent.\n * @return {string}\n * @private\n */\ngoog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {\n  // IE11 may identify itself as MSIE 9.0 or MSIE 10.0 due to an IE 11 upgrade\n  // bug. Example UA:\n  // Mozilla/5.0 (MSIE 9.0; Windows NT 6.1; WOW64; Trident/7.0; rv:11.0)\n  // like Gecko.\n  // See http://www.whatismybrowser.com/developers/unknown-user-agent-fragments.\n  var rv = /rv: *([\\d\\.]*)/.exec(userAgent);\n  if (rv && rv[1]) {\n    return rv[1];\n  }\n\n  var version = '';\n  var msie = /MSIE +([\\d\\.]+)/.exec(userAgent);\n  if (msie && msie[1]) {\n    // IE in compatibility mode usually identifies itself as MSIE 7.0; in this\n    // case, use the Trident version to determine the version of IE. For more\n    // details, see the links above.\n    var tridentVersion = /Trident\\/(\\d.\\d)/.exec(userAgent);\n    if (msie[1] == '7.0') {\n      if (tridentVersion && tridentVersion[1]) {\n        switch (tridentVersion[1]) {\n          case '4.0':\n            version = '8.0';\n            break;\n          case '5.0':\n            version = '9.0';\n            break;\n          case '6.0':\n            version = '10.0';\n            break;\n          case '7.0':\n            version = '11.0';\n            break;\n        }\n      } else {\n        version = '7.0';\n      }\n    } else {\n      version = msie[1];\n    }\n  }\n  return version;\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for string manipulation.\n */\n\n\n/**\n * Namespace for string utilities\n */\ngoog.provide('goog.string');\ngoog.provide('goog.string.Unicode');\n\ngoog.require('goog.dom.safe');\ngoog.require('goog.html.uncheckedconversions');\ngoog.require('goog.string.Const');\ngoog.require('goog.string.internal');\n\n\n/**\n * @define {boolean} Enables HTML escaping of lowercase letter \"e\" which helps\n * with detection of double-escaping as this letter is frequently used.\n */\ngoog.string.DETECT_DOUBLE_ESCAPING =\n    goog.define('goog.string.DETECT_DOUBLE_ESCAPING', false);\n\n\n/**\n * @define {boolean} Whether to force non-dom html unescaping.\n */\ngoog.string.FORCE_NON_DOM_HTML_UNESCAPING =\n    goog.define('goog.string.FORCE_NON_DOM_HTML_UNESCAPING', false);\n\n\n/**\n * Common Unicode string characters.\n * @enum {string}\n */\ngoog.string.Unicode = {\n  NBSP: '\\xa0'\n};\n\n\n/**\n * Fast prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix A string to look for at the start of `str`.\n * @return {boolean} True if `str` begins with `prefix`.\n */\ngoog.string.startsWith = goog.string.internal.startsWith;\n\n\n/**\n * Fast suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix`.\n */\ngoog.string.endsWith = goog.string.internal.endsWith;\n\n\n/**\n * Case-insensitive prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix  A string to look for at the end of `str`.\n * @return {boolean} True if `str` begins with `prefix` (ignoring\n *     case).\n */\ngoog.string.caseInsensitiveStartsWith =\n    goog.string.internal.caseInsensitiveStartsWith;\n\n\n/**\n * Case-insensitive suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix` (ignoring\n *     case).\n */\ngoog.string.caseInsensitiveEndsWith =\n    goog.string.internal.caseInsensitiveEndsWith;\n\n\n/**\n * Case-insensitive equality checker.\n * @param {string} str1 First string to check.\n * @param {string} str2 Second string to check.\n * @return {boolean} True if `str1` and `str2` are the same string,\n *     ignoring case.\n */\ngoog.string.caseInsensitiveEquals = goog.string.internal.caseInsensitiveEquals;\n\n\n/**\n * Does simple python-style string substitution.\n * subs(\"foo%s hot%s\", \"bar\", \"dog\") becomes \"foobar hotdog\".\n * @param {string} str The string containing the pattern.\n * @param {...*} var_args The items to substitute into the pattern.\n * @return {string} A copy of `str` in which each occurrence of\n *     {@code %s} has been replaced an argument from `var_args`.\n */\ngoog.string.subs = function(str, var_args) {\n  var splitParts = str.split('%s');\n  var returnString = '';\n\n  var subsArguments = Array.prototype.slice.call(arguments, 1);\n  while (subsArguments.length &&\n         // Replace up to the last split part. We are inserting in the\n         // positions between split parts.\n         splitParts.length > 1) {\n    returnString += splitParts.shift() + subsArguments.shift();\n  }\n\n  return returnString + splitParts.join('%s');  // Join unused '%s'\n};\n\n\n/**\n * Converts multiple whitespace chars (spaces, non-breaking-spaces, new lines\n * and tabs) to a single space, and strips leading and trailing whitespace.\n * @param {string} str Input string.\n * @return {string} A copy of `str` with collapsed whitespace.\n */\ngoog.string.collapseWhitespace = function(str) {\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/[\\s\\xa0]+/g, ' ').replace(/^\\s+|\\s+$/g, '');\n};\n\n\n/**\n * Checks if a string is empty or contains only whitespaces.\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty or whitespace only.\n */\ngoog.string.isEmptyOrWhitespace = goog.string.internal.isEmptyOrWhitespace;\n\n\n/**\n * Checks if a string is empty.\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty.\n */\ngoog.string.isEmptyString = function(str) {\n  return str.length == 0;\n};\n\n\n/**\n * Checks if a string is empty or contains only whitespaces.\n *\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty or whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace instead.\n */\ngoog.string.isEmpty = goog.string.isEmptyOrWhitespace;\n\n\n/**\n * Checks if a string is null, undefined, empty or contains only whitespaces.\n * @param {*} str The string to check.\n * @return {boolean} Whether `str` is null, undefined, empty, or\n *     whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str))\n *     instead.\n */\ngoog.string.isEmptyOrWhitespaceSafe = function(str) {\n  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));\n};\n\n\n/**\n * Checks if a string is null, undefined, empty or contains only whitespaces.\n *\n * @param {*} str The string to check.\n * @return {boolean} Whether `str` is null, undefined, empty, or\n *     whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace instead.\n */\ngoog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;\n\n\n/**\n * Checks if a string is all breaking whitespace.\n * @param {string} str The string to check.\n * @return {boolean} Whether the string is all breaking whitespace.\n */\ngoog.string.isBreakingWhitespace = function(str) {\n  return !/[^\\t\\n\\r ]/.test(str);\n};\n\n\n/**\n * Checks if a string contains all letters.\n * @param {string} str string to check.\n * @return {boolean} True if `str` consists entirely of letters.\n */\ngoog.string.isAlpha = function(str) {\n  return !/[^a-zA-Z]/.test(str);\n};\n\n\n/**\n * Checks if a string contains only numbers.\n * @param {*} str string to check. If not a string, it will be\n *     casted to one.\n * @return {boolean} True if `str` is numeric.\n */\ngoog.string.isNumeric = function(str) {\n  return !/[^0-9]/.test(str);\n};\n\n\n/**\n * Checks if a string contains only numbers or letters.\n * @param {string} str string to check.\n * @return {boolean} True if `str` is alphanumeric.\n */\ngoog.string.isAlphaNumeric = function(str) {\n  return !/[^a-zA-Z0-9]/.test(str);\n};\n\n\n/**\n * Checks if a character is a space character.\n * @param {string} ch Character to check.\n * @return {boolean} True if `ch` is a space.\n */\ngoog.string.isSpace = function(ch) {\n  return ch == ' ';\n};\n\n\n/**\n * Checks if a character is a valid unicode character.\n * @param {string} ch Character to check.\n * @return {boolean} True if `ch` is a valid unicode character.\n */\ngoog.string.isUnicodeChar = function(ch) {\n  return ch.length == 1 && ch >= ' ' && ch <= '~' ||\n      ch >= '\\u0080' && ch <= '\\uFFFD';\n};\n\n\n/**\n * Takes a string and replaces newlines with a space. Multiple lines are\n * replaced with a single space.\n * @param {string} str The string from which to strip newlines.\n * @return {string} A copy of `str` stripped of newlines.\n */\ngoog.string.stripNewlines = function(str) {\n  return str.replace(/(\\r\\n|\\r|\\n)+/g, ' ');\n};\n\n\n/**\n * Replaces Windows and Mac new lines with unix style: \\r or \\r\\n with \\n.\n * @param {string} str The string to in which to canonicalize newlines.\n * @return {string} `str` A copy of {@code} with canonicalized newlines.\n */\ngoog.string.canonicalizeNewlines = function(str) {\n  return str.replace(/(\\r\\n|\\r|\\n)/g, '\\n');\n};\n\n\n/**\n * Normalizes whitespace in a string, replacing all whitespace chars with\n * a space.\n * @param {string} str The string in which to normalize whitespace.\n * @return {string} A copy of `str` with all whitespace normalized.\n */\ngoog.string.normalizeWhitespace = function(str) {\n  return str.replace(/\\xa0|\\s/g, ' ');\n};\n\n\n/**\n * Normalizes spaces in a string, replacing all consecutive spaces and tabs\n * with a single space. Replaces non-breaking space with a space.\n * @param {string} str The string in which to normalize spaces.\n * @return {string} A copy of `str` with all consecutive spaces and tabs\n *    replaced with a single space.\n */\ngoog.string.normalizeSpaces = function(str) {\n  return str.replace(/\\xa0|[ \\t]+/g, ' ');\n};\n\n\n/**\n * Removes the breaking spaces from the left and right of the string and\n * collapses the sequences of breaking spaces in the middle into single spaces.\n * The original and the result strings render the same way in HTML.\n * @param {string} str A string in which to collapse spaces.\n * @return {string} Copy of the string with normalized breaking spaces.\n */\ngoog.string.collapseBreakingSpaces = function(str) {\n  return str.replace(/[\\t\\r\\n ]+/g, ' ')\n      .replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, '');\n};\n\n\n/**\n * Trims white spaces to the left and right of a string.\n * @param {string} str The string to trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trim = goog.string.internal.trim;\n\n\n/**\n * Trims whitespaces at the left end of a string.\n * @param {string} str The string to left trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trimLeft = function(str) {\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/^[\\s\\xa0]+/, '');\n};\n\n\n/**\n * Trims whitespaces at the right end of a string.\n * @param {string} str The string to right trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trimRight = function(str) {\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/[\\s\\xa0]+$/, '');\n};\n\n\n/**\n * A string comparator that ignores case.\n * -1 = str1 less than str2\n *  0 = str1 equals str2\n *  1 = str1 greater than str2\n *\n * @param {string} str1 The string to compare.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} The comparator result, as described above.\n */\ngoog.string.caseInsensitiveCompare =\n    goog.string.internal.caseInsensitiveCompare;\n\n\n/**\n * Compares two strings interpreting their numeric substrings as numbers.\n *\n * @param {string} str1 First string.\n * @param {string} str2 Second string.\n * @param {!RegExp} tokenizerRegExp Splits a string into substrings of\n *     non-negative integers, non-numeric characters and optionally fractional\n *     numbers starting with a decimal point.\n * @return {number} Negative if str1 < str2, 0 is str1 == str2, positive if\n *     str1 > str2.\n * @private\n */\ngoog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {\n  if (str1 == str2) {\n    return 0;\n  }\n  if (!str1) {\n    return -1;\n  }\n  if (!str2) {\n    return 1;\n  }\n\n  // Using match to split the entire string ahead of time turns out to be faster\n  // for most inputs than using RegExp.exec or iterating over each character.\n  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);\n  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);\n\n  var count = Math.min(tokens1.length, tokens2.length);\n\n  for (var i = 0; i < count; i++) {\n    var a = tokens1[i];\n    var b = tokens2[i];\n\n    // Compare pairs of tokens, returning if one token sorts before the other.\n    if (a != b) {\n      // Only if both tokens are integers is a special comparison required.\n      // Decimal numbers are sorted as strings (e.g., '.09' < '.1').\n      var num1 = parseInt(a, 10);\n      if (!isNaN(num1)) {\n        var num2 = parseInt(b, 10);\n        if (!isNaN(num2) && num1 - num2) {\n          return num1 - num2;\n        }\n      }\n      return a < b ? -1 : 1;\n    }\n  }\n\n  // If one string is a substring of the other, the shorter string sorts first.\n  if (tokens1.length != tokens2.length) {\n    return tokens1.length - tokens2.length;\n  }\n\n  // The two strings must be equivalent except for case (perfect equality is\n  // tested at the head of the function.) Revert to default ASCII string\n  // comparison to stabilize the sort.\n  return str1 < str2 ? -1 : 1;\n};\n\n\n/**\n * String comparison function that handles non-negative integer numbers in a\n * way humans might expect. Using this function, the string 'File 2.jpg' sorts\n * before 'File 10.jpg', and 'Version 1.9' before 'Version 1.10'. The comparison\n * is mostly case-insensitive, though strings that are identical except for case\n * are sorted with the upper-case strings before lower-case.\n *\n * This comparison function is up to 50x slower than either the default or the\n * case-insensitive compare. It should not be used in time-critical code, but\n * should be fast enough to sort several hundred short strings (like filenames)\n * with a reasonable delay.\n *\n * @param {string} str1 The string to compare in a numerically sensitive way.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} less than 0 if str1 < str2, 0 if str1 == str2, greater than\n *     0 if str1 > str2.\n */\ngoog.string.intAwareCompare = function(str1, str2) {\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\D+/g);\n};\n\n\n/**\n * String comparison function that handles non-negative integer and fractional\n * numbers in a way humans might expect. Using this function, the string\n * 'File 2.jpg' sorts before 'File 10.jpg', and '3.14' before '3.2'. Equivalent\n * to {@link goog.string.intAwareCompare} apart from the way how it interprets\n * dots.\n *\n * @param {string} str1 The string to compare in a numerically sensitive way.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} less than 0 if str1 < str2, 0 if str1 == str2, greater than\n *     0 if str1 > str2.\n */\ngoog.string.floatAwareCompare = function(str1, str2) {\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\.\\d+|\\D+/g);\n};\n\n\n/**\n * Alias for {@link goog.string.floatAwareCompare}.\n *\n * @param {string} str1\n * @param {string} str2\n * @return {number}\n */\ngoog.string.numerateCompare = goog.string.floatAwareCompare;\n\n\n/**\n * URL-encodes a string\n * @param {*} str The string to url-encode.\n * @return {string} An encoded copy of `str` that is safe for urls.\n *     Note that '#', ':', and other characters used to delimit portions\n *     of URLs *will* be encoded.\n */\ngoog.string.urlEncode = function(str) {\n  return encodeURIComponent(String(str));\n};\n\n\n/**\n * URL-decodes the string. We need to specially handle '+'s because\n * the javascript library doesn't convert them to spaces.\n * @param {string} str The string to url decode.\n * @return {string} The decoded `str`.\n */\ngoog.string.urlDecode = function(str) {\n  return decodeURIComponent(str.replace(/\\+/g, ' '));\n};\n\n\n/**\n * Converts \\n to <br>s or <br />s.\n * @param {string} str The string in which to convert newlines.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} A copy of `str` with converted newlines.\n */\ngoog.string.newLineToBr = goog.string.internal.newLineToBr;\n\n\n/**\n * Escapes double quote '\"' and single quote '\\'' characters in addition to\n * '&', '<', and '>' so that a string can be included in an HTML tag attribute\n * value within double or single quotes.\n *\n * It should be noted that > doesn't need to be escaped for the HTML or XML to\n * be valid, but it has been decided to escape it for consistency with other\n * implementations.\n *\n * With goog.string.DETECT_DOUBLE_ESCAPING, this function escapes also the\n * lowercase letter \"e\".\n *\n * NOTE(user):\n * HtmlEscape is often called during the generation of large blocks of HTML.\n * Using statics for the regular expressions and strings is an optimization\n * that can more than half the amount of time IE spends in this function for\n * large apps, since strings and regexes both contribute to GC allocations.\n *\n * Testing for the presence of a character before escaping increases the number\n * of function calls, but actually provides a speed increase for the average\n * case -- since the average case often doesn't require the escaping of all 4\n * characters and indexOf() is much cheaper than replace().\n * The worst case does suffer slightly from the additional calls, therefore the\n * opt_isLikelyToContainHtmlChars option has been included for situations\n * where all 4 HTML entities are very likely to be present and need escaping.\n *\n * Some benchmarks (times tended to fluctuate +-0.05ms):\n *                                     FireFox                     IE6\n * (no chars / average (mix of cases) / all 4 chars)\n * no checks                     0.13 / 0.22 / 0.22         0.23 / 0.53 / 0.80\n * indexOf                       0.08 / 0.17 / 0.26         0.22 / 0.54 / 0.84\n * indexOf + re test             0.07 / 0.17 / 0.28         0.19 / 0.50 / 0.85\n *\n * An additional advantage of checking if replace actually needs to be called\n * is a reduction in the number of object allocations, so as the size of the\n * application grows the difference between the various methods would increase.\n *\n * @param {string} str string to be escaped.\n * @param {boolean=} opt_isLikelyToContainHtmlChars Don't perform a check to see\n *     if the character needs replacing - use this option if you expect each of\n *     the characters to appear often. Leave false if you expect few html\n *     characters to occur in your strings, such as if you are escaping HTML.\n * @return {string} An escaped copy of `str`.\n */\ngoog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {\n  str = goog.string.internal.htmlEscape(str, opt_isLikelyToContainHtmlChars);\n  if (goog.string.DETECT_DOUBLE_ESCAPING) {\n    str = str.replace(goog.string.E_RE_, '&#101;');\n  }\n  return str;\n};\n\n\n/**\n * Regular expression that matches a lowercase letter \"e\", for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.E_RE_ = /e/g;\n\n\n/**\n * Unescapes an HTML string.\n *\n * @param {string} str The string to unescape.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapeEntities = function(str) {\n  if (goog.string.contains(str, '&')) {\n    // We are careful not to use a DOM if we do not have one or we explicitly\n    // requested non-DOM html unescaping.\n    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING &&\n        'document' in goog.global) {\n      return goog.string.unescapeEntitiesUsingDom_(str);\n    } else {\n      // Fall back on pure XML entities\n      return goog.string.unescapePureXmlEntities_(str);\n    }\n  }\n  return str;\n};\n\n\n/**\n * Unescapes a HTML string using the provided document.\n *\n * @param {string} str The string to unescape.\n * @param {!Document} document A document to use in escaping the string.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapeEntitiesWithDocument = function(str, document) {\n  if (goog.string.contains(str, '&')) {\n    return goog.string.unescapeEntitiesUsingDom_(str, document);\n  }\n  return str;\n};\n\n\n/**\n * Unescapes an HTML string using a DOM to resolve non-XML, non-numeric\n * entities. This function is XSS-safe and whitespace-preserving.\n * @private\n * @param {string} str The string to unescape.\n * @param {Document=} opt_document An optional document to use for creating\n *     elements. If this is not specified then the default window.document\n *     will be used.\n * @return {string} The unescaped `str` string.\n */\ngoog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {\n  /** @type {!Object<string, string>} */\n  var seen = {'&amp;': '&', '&lt;': '<', '&gt;': '>', '&quot;': '\"'};\n  /** @type {!Element} */\n  var div;\n  if (opt_document) {\n    div = opt_document.createElement('div');\n  } else {\n    div = goog.global.document.createElement('div');\n  }\n  // Match as many valid entity characters as possible. If the actual entity\n  // happens to be shorter, it will still work as innerHTML will return the\n  // trailing characters unchanged. Since the entity characters do not include\n  // open angle bracket, there is no chance of XSS from the innerHTML use.\n  // Since no whitespace is passed to innerHTML, whitespace is preserved.\n  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {\n    // Check for cached entity.\n    var value = seen[s];\n    if (value) {\n      return value;\n    }\n    // Check for numeric entity.\n    if (entity.charAt(0) == '#') {\n      // Prefix with 0 so that hex entities (e.g. &#x10) parse as hex numbers.\n      var n = Number('0' + entity.substr(1));\n      if (!isNaN(n)) {\n        value = String.fromCharCode(n);\n      }\n    }\n    // Fall back to innerHTML otherwise.\n    if (!value) {\n      // Append a non-entity character to avoid a bug in Webkit that parses\n      // an invalid entity at the end of innerHTML text as the empty string.\n      goog.dom.safe.setInnerHtml(\n          div,\n          goog.html.uncheckedconversions\n              .safeHtmlFromStringKnownToSatisfyTypeContract(\n                  goog.string.Const.from('Single HTML entity.'), s + ' '));\n      // Then remove the trailing character from the result.\n      value = div.firstChild.nodeValue.slice(0, -1);\n    }\n    // Cache and return.\n    return seen[s] = value;\n  });\n};\n\n\n/**\n * Unescapes XML entities.\n * @private\n * @param {string} str The string to unescape.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapePureXmlEntities_ = function(str) {\n  return str.replace(/&([^;]+);/g, function(s, entity) {\n    switch (entity) {\n      case 'amp':\n        return '&';\n      case 'lt':\n        return '<';\n      case 'gt':\n        return '>';\n      case 'quot':\n        return '\"';\n      default:\n        if (entity.charAt(0) == '#') {\n          // Prefix with 0 so that hex entities (e.g. &#x10) parse as hex.\n          var n = Number('0' + entity.substr(1));\n          if (!isNaN(n)) {\n            return String.fromCharCode(n);\n          }\n        }\n        // For invalid entities we just return the entity\n        return s;\n    }\n  });\n};\n\n\n/**\n * Regular expression that matches an HTML entity.\n * See also HTML5: Tokenization / Tokenizing character references.\n * @private\n * @type {!RegExp}\n */\ngoog.string.HTML_ENTITY_PATTERN_ = /&([^;\\s<&]+);?/g;\n\n\n/**\n * Do escaping of whitespace to preserve spatial formatting. We use character\n * entity #160 to make it safer for xml.\n * @param {string} str The string in which to escape whitespace.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} An escaped copy of `str`.\n */\ngoog.string.whitespaceEscape = function(str, opt_xml) {\n  // This doesn't use goog.string.preserveSpaces for backwards compatibility.\n  return goog.string.newLineToBr(str.replace(/  /g, ' &#160;'), opt_xml);\n};\n\n\n/**\n * Preserve spaces that would be otherwise collapsed in HTML by replacing them\n * with non-breaking space Unicode characters.\n * @param {string} str The string in which to preserve whitespace.\n * @return {string} A copy of `str` with preserved whitespace.\n */\ngoog.string.preserveSpaces = function(str) {\n  return str.replace(/(^|[\\n ]) /g, '$1' + goog.string.Unicode.NBSP);\n};\n\n\n/**\n * Strip quote characters around a string.  The second argument is a string of\n * characters to treat as quotes.  This can be a single character or a string of\n * multiple character and in that case each of those are treated as possible\n * quote characters. For example:\n *\n * <pre>\n * goog.string.stripQuotes('\"abc\"', '\"`') --\u003e 'abc'\n * goog.string.stripQuotes('`abc`', '\"`') --\u003e 'abc'\n * </pre>\n *\n * @param {string} str The string to strip.\n * @param {string} quoteChars The quote characters to strip.\n * @return {string} A copy of `str` without the quotes.\n */\ngoog.string.stripQuotes = function(str, quoteChars) {\n  var length = quoteChars.length;\n  for (var i = 0; i < length; i++) {\n    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);\n    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {\n      return str.substring(1, str.length - 1);\n    }\n  }\n  return str;\n};\n\n\n/**\n * Truncates a string to a certain length and adds '...' if necessary.  The\n * length also accounts for the ellipsis, so a maximum length of 10 and a string\n * 'Hello World!' produces 'Hello W...'.\n * @param {string} str The string to truncate.\n * @param {number} chars Max number of characters.\n * @param {boolean=} opt_protectEscapedCharacters Whether to protect escaped\n *     characters from being cut off in the middle.\n * @return {string} The truncated `str` string.\n */\ngoog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.unescapeEntities(str);\n  }\n\n  if (str.length > chars) {\n    str = str.substring(0, chars - 3) + '...';\n  }\n\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.htmlEscape(str);\n  }\n\n  return str;\n};\n\n\n/**\n * Truncate a string in the middle, adding \"...\" if necessary,\n * and favoring the beginning of the string.\n * @param {string} str The string to truncate the middle of.\n * @param {number} chars Max number of characters.\n * @param {boolean=} opt_protectEscapedCharacters Whether to protect escaped\n *     characters from being cutoff in the middle.\n * @param {number=} opt_trailingChars Optional number of trailing characters to\n *     leave at the end of the string, instead of truncating as close to the\n *     middle as possible.\n * @return {string} A truncated copy of `str`.\n */\ngoog.string.truncateMiddle = function(\n    str, chars, opt_protectEscapedCharacters, opt_trailingChars) {\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.unescapeEntities(str);\n  }\n\n  if (opt_trailingChars && str.length > chars) {\n    if (opt_trailingChars > chars) {\n      opt_trailingChars = chars;\n    }\n    var endPoint = str.length - opt_trailingChars;\n    var startPoint = chars - opt_trailingChars;\n    str = str.substring(0, startPoint) + '...' + str.substring(endPoint);\n  } else if (str.length > chars) {\n    // Favor the beginning of the string:\n    var half = Math.floor(chars / 2);\n    var endPos = str.length - half;\n    half += chars % 2;\n    str = str.substring(0, half) + '...' + str.substring(endPos);\n  }\n\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.htmlEscape(str);\n  }\n\n  return str;\n};\n\n\n/**\n * Special chars that need to be escaped for goog.string.quote.\n * @private {!Object<string, string>}\n */\ngoog.string.specialEscapeChars_ = {\n  '\\0': '\\\\0',\n  '\\b': '\\\\b',\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n  '\\x0B': '\\\\x0B',  // '\\v' is not supported in JScript\n  '\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n  // To support the use case of embedding quoted strings inside of script\n  // tags, we have to make sure HTML comments and opening/closing script tags do\n  // not appear in the resulting string. The specific strings that must be\n  // escaped are documented at:\n  // https://html.spec.whatwg.org/multipage/scripting.html#restrictions-for-contents-of-script-elements\n  '<': '\\\\u003C'  // NOTE: JSON.parse crashes on '\\\\x3c'.\n};\n\n\n/**\n * Character mappings used internally for goog.string.escapeChar.\n * @private {!Object<string, string>}\n */\ngoog.string.jsEscapeCache_ = {\n  '\\'': '\\\\\\''\n};\n\n\n/**\n * Encloses a string in double quotes and escapes characters so that the\n * string is a valid JS string. The resulting string is safe to embed in\n * `<script>` tags as \"<\" is escaped.\n * @param {string} s The string to quote.\n * @return {string} A copy of `s` surrounded by double quotes.\n */\ngoog.string.quote = function(s) {\n  s = String(s);\n  var sb = ['\"'];\n  for (var i = 0; i < s.length; i++) {\n    var ch = s.charAt(i);\n    var cc = ch.charCodeAt(0);\n    sb[i + 1] = goog.string.specialEscapeChars_[ch] ||\n        ((cc > 31 && cc < 127) ? ch : goog.string.escapeChar(ch));\n  }\n  sb.push('\"');\n  return sb.join('');\n};\n\n\n/**\n * Takes a string and returns the escaped string for that input string.\n * @param {string} str The string to escape.\n * @return {string} An escaped string representing `str`.\n */\ngoog.string.escapeString = function(str) {\n  var sb = [];\n  for (var i = 0; i < str.length; i++) {\n    sb[i] = goog.string.escapeChar(str.charAt(i));\n  }\n  return sb.join('');\n};\n\n\n/**\n * Takes a character and returns the escaped string for that character. For\n * example escapeChar(String.fromCharCode(15)) -> \"\\\\x0E\".\n * @param {string} c The character to escape.\n * @return {string} An escaped string representing `c`.\n */\ngoog.string.escapeChar = function(c) {\n  if (c in goog.string.jsEscapeCache_) {\n    return goog.string.jsEscapeCache_[c];\n  }\n\n  if (c in goog.string.specialEscapeChars_) {\n    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];\n  }\n\n  var rv = c;\n  var cc = c.charCodeAt(0);\n  if (cc > 31 && cc < 127) {\n    rv = c;\n  } else {\n    // tab is 9 but handled above\n    if (cc < 256) {\n      rv = '\\\\x';\n      if (cc < 16 || cc > 256) {\n        rv += '0';\n      }\n    } else {\n      rv = '\\\\u';\n      if (cc < 4096) {  // \\u1000\n        rv += '0';\n      }\n    }\n    rv += cc.toString(16).toUpperCase();\n  }\n\n  return goog.string.jsEscapeCache_[c] = rv;\n};\n\n\n/**\n * Determines whether a string contains a substring.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n */\ngoog.string.contains = goog.string.internal.contains;\n\n\n/**\n * Determines whether a string contains a substring, ignoring case.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n */\ngoog.string.caseInsensitiveContains =\n    goog.string.internal.caseInsensitiveContains;\n\n\n/**\n * Returns the non-overlapping occurrences of ss in s.\n * If either s or ss evalutes to false, then returns zero.\n * @param {string} s The string to look in.\n * @param {string} ss The string to look for.\n * @return {number} Number of occurrences of ss in s.\n */\ngoog.string.countOf = function(s, ss) {\n  return s && ss ? s.split(ss).length - 1 : 0;\n};\n\n\n/**\n * Removes a substring of a specified length at a specific\n * index in a string.\n * @param {string} s The base string from which to remove.\n * @param {number} index The index at which to remove the substring.\n * @param {number} stringLength The length of the substring to remove.\n * @return {string} A copy of `s` with the substring removed or the full\n *     string if nothing is removed or the input is invalid.\n */\ngoog.string.removeAt = function(s, index, stringLength) {\n  var resultStr = s;\n  // If the index is greater or equal to 0 then remove substring\n  if (index >= 0 && index < s.length && stringLength > 0) {\n    resultStr = s.substr(0, index) +\n        s.substr(index + stringLength, s.length - index - stringLength);\n  }\n  return resultStr;\n};\n\n\n/**\n * Removes the first occurrence of a substring from a string.\n * @param {string} str The base string from which to remove.\n * @param {string} substr The string to remove.\n * @return {string} A copy of `str` with `substr` removed or the\n *     full string if nothing is removed.\n */\ngoog.string.remove = function(str, substr) {\n  return str.replace(substr, '');\n};\n\n\n/**\n *  Removes all occurrences of a substring from a string.\n *  @param {string} s The base string from which to remove.\n *  @param {string} ss The string to remove.\n *  @return {string} A copy of `s` with `ss` removed or the full\n *      string if nothing is removed.\n */\ngoog.string.removeAll = function(s, ss) {\n  var re = new RegExp(goog.string.regExpEscape(ss), 'g');\n  return s.replace(re, '');\n};\n\n\n/**\n *  Replaces all occurrences of a substring of a string with a new substring.\n *  @param {string} s The base string from which to remove.\n *  @param {string} ss The string to replace.\n *  @param {string} replacement The replacement string.\n *  @return {string} A copy of `s` with `ss` replaced by\n *      `replacement` or the original string if nothing is replaced.\n */\ngoog.string.replaceAll = function(s, ss, replacement) {\n  var re = new RegExp(goog.string.regExpEscape(ss), 'g');\n  return s.replace(re, replacement.replace(/\\$/g, '$$$$'));\n};\n\n\n/**\n * Escapes characters in the string that are not safe to use in a RegExp.\n * @param {*} s The string to escape. If not a string, it will be casted\n *     to one.\n * @return {string} A RegExp safe, escaped copy of `s`.\n */\ngoog.string.regExpEscape = function(s) {\n  return String(s)\n      .replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1')\n      .replace(/\\x08/g, '\\\\x08');\n};\n\n\n/**\n * Repeats a string n times.\n * @param {string} string The string to repeat.\n * @param {number} length The number of times to repeat.\n * @return {string} A string containing `length` repetitions of\n *     `string`.\n */\ngoog.string.repeat = (String.prototype.repeat) ? function(string, length) {\n  // The native method is over 100 times faster than the alternative.\n  return string.repeat(length);\n} : function(string, length) {\n  return new Array(length + 1).join(string);\n};\n\n\n/**\n * Pads number to given length and optionally rounds it to a given precision.\n * For example:\n * <pre>padNumber(1.25, 2, 3) -> '01.250'\n * padNumber(1.25, 2) -> '01.25'\n * padNumber(1.25, 2, 1) -> '01.3'\n * padNumber(1.25, 0) -> '1.25'</pre>\n *\n * @param {number} num The number to pad.\n * @param {number} length The desired length.\n * @param {number=} opt_precision The desired precision.\n * @return {string} `num` as a string with the given options.\n */\ngoog.string.padNumber = function(num, length, opt_precision) {\n  var s =\n      (opt_precision !== undefined) ? num.toFixed(opt_precision) : String(num);\n  var index = s.indexOf('.');\n  if (index == -1) {\n    index = s.length;\n  }\n  return goog.string.repeat('0', Math.max(0, length - index)) + s;\n};\n\n\n/**\n * Returns a string representation of the given object, with\n * null and undefined being returned as the empty string.\n *\n * @param {*} obj The object to convert.\n * @return {string} A string representation of the `obj`.\n */\ngoog.string.makeSafe = function(obj) {\n  return obj == null ? '' : String(obj);\n};\n\n\n/**\n * Concatenates string expressions. This is useful\n * since some browsers are very inefficient when it comes to using plus to\n * concat strings. Be careful when using null and undefined here since\n * these will not be included in the result. If you need to represent these\n * be sure to cast the argument to a String first.\n * For example:\n * <pre>buildString('a', 'b', 'c', 'd') -> 'abcd'\n * buildString(null, undefined) -> ''\n * </pre>\n * @param {...*} var_args A list of strings to concatenate. If not a string,\n *     it will be casted to one.\n * @return {string} The concatenation of `var_args`.\n */\ngoog.string.buildString = function(var_args) {\n  return Array.prototype.join.call(arguments, '');\n};\n\n\n/**\n * Returns a string with at least 64-bits of randomness.\n *\n * Doesn't trust JavaScript's random function entirely. Uses a combination of\n * random and current timestamp, and then encodes the string in base-36 to\n * make it shorter.\n *\n * @return {string} A random string, e.g. sn1s7vb4gcic.\n */\ngoog.string.getRandomString = function() {\n  var x = 2147483648;\n  return Math.floor(Math.random() * x).toString(36) +\n      Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);\n};\n\n\n/**\n * Compares two version numbers.\n *\n * @param {string|number} version1 Version of first item.\n * @param {string|number} version2 Version of second item.\n *\n * @return {number}  1 if `version1` is higher.\n *                   0 if arguments are equal.\n *                  -1 if `version2` is higher.\n */\ngoog.string.compareVersions = goog.string.internal.compareVersions;\n\n\n/**\n * String hash function similar to java.lang.String.hashCode().\n * The hash code for a string is computed as\n * s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n * where s[i] is the ith character of the string and n is the length of\n * the string. We mod the result to make it between 0 (inclusive) and 2^32\n * (exclusive).\n * @param {string} str A string.\n * @return {number} Hash value for `str`, between 0 (inclusive) and 2^32\n *  (exclusive). The empty string returns 0.\n */\ngoog.string.hashCode = function(str) {\n  var result = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Normalize to 4 byte range, 0 ... 2^32.\n    result = (31 * result + str.charCodeAt(i)) >>> 0;\n  }\n  return result;\n};\n\n\n/**\n * The most recent unique ID. |0 is equivalent to Math.floor in this case.\n * @type {number}\n * @private\n */\ngoog.string.uniqueStringCounter_ = Math.random() * 0x80000000 | 0;\n\n\n/**\n * Generates and returns a string which is unique in the current document.\n * This is useful, for example, to create unique IDs for DOM elements.\n * @return {string} A unique id.\n */\ngoog.string.createUniqueString = function() {\n  return 'goog_' + goog.string.uniqueStringCounter_++;\n};\n\n\n/**\n * Converts the supplied string to a number, which may be Infinity or NaN.\n * This function strips whitespace: (toNumber(' 123') === 123)\n * This function accepts scientific notation: (toNumber('1e1') === 10)\n *\n * This is better than JavaScript's built-in conversions because, sadly:\n *     (Number(' ') === 0) and (parseFloat('123a') === 123)\n *\n * @param {string} str The string to convert.\n * @return {number} The number the supplied string represents, or NaN.\n */\ngoog.string.toNumber = function(str) {\n  var num = Number(str);\n  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {\n    return NaN;\n  }\n  return num;\n};\n\n\n/**\n * Returns whether the given string is lower camel case (e.g. \"isFooBar\").\n *\n * Note that this assumes the string is entirely letters.\n * @see http://en.wikipedia.org/wiki/CamelCase#Variations_and_synonyms\n *\n * @param {string} str String to test.\n * @return {boolean} Whether the string is lower camel case.\n */\ngoog.string.isLowerCamelCase = function(str) {\n  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);\n};\n\n\n/**\n * Returns whether the given string is upper camel case (e.g. \"FooBarBaz\").\n *\n * Note that this assumes the string is entirely letters.\n * @see http://en.wikipedia.org/wiki/CamelCase#Variations_and_synonyms\n *\n * @param {string} str String to test.\n * @return {boolean} Whether the string is upper camel case.\n */\ngoog.string.isUpperCamelCase = function(str) {\n  return /^([A-Z][a-z]*)+$/.test(str);\n};\n\n\n/**\n * Converts a string from selector-case to camelCase (e.g. from\n * \"multi-part-string\" to \"multiPartString\"), useful for converting\n * CSS selectors and HTML dataset keys to their equivalent JS properties.\n * @param {string} str The string in selector-case form.\n * @return {string} The string in camelCase form.\n */\ngoog.string.toCamelCase = function(str) {\n  return String(str).replace(/\\-([a-z])/g, function(all, match) {\n    return match.toUpperCase();\n  });\n};\n\n\n/**\n * Converts a string from camelCase to selector-case (e.g. from\n * \"multiPartString\" to \"multi-part-string\"), useful for converting JS\n * style and dataset properties to equivalent CSS selectors and HTML keys.\n * @param {string} str The string in camelCase form.\n * @return {string} The string in selector-case form.\n */\ngoog.string.toSelectorCase = function(str) {\n  return String(str).replace(/([A-Z])/g, '-$1').toLowerCase();\n};\n\n\n/**\n * Converts a string into TitleCase. First character of the string is always\n * capitalized in addition to the first letter of every subsequent word.\n * Words are delimited by one or more whitespaces by default. Custom delimiters\n * can optionally be specified to replace the default, which doesn't preserve\n * whitespace delimiters and instead must be explicitly included if needed.\n *\n * Default delimiter => \" \":\n *    goog.string.toTitleCase('oneTwoThree')    => 'OneTwoThree'\n *    goog.string.toTitleCase('one two three')  => 'One Two Three'\n *    goog.string.toTitleCase('  one   two   ') => '  One   Two   '\n *    goog.string.toTitleCase('one_two_three')  => 'One_two_three'\n *    goog.string.toTitleCase('one-two-three')  => 'One-two-three'\n *\n * Custom delimiter => \"_-.\":\n *    goog.string.toTitleCase('oneTwoThree', '_-.')       => 'OneTwoThree'\n *    goog.string.toTitleCase('one two three', '_-.')     => 'One two three'\n *    goog.string.toTitleCase('  one   two   ', '_-.')    => '  one   two   '\n *    goog.string.toTitleCase('one_two_three', '_-.')     => 'One_Two_Three'\n *    goog.string.toTitleCase('one-two-three', '_-.')     => 'One-Two-Three'\n *    goog.string.toTitleCase('one...two...three', '_-.') => 'One...Two...Three'\n *    goog.string.toTitleCase('one. two. three', '_-.')   => 'One. two. three'\n *    goog.string.toTitleCase('one-two.three', '_-.')     => 'One-Two.Three'\n *\n * @param {string} str String value in camelCase form.\n * @param {string=} opt_delimiters Custom delimiter character set used to\n *      distinguish words in the string value. Each character represents a\n *      single delimiter. When provided, default whitespace delimiter is\n *      overridden and must be explicitly included if needed.\n * @return {string} String value in TitleCase form.\n */\ngoog.string.toTitleCase = function(str, opt_delimiters) {\n  var delimiters = (typeof opt_delimiters === 'string') ?\n      goog.string.regExpEscape(opt_delimiters) :\n      '\\\\s';\n\n  // For IE8, we need to prevent using an empty character set. Otherwise,\n  // incorrect matching will occur.\n  delimiters = delimiters ? '|[' + delimiters + ']+' : '';\n\n  var regexp = new RegExp('(^' + delimiters + ')([a-z])', 'g');\n  return str.replace(regexp, function(all, p1, p2) {\n    return p1 + p2.toUpperCase();\n  });\n};\n\n\n/**\n * Capitalizes a string, i.e. converts the first letter to uppercase\n * and all other letters to lowercase, e.g.:\n *\n * goog.string.capitalize('one')     => 'One'\n * goog.string.capitalize('ONE')     => 'One'\n * goog.string.capitalize('one two') => 'One two'\n *\n * Note that this function does not trim initial whitespace.\n *\n * @param {string} str String value to capitalize.\n * @return {string} String value with first letter in uppercase.\n */\ngoog.string.capitalize = function(str) {\n  return String(str.charAt(0)).toUpperCase() +\n      String(str.substr(1)).toLowerCase();\n};\n\n\n/**\n * Parse a string in decimal or hexidecimal ('0xFFFF') form.\n *\n * To parse a particular radix, please use parseInt(string, radix) directly. See\n * https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt\n *\n * This is a wrapper for the built-in parseInt function that will only parse\n * numbers as base 10 or base 16.  Some JS implementations assume strings\n * starting with \"0\" are intended to be octal. ES3 allowed but discouraged\n * this behavior. ES5 forbids it.  This function emulates the ES5 behavior.\n *\n * For more information, see Mozilla JS Reference: http://goo.gl/8RiFj\n *\n * @param {string|number|null|undefined} value The value to be parsed.\n * @return {number} The number, parsed. If the string failed to parse, this\n *     will be NaN.\n */\ngoog.string.parseInt = function(value) {\n  // Force finite numbers to strings.\n  if (isFinite(value)) {\n    value = String(value);\n  }\n\n  if (typeof value === 'string') {\n    // If the string starts with '0x' or '-0x', parse as hex.\n    return /^\\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);\n  }\n\n  return NaN;\n};\n\n\n/**\n * Splits a string on a separator a limited number of times.\n *\n * This implementation is more similar to Python or Java, where the limit\n * parameter specifies the maximum number of splits rather than truncating\n * the number of results.\n *\n * See http://docs.python.org/2/library/stdtypes.html#str.split\n * See JavaDoc: http://goo.gl/F2AsY\n * See Mozilla reference: http://goo.gl/dZdZs\n *\n * @param {string} str String to split.\n * @param {string} separator The separator.\n * @param {number} limit The limit to the number of splits. The resulting array\n *     will have a maximum length of limit+1.  Negative numbers are the same\n *     as zero.\n * @return {!Array<string>} The string, split.\n */\ngoog.string.splitLimit = function(str, separator, limit) {\n  var parts = str.split(separator);\n  var returnVal = [];\n\n  // Only continue doing this while we haven't hit the limit and we have\n  // parts left.\n  while (limit > 0 && parts.length) {\n    returnVal.push(parts.shift());\n    limit--;\n  }\n\n  // If there are remaining parts, append them to the end.\n  if (parts.length) {\n    returnVal.push(parts.join(separator));\n  }\n\n  return returnVal;\n};\n\n\n/**\n * Finds the characters to the right of the last instance of any separator\n *\n * This function is similar to goog.string.path.baseName, except it can take a\n * list of characters to split the string on. It will return the rightmost\n * grouping of characters to the right of any separator as a left-to-right\n * oriented string.\n *\n * @see goog.string.path.baseName\n * @param {string} str The string\n * @param {string|!Array<string>} separators A list of separator characters\n * @return {string} The last part of the string with respect to the separators\n */\ngoog.string.lastComponent = function(str, separators) {\n  if (!separators) {\n    return str;\n  } else if (typeof separators == 'string') {\n    separators = [separators];\n  }\n\n  var lastSeparatorIndex = -1;\n  for (var i = 0; i < separators.length; i++) {\n    if (separators[i] == '') {\n      continue;\n    }\n    var currentSeparatorIndex = str.lastIndexOf(separators[i]);\n    if (currentSeparatorIndex > lastSeparatorIndex) {\n      lastSeparatorIndex = currentSeparatorIndex;\n    }\n  }\n  if (lastSeparatorIndex == -1) {\n    return str;\n  }\n  return str.slice(lastSeparatorIndex + 1);\n};\n\n\n/**\n * Computes the Levenshtein edit distance between two strings.\n * @param {string} a\n * @param {string} b\n * @return {number} The edit distance between the two strings.\n */\ngoog.string.editDistance = function(a, b) {\n  var v0 = [];\n  var v1 = [];\n\n  if (a == b) {\n    return 0;\n  }\n\n  if (!a.length || !b.length) {\n    return Math.max(a.length, b.length);\n  }\n\n  for (var i = 0; i < b.length + 1; i++) {\n    v0[i] = i;\n  }\n\n  for (var i = 0; i < a.length; i++) {\n    v1[0] = i + 1;\n\n    for (var j = 0; j < b.length; j++) {\n      var cost = Number(a[i] != b[j]);\n      // Cost for the substring is the minimum of adding one character, removing\n      // one character, or a swap.\n      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);\n    }\n\n    for (var j = 0; j < v0.length; j++) {\n      v0[j] = v1[j];\n    }\n  }\n\n  return v1[b.length];\n};\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Closure user agent platform detection.\n * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>\n * For more information on browser brand, rendering engine, or device see the\n * other sub-namespaces in goog.labs.userAgent (browser, engine, and device\n * respectively).\n */\n\ngoog.provide('goog.labs.userAgent.platform');\n\ngoog.require('goog.labs.userAgent.util');\ngoog.require('goog.string');\n\n\n/**\n * @return {boolean} Whether the platform is Android.\n */\ngoog.labs.userAgent.platform.isAndroid = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Android');\n};\n\n\n/**\n * @return {boolean} Whether the platform is iPod.\n */\ngoog.labs.userAgent.platform.isIpod = function() {\n  return goog.labs.userAgent.util.matchUserAgent('iPod');\n};\n\n\n/**\n * @return {boolean} Whether the platform is iPhone.\n */\ngoog.labs.userAgent.platform.isIphone = function() {\n  return goog.labs.userAgent.util.matchUserAgent('iPhone') &&\n      !goog.labs.userAgent.util.matchUserAgent('iPod') &&\n      !goog.labs.userAgent.util.matchUserAgent('iPad');\n};\n\n\n/**\n * @return {boolean} Whether the platform is iPad.\n */\ngoog.labs.userAgent.platform.isIpad = function() {\n  return goog.labs.userAgent.util.matchUserAgent('iPad');\n};\n\n\n/**\n * @return {boolean} Whether the platform is iOS.\n */\ngoog.labs.userAgent.platform.isIos = function() {\n  return goog.labs.userAgent.platform.isIphone() ||\n      goog.labs.userAgent.platform.isIpad() ||\n      goog.labs.userAgent.platform.isIpod();\n};\n\n\n/**\n * @return {boolean} Whether the platform is Mac.\n */\ngoog.labs.userAgent.platform.isMacintosh = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Macintosh');\n};\n\n\n/**\n * Note: ChromeOS is not considered to be Linux as it does not report itself\n * as Linux in the user agent string.\n * @return {boolean} Whether the platform is Linux.\n */\ngoog.labs.userAgent.platform.isLinux = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Linux');\n};\n\n\n/**\n * @return {boolean} Whether the platform is Windows.\n */\ngoog.labs.userAgent.platform.isWindows = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Windows');\n};\n\n\n/**\n * @return {boolean} Whether the platform is ChromeOS.\n */\ngoog.labs.userAgent.platform.isChromeOS = function() {\n  return goog.labs.userAgent.util.matchUserAgent('CrOS');\n};\n\n/**\n * @return {boolean} Whether the platform is Chromecast.\n */\ngoog.labs.userAgent.platform.isChromecast = function() {\n  return goog.labs.userAgent.util.matchUserAgent('CrKey');\n};\n\n/**\n * @return {boolean} Whether the platform is KaiOS.\n */\ngoog.labs.userAgent.platform.isKaiOS = function() {\n  return goog.labs.userAgent.util.matchUserAgentIgnoreCase('KaiOS');\n};\n\n/**\n * @return {boolean} Whether the platform is Go2Phone.\n */\ngoog.labs.userAgent.platform.isGo2Phone = function() {\n  return goog.labs.userAgent.util.matchUserAgentIgnoreCase('GAFP');\n};\n\n/**\n * The version of the platform. We only determine the version for Windows,\n * Mac, and Chrome OS. It doesn't make much sense on Linux. For Windows, we only\n * look at the NT version. Non-NT-based versions (e.g. 95, 98, etc.) are given\n * version 0.0.\n *\n * @return {string} The platform version or empty string if version cannot be\n *     determined.\n */\ngoog.labs.userAgent.platform.getVersion = function() {\n  var userAgentString = goog.labs.userAgent.util.getUserAgent();\n  var version = '', re;\n  if (goog.labs.userAgent.platform.isWindows()) {\n    re = /Windows (?:NT|Phone) ([0-9.]+)/;\n    var match = re.exec(userAgentString);\n    if (match) {\n      version = match[1];\n    } else {\n      version = '0.0';\n    }\n  } else if (goog.labs.userAgent.platform.isIos()) {\n    re = /(?:iPhone|iPod|iPad|CPU)\\s+OS\\s+(\\S+)/;\n    var match = re.exec(userAgentString);\n    // Report the version as x.y.z and not x_y_z\n    version = match && match[1].replace(/_/g, '.');\n  } else if (goog.labs.userAgent.platform.isMacintosh()) {\n    re = /Mac OS X ([0-9_.]+)/;\n    var match = re.exec(userAgentString);\n    // Note: some old versions of Camino do not report an OSX version.\n    // Default to 10.\n    version = match ? match[1].replace(/_/g, '.') : '10';\n  } else if (goog.labs.userAgent.platform.isKaiOS()) {\n    re = /(?:KaiOS)\\/(\\S+)/i;\n    var match = re.exec(userAgentString);\n    version = match && match[1];\n  } else if (goog.labs.userAgent.platform.isAndroid()) {\n    re = /Android\\s+([^\\);]+)(\\)|;)/;\n    var match = re.exec(userAgentString);\n    version = match && match[1];\n  } else if (goog.labs.userAgent.platform.isChromeOS()) {\n    re = /(?:CrOS\\s+(?:i686|x86_64)\\s+([0-9.]+))/;\n    var match = re.exec(userAgentString);\n    version = match && match[1];\n  }\n  return version || '';\n};\n\n\n/**\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the browser version is higher or the same as the\n *     given version.\n */\ngoog.labs.userAgent.platform.isVersionOrHigher = function(version) {\n  return goog.string.compareVersions(\n             goog.labs.userAgent.platform.getVersion(), version) >= 0;\n};\n","// Copyright 2009 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Useful compiler idioms.\n */\n\ngoog.provide('goog.reflect');\n\n\n/**\n * Syntax for object literal casts.\n * @see http://go/jscompiler-renaming\n * @see https://goo.gl/CRs09P\n *\n * Use this if you have an object literal whose keys need to have the same names\n * as the properties of some class even after they are renamed by the compiler.\n *\n * @param {!Function} type Type to cast to.\n * @param {Object} object Object literal to cast.\n * @return {Object} The object literal.\n */\ngoog.reflect.object = function(type, object) {\n  return object;\n};\n\n/**\n * Syntax for renaming property strings.\n * @see http://go/jscompiler-renaming\n * @see https://goo.gl/CRs09P\n *\n * Use this if you have an need to access a property as a string, but want\n * to also have the property renamed by the compiler. In contrast to\n * goog.reflect.object, this method takes an instance of an object.\n *\n * Properties must be simple names (not qualified names).\n *\n * @param {string} prop Name of the property\n * @param {!Object} object Instance of the object whose type will be used\n *     for renaming\n * @return {string} The renamed property.\n */\ngoog.reflect.objectProperty = function(prop, object) {\n  return prop;\n};\n\n/**\n * To assert to the compiler that an operation is needed when it would\n * otherwise be stripped. For example:\n * <code>\n *     // Force a layout\n *     goog.reflect.sinkValue(dialog.offsetHeight);\n * </code>\n * @param {T} x\n * @return {T}\n * @template T\n */\ngoog.reflect.sinkValue = function(x) {\n  goog.reflect.sinkValue[' '](x);\n  return x;\n};\n\n\n/**\n * The compiler should optimize this function away iff no one ever uses\n * goog.reflect.sinkValue.\n */\ngoog.reflect.sinkValue[' '] = goog.nullFunction;\n\n\n/**\n * Check if a property can be accessed without throwing an exception.\n * @param {Object} obj The owner of the property.\n * @param {string} prop The property name.\n * @return {boolean} Whether the property is accessible. Will also return true\n *     if obj is null.\n */\ngoog.reflect.canAccessProperty = function(obj, prop) {\n\n  try {\n    goog.reflect.sinkValue(obj[prop]);\n    return true;\n  } catch (e) {\n  }\n  return false;\n};\n\n\n/**\n * Retrieves a value from a cache given a key. The compiler provides special\n * consideration for this call such that it is generally considered side-effect\n * free. However, if the `opt_keyFn` or `valueFn` have side-effects\n * then the entire call is considered to have side-effects.\n *\n * Conventionally storing the value on the cache would be considered a\n * side-effect and preclude unused calls from being pruned, ie. even if\n * the value was never used, it would still always be stored in the cache.\n *\n * Providing a side-effect free `valueFn` and `opt_keyFn`\n * allows unused calls to `goog.reflect.cache` to be pruned.\n *\n * @param {!Object<K, V>} cacheObj The object that contains the cached values.\n * @param {?} key The key to lookup in the cache. If it is not string or number\n *     then a `opt_keyFn` should be provided. The key is also used as the\n *     parameter to the `valueFn`.\n * @param {function(?):V} valueFn The value provider to use to calculate the\n *     value to store in the cache. This function should be side-effect free\n *     to take advantage of the optimization.\n * @param {function(?):K=} opt_keyFn The key provider to determine the cache\n *     map key. This should be used if the given key is not a string or number.\n *     If not provided then the given key is used. This function should be\n *     side-effect free to take advantage of the optimization.\n * @return {V} The cached or calculated value.\n * @template K\n * @template V\n */\ngoog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {\n  const storedKey = opt_keyFn ? opt_keyFn(key) : key;\n\n  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {\n    return cacheObj[storedKey];\n  }\n\n  return (cacheObj[storedKey] = valueFn(key));\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Rendering engine detection.\n * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>\n * For information on the browser brand (such as Safari versus Chrome), see\n * goog.userAgent.product.\n * @see ../demos/useragent.html\n */\n\ngoog.provide('goog.userAgent');\n\ngoog.require('goog.labs.userAgent.browser');\ngoog.require('goog.labs.userAgent.engine');\ngoog.require('goog.labs.userAgent.platform');\ngoog.require('goog.labs.userAgent.util');\ngoog.require('goog.reflect');\ngoog.require('goog.string');\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is IE.\n */\ngoog.userAgent.ASSUME_IE = goog.define('goog.userAgent.ASSUME_IE', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is EDGE,\n * referring to EdgeHTML based Edge.\n */\ngoog.userAgent.ASSUME_EDGE = goog.define('goog.userAgent.ASSUME_EDGE', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is GECKO.\n */\ngoog.userAgent.ASSUME_GECKO = goog.define('goog.userAgent.ASSUME_GECKO', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is WEBKIT.\n */\ngoog.userAgent.ASSUME_WEBKIT =\n    goog.define('goog.userAgent.ASSUME_WEBKIT', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is a\n *     mobile device running WebKit e.g. iPhone or Android.\n */\ngoog.userAgent.ASSUME_MOBILE_WEBKIT =\n    goog.define('goog.userAgent.ASSUME_MOBILE_WEBKIT', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is OPERA,\n * referring to Presto-based Opera.\n */\ngoog.userAgent.ASSUME_OPERA = goog.define('goog.userAgent.ASSUME_OPERA', false);\n\n\n/**\n * @define {boolean} Whether the\n *     `goog.userAgent.isVersionOrHigher`\n *     function will return true for any version.\n */\ngoog.userAgent.ASSUME_ANY_VERSION =\n    goog.define('goog.userAgent.ASSUME_ANY_VERSION', false);\n\n\n/**\n * Whether we know the browser engine at compile-time.\n * @type {boolean}\n * @private\n */\ngoog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE ||\n    goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO ||\n    goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT ||\n    goog.userAgent.ASSUME_OPERA;\n\n\n/**\n * Returns the userAgent string for the current browser.\n *\n * @return {string} The userAgent string.\n */\ngoog.userAgent.getUserAgentString = function() {\n  return goog.labs.userAgent.util.getUserAgent();\n};\n\n\n/**\n * @return {?Navigator} The native navigator object.\n */\ngoog.userAgent.getNavigatorTyped = function() {\n  // Need a local navigator reference instead of using the global one,\n  // to avoid the rare case where they reference different objects.\n  // (in a WorkerPool, for example).\n  return goog.global['navigator'] || null;\n};\n\n\n/**\n * TODO(nnaze): Change type to \"Navigator\" and update compilation targets.\n * @return {?Object} The native navigator object.\n */\ngoog.userAgent.getNavigator = function() {\n  return goog.userAgent.getNavigatorTyped();\n};\n\n\n/**\n * Whether the user agent is Presto-based Opera.\n * @type {boolean}\n */\ngoog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_OPERA :\n    goog.labs.userAgent.browser.isOpera();\n\n\n/**\n * Whether the user agent is Internet Explorer.\n * @type {boolean}\n */\ngoog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_IE :\n    goog.labs.userAgent.browser.isIE();\n\n\n/**\n * Whether the user agent is Microsoft Edge (EdgeHTML based).\n * @type {boolean}\n */\ngoog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_EDGE :\n    goog.labs.userAgent.engine.isEdge();\n\n\n/**\n * Whether the user agent is MS Internet Explorer or MS Edge (EdgeHTML based).\n * @type {boolean}\n */\ngoog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;\n\n\n/**\n * Whether the user agent is Gecko. Gecko is the rendering engine used by\n * Mozilla, Firefox, and others.\n * @type {boolean}\n */\ngoog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_GECKO :\n    goog.labs.userAgent.engine.isGecko();\n\n\n/**\n * Whether the user agent is WebKit. WebKit is the rendering engine that\n * Safari, Edge Chromium, Opera Chromium, Android and others use.\n * @type {boolean}\n */\ngoog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT :\n    goog.labs.userAgent.engine.isWebKit();\n\n\n/**\n * Whether the user agent is running on a mobile device.\n *\n * This is a separate function so that the logic can be tested.\n *\n * TODO(nnaze): Investigate swapping in goog.labs.userAgent.device.isMobile().\n *\n * @return {boolean} Whether the user agent is running on a mobile device.\n * @private\n */\ngoog.userAgent.isMobile_ = function() {\n  return goog.userAgent.WEBKIT &&\n      goog.labs.userAgent.util.matchUserAgent('Mobile');\n};\n\n\n/**\n * Whether the user agent is running on a mobile device.\n *\n * TODO(nnaze): Consider deprecating MOBILE when labs.userAgent\n *   is promoted as the gecko/webkit logic is likely inaccurate.\n *\n * @type {boolean}\n */\ngoog.userAgent.MOBILE =\n    goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();\n\n\n/**\n * Used while transitioning code to use WEBKIT instead.\n * @type {boolean}\n * @deprecated Use {@link goog.userAgent.product.SAFARI} instead.\n * TODO(nicksantos): Delete this from goog.userAgent.\n */\ngoog.userAgent.SAFARI = goog.userAgent.WEBKIT;\n\n\n/**\n * @return {string} the platform (operating system) the user agent is running\n *     on. Default to empty string because navigator.platform may not be defined\n *     (on Rhino, for example).\n * @private\n */\ngoog.userAgent.determinePlatform_ = function() {\n  var navigator = goog.userAgent.getNavigatorTyped();\n  return navigator && navigator.platform || '';\n};\n\n\n/**\n * The platform (operating system) the user agent is running on. Default to\n * empty string because navigator.platform may not be defined (on Rhino, for\n * example).\n * @type {string}\n */\ngoog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Macintosh operating\n *     system.\n */\ngoog.userAgent.ASSUME_MAC = goog.define('goog.userAgent.ASSUME_MAC', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Windows operating\n *     system.\n */\ngoog.userAgent.ASSUME_WINDOWS =\n    goog.define('goog.userAgent.ASSUME_WINDOWS', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Linux operating\n *     system.\n */\ngoog.userAgent.ASSUME_LINUX = goog.define('goog.userAgent.ASSUME_LINUX', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a X11 windowing\n *     system.\n */\ngoog.userAgent.ASSUME_X11 = goog.define('goog.userAgent.ASSUME_X11', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on Android.\n */\ngoog.userAgent.ASSUME_ANDROID =\n    goog.define('goog.userAgent.ASSUME_ANDROID', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPhone.\n */\ngoog.userAgent.ASSUME_IPHONE =\n    goog.define('goog.userAgent.ASSUME_IPHONE', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPad.\n */\ngoog.userAgent.ASSUME_IPAD = goog.define('goog.userAgent.ASSUME_IPAD', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPod.\n */\ngoog.userAgent.ASSUME_IPOD = goog.define('goog.userAgent.ASSUME_IPOD', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on KaiOS.\n */\ngoog.userAgent.ASSUME_KAIOS = goog.define('goog.userAgent.ASSUME_KAIOS', false);\n\n/**\n * @define {boolean} Whether the user agent is running on Go2Phone.\n */\ngoog.userAgent.ASSUME_GO2PHONE =\n    goog.define('goog.userAgent.ASSUME_GO2PHONE', false);\n\n\n/**\n * @type {boolean}\n * @private\n */\ngoog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC ||\n    goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX ||\n    goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID ||\n    goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD ||\n    goog.userAgent.ASSUME_IPOD;\n\n\n/**\n * Whether the user agent is running on a Macintosh operating system.\n * @type {boolean}\n */\ngoog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_MAC :\n    goog.labs.userAgent.platform.isMacintosh();\n\n\n/**\n * Whether the user agent is running on a Windows operating system.\n * @type {boolean}\n */\ngoog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_WINDOWS :\n    goog.labs.userAgent.platform.isWindows();\n\n\n/**\n * Whether the user agent is Linux per the legacy behavior of\n * goog.userAgent.LINUX, which considered ChromeOS to also be\n * Linux.\n * @return {boolean}\n * @private\n */\ngoog.userAgent.isLegacyLinux_ = function() {\n  return goog.labs.userAgent.platform.isLinux() ||\n      goog.labs.userAgent.platform.isChromeOS();\n};\n\n\n/**\n * Whether the user agent is running on a Linux operating system.\n *\n * Note that goog.userAgent.LINUX considers ChromeOS to be Linux,\n * while goog.labs.userAgent.platform considers ChromeOS and\n * Linux to be different OSes.\n *\n * @type {boolean}\n */\ngoog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_LINUX :\n    goog.userAgent.isLegacyLinux_();\n\n\n/**\n * @return {boolean} Whether the user agent is an X11 windowing system.\n * @private\n */\ngoog.userAgent.isX11_ = function() {\n  var navigator = goog.userAgent.getNavigatorTyped();\n  return !!navigator &&\n      goog.string.contains(navigator['appVersion'] || '', 'X11');\n};\n\n\n/**\n * Whether the user agent is running on a X11 windowing system.\n * @type {boolean}\n */\ngoog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_X11 :\n    goog.userAgent.isX11_();\n\n\n/**\n * Whether the user agent is running on Android.\n * @type {boolean}\n */\ngoog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_ANDROID :\n    goog.labs.userAgent.platform.isAndroid();\n\n\n/**\n * Whether the user agent is running on an iPhone.\n * @type {boolean}\n */\ngoog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPHONE :\n    goog.labs.userAgent.platform.isIphone();\n\n\n/**\n * Whether the user agent is running on an iPad.\n * @type {boolean}\n */\ngoog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPAD :\n    goog.labs.userAgent.platform.isIpad();\n\n\n/**\n * Whether the user agent is running on an iPod.\n * @type {boolean}\n */\ngoog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPOD :\n    goog.labs.userAgent.platform.isIpod();\n\n\n/**\n * Whether the user agent is running on iOS.\n * @type {boolean}\n */\ngoog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ?\n    (goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD ||\n     goog.userAgent.ASSUME_IPOD) :\n    goog.labs.userAgent.platform.isIos();\n\n/**\n * Whether the user agent is running on KaiOS.\n * @type {boolean}\n */\ngoog.userAgent.KAIOS = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_KAIOS :\n    goog.labs.userAgent.platform.isKaiOS();\n\n/**\n * Whether the user agent is running on Go2Phone.\n * @type {boolean}\n */\ngoog.userAgent.GO2PHONE = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_GO2PHONE :\n    goog.labs.userAgent.platform.isGo2Phone();\n\n\n/**\n * @return {string} The string that describes the version number of the user\n *     agent.\n * @private\n */\ngoog.userAgent.determineVersion_ = function() {\n  // All browsers have different ways to detect the version and they all have\n  // different naming schemes.\n  // version is a string rather than a number because it may contain 'b', 'a',\n  // and so on.\n  var version = '';\n  var arr = goog.userAgent.getVersionRegexResult_();\n  if (arr) {\n    version = arr ? arr[1] : '';\n  }\n\n  if (goog.userAgent.IE) {\n    // IE9 can be in document mode 9 but be reporting an inconsistent user agent\n    // version.  If it is identifying as a version lower than 9 we take the\n    // documentMode as the version instead.  IE8 has similar behavior.\n    // It is recommended to set the X-UA-Compatible header to ensure that IE9\n    // uses documentMode 9.\n    var docMode = goog.userAgent.getDocumentMode_();\n    if (docMode != null && docMode > parseFloat(version)) {\n      return String(docMode);\n    }\n  }\n\n  return version;\n};\n\n\n/**\n * @return {?IArrayLike<string>|undefined} The version regex matches from\n *     parsing the user\n *     agent string. These regex statements must be executed inline so they can\n *     be compiled out by the closure compiler with the rest of the useragent\n *     detection logic when ASSUME_* is specified.\n * @private\n */\ngoog.userAgent.getVersionRegexResult_ = function() {\n  var userAgent = goog.userAgent.getUserAgentString();\n  if (goog.userAgent.GECKO) {\n    return /rv\\:([^\\);]+)(\\)|;)/.exec(userAgent);\n  }\n  if (goog.userAgent.EDGE) {\n    return /Edge\\/([\\d\\.]+)/.exec(userAgent);\n  }\n  if (goog.userAgent.IE) {\n    return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(userAgent);\n  }\n  if (goog.userAgent.WEBKIT) {\n    // WebKit/125.4\n    return /WebKit\\/(\\S+)/.exec(userAgent);\n  }\n  if (goog.userAgent.OPERA) {\n    // If none of the above browsers were detected but the browser is Opera, the\n    // only string that is of interest is 'Version/<number>'.\n    return /(?:Version)[ \\/]?(\\S+)/.exec(userAgent);\n  }\n  return undefined;\n};\n\n\n/**\n * @return {number|undefined} Returns the document mode (for testing).\n * @private\n */\ngoog.userAgent.getDocumentMode_ = function() {\n  // NOTE(user): goog.userAgent may be used in context where there is no DOM.\n  var doc = goog.global['document'];\n  return doc ? doc['documentMode'] : undefined;\n};\n\n\n/**\n * The version of the user agent. This is a string because it might contain\n * 'b' (as in beta) as well as multiple dots.\n * @type {string}\n */\ngoog.userAgent.VERSION = goog.userAgent.determineVersion_();\n\n\n/**\n * Compares two version numbers.\n *\n * @param {string} v1 Version of first item.\n * @param {string} v2 Version of second item.\n *\n * @return {number}  1 if first argument is higher\n *                   0 if arguments are equal\n *                  -1 if second argument is higher.\n * @deprecated Use goog.string.compareVersions.\n */\ngoog.userAgent.compare = function(v1, v2) {\n  return goog.string.compareVersions(v1, v2);\n};\n\n\n/**\n * Cache for {@link goog.userAgent.isVersionOrHigher}.\n * Calls to compareVersions are surprisingly expensive and, as a browser's\n * version number is unlikely to change during a session, we cache the results.\n * @const\n * @private\n */\ngoog.userAgent.isVersionOrHigherCache_ = {};\n\n\n/**\n * Whether the user agent version is higher or the same as the given version.\n * NOTE: When checking the version numbers for Firefox and Safari, be sure to\n * use the engine's version, not the browser's version number.  For example,\n * Firefox 3.0 corresponds to Gecko 1.9 and Safari 3.0 to Webkit 522.11.\n * Opera and Internet Explorer versions match the product release number.<br>\n * @see <a href=\"http://en.wikipedia.org/wiki/Safari_version_history\">\n *     Webkit</a>\n * @see <a href=\"http://en.wikipedia.org/wiki/Gecko_engine\">Gecko</a>\n *\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the user agent version is higher or the same as\n *     the given version.\n */\ngoog.userAgent.isVersionOrHigher = function(version) {\n  return goog.userAgent.ASSUME_ANY_VERSION ||\n      goog.reflect.cache(\n          goog.userAgent.isVersionOrHigherCache_, version, function() {\n            return goog.string.compareVersions(\n                       goog.userAgent.VERSION, version) >= 0;\n          });\n};\n\n\n/**\n * Deprecated alias to `goog.userAgent.isVersionOrHigher`.\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the user agent version is higher or the same as\n *     the given version.\n * @deprecated Use goog.userAgent.isVersionOrHigher().\n */\ngoog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;\n\n\n/**\n * Whether the IE effective document mode is higher or the same as the given\n * document mode version.\n * NOTE: Only for IE, return false for another browser.\n *\n * @param {number} documentMode The document mode version to check.\n * @return {boolean} Whether the IE effective document mode is higher or the\n *     same as the given version.\n */\ngoog.userAgent.isDocumentModeOrHigher = function(documentMode) {\n  return Number(goog.userAgent.DOCUMENT_MODE) >= documentMode;\n};\n\n\n/**\n * Deprecated alias to `goog.userAgent.isDocumentModeOrHigher`.\n * @param {number} version The version to check.\n * @return {boolean} Whether the IE effective document mode is higher or the\n *      same as the given version.\n * @deprecated Use goog.userAgent.isDocumentModeOrHigher().\n */\ngoog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;\n\n\n/**\n * For IE version < 7, documentMode is undefined, so attempt to use the\n * CSS1Compat property to see if we are in standards mode. If we are in\n * standards mode, treat the browser version as the document mode. Otherwise,\n * IE is emulating version 5.\n *\n * NOTE(2019/05/31): Support for IE < 7 is long gone, so this is now simplified.\n * It returns document.documentMode for IE and undefined for everything else.\n *\n * @type {number|undefined}\n * @const\n */\ngoog.userAgent.DOCUMENT_MODE = (function() {\n  var doc = goog.global['document'];\n  if (!doc || !goog.userAgent.IE) {\n    return undefined;\n  }\n  return goog.userAgent.getDocumentMode_();\n})();\n","// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Closure user agent detection.\n * @see http://en.wikipedia.org/wiki/User_agent\n * For more information on browser brand, platform, or device see the other\n * sub-namespaces in goog.labs.userAgent (browser, platform, and device).\n */\n\ngoog.provide('goog.labs.userAgent.engine');\n\ngoog.require('goog.array');\ngoog.require('goog.labs.userAgent.util');\ngoog.require('goog.string');\n\n\n/**\n * @return {boolean} Whether the rendering engine is Presto.\n */\ngoog.labs.userAgent.engine.isPresto = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Presto');\n};\n\n\n/**\n * @return {boolean} Whether the rendering engine is Trident.\n */\ngoog.labs.userAgent.engine.isTrident = function() {\n  // IE only started including the Trident token in IE8.\n  return goog.labs.userAgent.util.matchUserAgent('Trident') ||\n      goog.labs.userAgent.util.matchUserAgent('MSIE');\n};\n\n\n/**\n * @return {boolean} Whether the rendering engine is EdgeHTML.\n */\ngoog.labs.userAgent.engine.isEdge = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Edge');\n};\n\n\n/**\n * @return {boolean} Whether the rendering engine is WebKit. This will return\n * true for Chrome, Blink-based Opera (15+), Edge Chromium and Safari.\n */\ngoog.labs.userAgent.engine.isWebKit = function() {\n  return goog.labs.userAgent.util.matchUserAgentIgnoreCase('WebKit') &&\n      !goog.labs.userAgent.engine.isEdge();\n};\n\n\n/**\n * @return {boolean} Whether the rendering engine is Gecko.\n */\ngoog.labs.userAgent.engine.isGecko = function() {\n  return goog.labs.userAgent.util.matchUserAgent('Gecko') &&\n      !goog.labs.userAgent.engine.isWebKit() &&\n      !goog.labs.userAgent.engine.isTrident() &&\n      !goog.labs.userAgent.engine.isEdge();\n};\n\n\n/**\n * @return {string} The rendering engine's version or empty string if version\n *     can't be determined.\n */\ngoog.labs.userAgent.engine.getVersion = function() {\n  var userAgentString = goog.labs.userAgent.util.getUserAgent();\n  if (userAgentString) {\n    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);\n\n    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);\n    if (engineTuple) {\n      // In Gecko, the version string is either in the browser info or the\n      // Firefox version.  See Gecko user agent string reference:\n      // http://goo.gl/mULqa\n      if (engineTuple[0] == 'Gecko') {\n        return goog.labs.userAgent.engine.getVersionForKey_(tuples, 'Firefox');\n      }\n\n      return engineTuple[1];\n    }\n\n    // MSIE has only one version identifier, and the Trident version is\n    // specified in the parenthetical. IE Edge is covered in the engine tuple\n    // detection.\n    var browserTuple = tuples[0];\n    var info;\n    if (browserTuple && (info = browserTuple[2])) {\n      var match = /Trident\\/([^\\s;]+)/.exec(info);\n      if (match) {\n        return match[1];\n      }\n    }\n  }\n  return '';\n};\n\n\n/**\n * @param {!Array<!Array<string>>} tuples Extracted version tuples.\n * @return {!Array<string>|undefined} The engine tuple or undefined if not\n *     found.\n * @private\n */\ngoog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {\n  if (!goog.labs.userAgent.engine.isEdge()) {\n    return tuples[1];\n  }\n  for (var i = 0; i < tuples.length; i++) {\n    var tuple = tuples[i];\n    if (tuple[0] == 'Edge') {\n      return tuple;\n    }\n  }\n};\n\n\n/**\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the rendering engine version is higher or the same\n *     as the given version.\n */\ngoog.labs.userAgent.engine.isVersionOrHigher = function(version) {\n  return goog.string.compareVersions(\n             goog.labs.userAgent.engine.getVersion(), version) >= 0;\n};\n\n\n/**\n * @param {!Array<!Array<string>>} tuples Version tuples.\n * @param {string} key The key to look for.\n * @return {string} The version string of the given key, if present.\n *     Otherwise, the empty string.\n * @private\n */\ngoog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {\n  // TODO(nnaze): Move to util if useful elsewhere.\n\n  var pair = goog.array.find(tuples, function(pair) { return key == pair[0]; });\n\n  return pair && pair[1] || '';\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview Constants for user agent detection.\n * @author moz@google.com (Michael Zhou)\n */\n\ngoog.provide('wgxpath.userAgent');\n\ngoog.require('goog.userAgent');\n\n\n/**\n * @type {boolean}\n * @const\n */\nwgxpath.userAgent.IE_DOC_PRE_9 = goog.userAgent.IE &&\n    !goog.userAgent.isDocumentModeOrHigher(9);\n\n\n/**\n * @type {boolean}\n * @const\n */\nwgxpath.userAgent.IE_DOC_PRE_8 = goog.userAgent.IE &&\n    !goog.userAgent.isDocumentModeOrHigher(8);\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview Wrapper classes for attribute nodes in old IE browsers.\n * @author moz@google.com (Michael Zhou)\n */\n\ngoog.provide('wgxpath.IEAttrWrapper');\n\ngoog.require('goog.dom.NodeType');\ngoog.require('wgxpath.userAgent');\n\n\n\n/**\n * A wrapper for an attribute node in old IE.\n *\n * <p> Note: Although sourceIndex is equal to node.sourceIndex, it is\n * denormalized into a separate parameter for performance, so that clients\n * constructing multiple IEAttrWrappers can pass in the same sourceIndex\n * rather than re-querying it each time.\n *\n * @constructor\n * @extends {Attr}\n * @param {!Node} node The attribute node.\n * @param {!Node} parent The parent of the attribute node.\n * @param {string} nodeName The name of the attribute node.\n * @param {(string|number|boolean)} nodeValue The value of the attribute node.\n * @param {number} sourceIndex The source index of the parent node.\n */\nwgxpath.IEAttrWrapper = function(node, parent, nodeName, nodeValue,\n    sourceIndex) {\n  /**\n   * @type {!Node}\n   * @private\n   */\n  this.node_ = node;\n\n  /**\n   * @type {string}\n   */\n  this.nodeName = nodeName;\n\n  /**\n   * @type {(string|number|boolean)}\n   */\n  this.nodeValue = nodeValue;\n\n  /**\n   * @type {goog.dom.NodeType}\n   */\n  this.nodeType = goog.dom.NodeType.ATTRIBUTE;\n\n  /**\n   * @type {!Node}\n   */\n  this.ownerElement = parent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.parentSourceIndex_ = sourceIndex;\n\n  /**\n   * @type {!Node}\n   */\n  this.parentNode = parent;\n};\n\n\n/**\n * Creates a wrapper for an attribute node in old IE.\n *\n * @param {!Node} parent The parent of the attribute node.\n * @param {!Node} attr The attribute node.\n * @param {number} sourceIndex The source index of the parent node.\n * @return {!wgxpath.IEAttrWrapper} The constcuted wrapper.\n */\nwgxpath.IEAttrWrapper.forAttrOf = function(parent, attr, sourceIndex) {\n  var nodeValue = (wgxpath.userAgent.IE_DOC_PRE_8 && attr.nodeName == 'href') ?\n      parent.getAttribute(attr.nodeName, 2) : attr.nodeValue;\n  return new wgxpath.IEAttrWrapper(attr, parent, attr.nodeName, nodeValue,\n      sourceIndex);\n};\n\n\n/**\n * Creates a wrapper for a style attribute node in old IE.\n *\n * @param {!Node} parent The parent of the attribute node.\n * @param {number} sourceIndex The source index of the parent node.\n * @return {!wgxpath.IEAttrWrapper} The constcuted wrapper.\n */\nwgxpath.IEAttrWrapper.forStyleOf = function(parent, sourceIndex) {\n  return new wgxpath.IEAttrWrapper(parent.style, parent, 'style',\n      parent.style.cssText, sourceIndex);\n};\n\n\n/**\n * Returns the source index of the parent of the attribute node.\n *\n * @return {number} The source index of the parent.\n */\nwgxpath.IEAttrWrapper.prototype.getParentSourceIndex = function() {\n  return this.parentSourceIndex_;\n};\n\n\n/**\n * Returns the attribute node contained in the wrapper.\n *\n * @return {!Node} The original attribute node.\n */\nwgxpath.IEAttrWrapper.prototype.getNode = function() {\n  return this.node_;\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview The lexer class for tokenizing xpath expressions.\n * @author moz@google.com (Michael Zhou)\n */\n\ngoog.provide('wgxpath.Lexer');\n\n\n\n/**\n * Constructs a lexer.\n *\n * @param {!Array.<string>} tokens Tokens to iterate over.\n * @constructor\n */\nwgxpath.Lexer = function(tokens) {\n  /**\n   * @type {!Array.<string>}\n   * @private\n   */\n  this.tokens_ = tokens;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = 0;\n};\n\n\n/**\n * Tokenizes a source string into an array of tokens.\n *\n * @param {string} source Source string to tokenize.\n * @return {!wgxpath.Lexer} Essentially an iterator over the tokens.\n */\nwgxpath.Lexer.tokenize = function(source) {\n  var tokens = source.match(wgxpath.Lexer.TOKEN_);\n\n  // Removes tokens starting with whitespace from the array.\n  for (var i = 0; i < tokens.length; i++) {\n    if (wgxpath.Lexer.LEADING_WHITESPACE_.test(tokens[i])) {\n      tokens.splice(i, 1);\n    }\n  }\n  return new wgxpath.Lexer(tokens);\n};\n\n\n/**\n * Regular expressions to match XPath productions.\n *\n * @const\n * @type {!RegExp}\n * @private\n */\nwgxpath.Lexer.TOKEN_ = new RegExp(\n    '\\\\$?(?:(?![0-9-\\\\.])(?:\\\\*|[\\\\w-\\\\.]+):)?(?![0-9-\\\\.])' +\n    '(?:\\\\*|[\\\\w-\\\\.]+)' +\n        // Nodename or wildcard[*] (possibly with namespace or wildcard[*])\n        // or variable.\n    '|\\\\/\\\\/' + // Double slash.\n    '|\\\\.\\\\.' + // Double dot.\n    '|::' + // Double colon.\n    '|\\\\d+(?:\\\\.\\\\d*)?' + // Number starting with digit.\n    '|\\\\.\\\\d+' + // Number starting with decimal point.\n    '|\"[^\"]*\"' + // Double quoted string.\n    '|\\'[^\\']*\\'' + // Single quoted string.\n    '|[!<>]=' + // Operators\n    '|\\\\s+' + // Whitespaces.\n    '|.', // Any single character.\n    'g');\n\n\n/**\n * Regex to check if a string starts with a whitespace character.\n *\n * @const\n * @type {!RegExp}\n * @private\n */\nwgxpath.Lexer.LEADING_WHITESPACE_ = /^\\s/;\n\n\n/**\n * Peeks at the lexer. An optional index can be\n * used to specify the token peek at.\n *\n * @param {number=} opt_i Index to peek at. Defaults to zero.\n * @return {string} Token peeked.\n */\nwgxpath.Lexer.prototype.peek = function(opt_i) {\n  return this.tokens_[this.index_ + (opt_i || 0)];\n};\n\n\n/**\n * Returns the next token from the lexer and increments the index.\n *\n * @return {string} The next token.\n */\nwgxpath.Lexer.prototype.next = function() {\n  return this.tokens_[this.index_++];\n};\n\n\n/**\n * Decrements the index by one.\n */\nwgxpath.Lexer.prototype.back = function() {\n  this.index_--;\n};\n\n\n/**\n * Checks whether the lexer is empty.\n *\n * @return {boolean} Whether the lexer is empty.\n */\nwgxpath.Lexer.prototype.empty = function() {\n  return this.tokens_.length <= this.index_;\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A utility class for representing two-dimensional positions.\n */\n\n\ngoog.provide('goog.math.Coordinate');\n\ngoog.require('goog.math');\n\n\n\n/**\n * Class for representing coordinates and positions.\n * @param {number=} opt_x Left, defaults to 0.\n * @param {number=} opt_y Top, defaults to 0.\n * @struct\n * @constructor\n */\ngoog.math.Coordinate = function(opt_x, opt_y) {\n  /**\n   * X-value\n   * @type {number}\n   */\n  this.x = (opt_x !== undefined) ? opt_x : 0;\n\n  /**\n   * Y-value\n   * @type {number}\n   */\n  this.y = (opt_y !== undefined) ? opt_y : 0;\n};\n\n\n/**\n * Returns a new copy of the coordinate.\n * @return {!goog.math.Coordinate} A clone of this coordinate.\n */\ngoog.math.Coordinate.prototype.clone = function() {\n  return new goog.math.Coordinate(this.x, this.y);\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Returns a nice string representing the coordinate.\n   * @return {string} In the form (50, 73).\n   * @override\n   */\n  goog.math.Coordinate.prototype.toString = function() {\n    return '(' + this.x + ', ' + this.y + ')';\n  };\n}\n\n\n/**\n * Returns whether the specified value is equal to this coordinate.\n * @param {*} other Some other value.\n * @return {boolean} Whether the specified value is equal to this coordinate.\n */\ngoog.math.Coordinate.prototype.equals = function(other) {\n  return other instanceof goog.math.Coordinate &&\n      goog.math.Coordinate.equals(this, other);\n};\n\n\n/**\n * Compares coordinates for equality.\n * @param {goog.math.Coordinate} a A Coordinate.\n * @param {goog.math.Coordinate} b A Coordinate.\n * @return {boolean} True iff the coordinates are equal, or if both are null.\n */\ngoog.math.Coordinate.equals = function(a, b) {\n  if (a == b) {\n    return true;\n  }\n  if (!a || !b) {\n    return false;\n  }\n  return a.x == b.x && a.y == b.y;\n};\n\n\n/**\n * Returns the distance between two coordinates.\n * @param {!goog.math.Coordinate} a A Coordinate.\n * @param {!goog.math.Coordinate} b A Coordinate.\n * @return {number} The distance between `a` and `b`.\n */\ngoog.math.Coordinate.distance = function(a, b) {\n  var dx = a.x - b.x;\n  var dy = a.y - b.y;\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\n\n/**\n * Returns the magnitude of a coordinate.\n * @param {!goog.math.Coordinate} a A Coordinate.\n * @return {number} The distance between the origin and `a`.\n */\ngoog.math.Coordinate.magnitude = function(a) {\n  return Math.sqrt(a.x * a.x + a.y * a.y);\n};\n\n\n/**\n * Returns the angle from the origin to a coordinate.\n * @param {!goog.math.Coordinate} a A Coordinate.\n * @return {number} The angle, in degrees, clockwise from the positive X\n *     axis to `a`.\n */\ngoog.math.Coordinate.azimuth = function(a) {\n  return goog.math.angle(0, 0, a.x, a.y);\n};\n\n\n/**\n * Returns the squared distance between two coordinates. Squared distances can\n * be used for comparisons when the actual value is not required.\n *\n * Performance note: eliminating the square root is an optimization often used\n * in lower-level languages, but the speed difference is not nearly as\n * pronounced in JavaScript (only a few percent.)\n *\n * @param {!goog.math.Coordinate} a A Coordinate.\n * @param {!goog.math.Coordinate} b A Coordinate.\n * @return {number} The squared distance between `a` and `b`.\n */\ngoog.math.Coordinate.squaredDistance = function(a, b) {\n  var dx = a.x - b.x;\n  var dy = a.y - b.y;\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * Returns the difference between two coordinates as a new\n * goog.math.Coordinate.\n * @param {!goog.math.Coordinate} a A Coordinate.\n * @param {!goog.math.Coordinate} b A Coordinate.\n * @return {!goog.math.Coordinate} A Coordinate representing the difference\n *     between `a` and `b`.\n */\ngoog.math.Coordinate.difference = function(a, b) {\n  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);\n};\n\n\n/**\n * Returns the sum of two coordinates as a new goog.math.Coordinate.\n * @param {!goog.math.Coordinate} a A Coordinate.\n * @param {!goog.math.Coordinate} b A Coordinate.\n * @return {!goog.math.Coordinate} A Coordinate representing the sum of the two\n *     coordinates.\n */\ngoog.math.Coordinate.sum = function(a, b) {\n  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);\n};\n\n\n/**\n * Rounds the x and y fields to the next larger integer values.\n * @return {!goog.math.Coordinate} This coordinate with ceil'd fields.\n */\ngoog.math.Coordinate.prototype.ceil = function() {\n  this.x = Math.ceil(this.x);\n  this.y = Math.ceil(this.y);\n  return this;\n};\n\n\n/**\n * Rounds the x and y fields to the next smaller integer values.\n * @return {!goog.math.Coordinate} This coordinate with floored fields.\n */\ngoog.math.Coordinate.prototype.floor = function() {\n  this.x = Math.floor(this.x);\n  this.y = Math.floor(this.y);\n  return this;\n};\n\n\n/**\n * Rounds the x and y fields to the nearest integer values.\n * @return {!goog.math.Coordinate} This coordinate with rounded fields.\n */\ngoog.math.Coordinate.prototype.round = function() {\n  this.x = Math.round(this.x);\n  this.y = Math.round(this.y);\n  return this;\n};\n\n\n/**\n * Translates this box by the given offsets. If a `goog.math.Coordinate`\n * is given, then the x and y values are translated by the coordinate's x and y.\n * Otherwise, x and y are translated by `tx` and `opt_ty`\n * respectively.\n * @param {number|goog.math.Coordinate} tx The value to translate x by or the\n *     the coordinate to translate this coordinate by.\n * @param {number=} opt_ty The value to translate y by.\n * @return {!goog.math.Coordinate} This coordinate after translating.\n */\ngoog.math.Coordinate.prototype.translate = function(tx, opt_ty) {\n  if (tx instanceof goog.math.Coordinate) {\n    this.x += tx.x;\n    this.y += tx.y;\n  } else {\n    this.x += Number(tx);\n    if (typeof opt_ty === 'number') {\n      this.y += opt_ty;\n    }\n  }\n  return this;\n};\n\n\n/**\n * Scales this coordinate by the given scale factors. The x and y values are\n * scaled by `sx` and `opt_sy` respectively.  If `opt_sy`\n * is not given, then `sx` is used for both x and y.\n * @param {number} sx The scale factor to use for the x dimension.\n * @param {number=} opt_sy The scale factor to use for the y dimension.\n * @return {!goog.math.Coordinate} This coordinate after scaling.\n */\ngoog.math.Coordinate.prototype.scale = function(sx, opt_sy) {\n  var sy = (typeof opt_sy === 'number') ? opt_sy : sx;\n  this.x *= sx;\n  this.y *= sy;\n  return this;\n};\n\n\n/**\n * Rotates this coordinate clockwise about the origin (or, optionally, the given\n * center) by the given angle, in radians.\n * @param {number} radians The angle by which to rotate this coordinate\n *     clockwise about the given center, in radians.\n * @param {!goog.math.Coordinate=} opt_center The center of rotation. Defaults\n *     to (0, 0) if not given.\n */\ngoog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {\n  var center = opt_center || new goog.math.Coordinate(0, 0);\n\n  var x = this.x;\n  var y = this.y;\n  var cos = Math.cos(radians);\n  var sin = Math.sin(radians);\n\n  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;\n  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;\n};\n\n\n/**\n * Rotates this coordinate clockwise about the origin (or, optionally, the given\n * center) by the given angle, in degrees.\n * @param {number} degrees The angle by which to rotate this coordinate\n *     clockwise about the given center, in degrees.\n * @param {!goog.math.Coordinate=} opt_center The center of rotation. Defaults\n *     to (0, 0) if not given.\n */\ngoog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {\n  this.rotateRadians(goog.math.toRadians(degrees), opt_center);\n};\n","// Copyright 2007 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A utility class for representing two-dimensional sizes.\n */\n\n\ngoog.provide('goog.math.Size');\n\n\n\n/**\n * Class for representing sizes consisting of a width and height. Undefined\n * width and height support is deprecated and results in compiler warning.\n * @param {number} width Width.\n * @param {number} height Height.\n * @struct\n * @constructor\n */\ngoog.math.Size = function(width, height) {\n  /**\n   * Width\n   * @type {number}\n   */\n  this.width = width;\n\n  /**\n   * Height\n   * @type {number}\n   */\n  this.height = height;\n};\n\n\n/**\n * Compares sizes for equality.\n * @param {goog.math.Size} a A Size.\n * @param {goog.math.Size} b A Size.\n * @return {boolean} True iff the sizes have equal widths and equal\n *     heights, or if both are null.\n */\ngoog.math.Size.equals = function(a, b) {\n  if (a == b) {\n    return true;\n  }\n  if (!a || !b) {\n    return false;\n  }\n  return a.width == b.width && a.height == b.height;\n};\n\n\n/**\n * @return {!goog.math.Size} A new copy of the Size.\n */\ngoog.math.Size.prototype.clone = function() {\n  return new goog.math.Size(this.width, this.height);\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Returns a nice string representing size.\n   * @return {string} In the form (50 x 73).\n   * @override\n   */\n  goog.math.Size.prototype.toString = function() {\n    return '(' + this.width + ' x ' + this.height + ')';\n  };\n}\n\n\n/**\n * @return {number} The longer of the two dimensions in the size.\n */\ngoog.math.Size.prototype.getLongest = function() {\n  return Math.max(this.width, this.height);\n};\n\n\n/**\n * @return {number} The shorter of the two dimensions in the size.\n */\ngoog.math.Size.prototype.getShortest = function() {\n  return Math.min(this.width, this.height);\n};\n\n\n/**\n * @return {number} The area of the size (width * height).\n */\ngoog.math.Size.prototype.area = function() {\n  return this.width * this.height;\n};\n\n\n/**\n * @return {number} The perimeter of the size (width + height) * 2.\n */\ngoog.math.Size.prototype.perimeter = function() {\n  return (this.width + this.height) * 2;\n};\n\n\n/**\n * @return {number} The ratio of the size's width to its height.\n */\ngoog.math.Size.prototype.aspectRatio = function() {\n  return this.width / this.height;\n};\n\n\n/**\n * @return {boolean} True if the size has zero area, false if both dimensions\n *     are non-zero numbers.\n */\ngoog.math.Size.prototype.isEmpty = function() {\n  return !this.area();\n};\n\n\n/**\n * Clamps the width and height parameters upward to integer values.\n * @return {!goog.math.Size} This size with ceil'd components.\n */\ngoog.math.Size.prototype.ceil = function() {\n  this.width = Math.ceil(this.width);\n  this.height = Math.ceil(this.height);\n  return this;\n};\n\n\n/**\n * @param {!goog.math.Size} target The target size.\n * @return {boolean} True if this Size is the same size or smaller than the\n *     target size in both dimensions.\n */\ngoog.math.Size.prototype.fitsInside = function(target) {\n  return this.width <= target.width && this.height <= target.height;\n};\n\n\n/**\n * Clamps the width and height parameters downward to integer values.\n * @return {!goog.math.Size} This size with floored components.\n */\ngoog.math.Size.prototype.floor = function() {\n  this.width = Math.floor(this.width);\n  this.height = Math.floor(this.height);\n  return this;\n};\n\n\n/**\n * Rounds the width and height parameters to integer values.\n * @return {!goog.math.Size} This size with rounded components.\n */\ngoog.math.Size.prototype.round = function() {\n  this.width = Math.round(this.width);\n  this.height = Math.round(this.height);\n  return this;\n};\n\n\n/**\n * Scales this size by the given scale factors. The width and height are scaled\n * by `sx` and `opt_sy` respectively.  If `opt_sy` is not\n * given, then `sx` is used for both the width and height.\n * @param {number} sx The scale factor to use for the width.\n * @param {number=} opt_sy The scale factor to use for the height.\n * @return {!goog.math.Size} This Size object after scaling.\n */\ngoog.math.Size.prototype.scale = function(sx, opt_sy) {\n  const sy = (typeof opt_sy === 'number') ? opt_sy : sx;\n  this.width *= sx;\n  this.height *= sy;\n  return this;\n};\n\n\n/**\n * Uniformly scales the size to perfectly cover the dimensions of a given size.\n * If the size is already larger than the target, it will be scaled down to the\n * minimum size at which it still covers the entire target. The original aspect\n * ratio will be preserved.\n *\n * This function assumes that both Sizes contain strictly positive dimensions.\n * @param {!goog.math.Size} target The target size.\n * @return {!goog.math.Size} This Size object, after optional scaling.\n */\ngoog.math.Size.prototype.scaleToCover = function(target) {\n  const s = this.aspectRatio() <= target.aspectRatio() ?\n      target.width / this.width :\n      target.height / this.height;\n\n  return this.scale(s);\n};\n\n\n/**\n * Uniformly scales the size to fit inside the dimensions of a given size. The\n * original aspect ratio will be preserved.\n *\n * This function assumes that both Sizes contain strictly positive dimensions.\n * @param {!goog.math.Size} target The target size.\n * @return {!goog.math.Size} This Size object, after optional scaling.\n */\ngoog.math.Size.prototype.scaleToFit = function(target) {\n  const s = this.aspectRatio() > target.aspectRatio() ?\n      target.width / this.width :\n      target.height / this.height;\n\n  return this.scale(s);\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for manipulating the browser's Document Object Model\n * Inspiration taken *heavily* from mochikit (http://mochikit.com/).\n *\n * You can use {@link goog.dom.DomHelper} to create new dom helpers that refer\n * to a different document object.  This is useful if you are working with\n * frames or multiple windows.\n *\n * @suppress {strictMissingProperties}\n */\n\n\n// TODO(arv): Rename/refactor getTextContent and getRawTextContent. The problem\n// is that getTextContent should mimic the DOM3 textContent. We should add a\n// getInnerText (or getText) which tries to return the visible text, innerText.\n\n\ngoog.provide('goog.dom');\ngoog.provide('goog.dom.Appendable');\ngoog.provide('goog.dom.DomHelper');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.dom.BrowserFeature');\ngoog.require('goog.dom.NodeType');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.safe');\ngoog.require('goog.html.SafeHtml');\ngoog.require('goog.html.uncheckedconversions');\ngoog.require('goog.math.Coordinate');\ngoog.require('goog.math.Size');\ngoog.require('goog.object');\ngoog.require('goog.string');\ngoog.require('goog.string.Unicode');\ngoog.require('goog.userAgent');\n\n\n/**\n * @define {boolean} Whether we know at compile time that the browser is in\n * quirks mode.\n */\ngoog.dom.ASSUME_QUIRKS_MODE = goog.define('goog.dom.ASSUME_QUIRKS_MODE', false);\n\n\n/**\n * @define {boolean} Whether we know at compile time that the browser is in\n * standards compliance mode.\n */\ngoog.dom.ASSUME_STANDARDS_MODE =\n    goog.define('goog.dom.ASSUME_STANDARDS_MODE', false);\n\n\n/**\n * Whether we know the compatibility mode at compile time.\n * @type {boolean}\n * @private\n */\ngoog.dom.COMPAT_MODE_KNOWN_ =\n    goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;\n\n\n/**\n * Gets the DomHelper object for the document where the element resides.\n * @param {(Node|Window)=} opt_element If present, gets the DomHelper for this\n *     element.\n * @return {!goog.dom.DomHelper} The DomHelper.\n */\ngoog.dom.getDomHelper = function(opt_element) {\n  return opt_element ?\n      new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) :\n      (goog.dom.defaultDomHelper_ ||\n       (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper()));\n};\n\n\n/**\n * Cached default DOM helper.\n * @type {!goog.dom.DomHelper|undefined}\n * @private\n */\ngoog.dom.defaultDomHelper_;\n\n\n/**\n * Gets the document object being used by the dom library.\n * @return {!Document} Document object.\n */\ngoog.dom.getDocument = function() {\n  return document;\n};\n\n\n/**\n * Gets an element from the current document by element id.\n *\n * If an Element is passed in, it is returned.\n *\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The element with the given ID, or the node passed in.\n */\ngoog.dom.getElement = function(element) {\n  return goog.dom.getElementHelper_(document, element);\n};\n\n\n/**\n * Gets an element by id from the given document (if present).\n * If an element is given, it is returned.\n * @param {!Document} doc\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The resulting element.\n * @private\n */\ngoog.dom.getElementHelper_ = function(doc, element) {\n  return typeof element === 'string' ? doc.getElementById(element) : element;\n};\n\n\n/**\n * Gets an element by id, asserting that the element is found.\n *\n * This is used when an element is expected to exist, and should fail with\n * an assertion error if it does not (if assertions are enabled).\n *\n * @param {string} id Element ID.\n * @return {!Element} The element with the given ID, if it exists.\n */\ngoog.dom.getRequiredElement = function(id) {\n  return goog.dom.getRequiredElementHelper_(document, id);\n};\n\n\n/**\n * Helper function for getRequiredElementHelper functions, both static and\n * on DomHelper.  Asserts the element with the given id exists.\n * @param {!Document} doc\n * @param {string} id\n * @return {!Element} The element with the given ID, if it exists.\n * @private\n */\ngoog.dom.getRequiredElementHelper_ = function(doc, id) {\n  // To prevent users passing in Elements as is permitted in getElement().\n  goog.asserts.assertString(id);\n  var element = goog.dom.getElementHelper_(doc, id);\n  element =\n      goog.asserts.assertElement(element, 'No element found with id: ' + id);\n  return element;\n};\n\n\n/**\n * Alias for getElement.\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The element with the given ID, or the node passed in.\n * @deprecated Use {@link goog.dom.getElement} instead.\n */\ngoog.dom.$ = goog.dom.getElement;\n\n\n/**\n * Gets elements by tag name.\n * @param {!goog.dom.TagName<T>} tagName\n * @param {(!Document|!Element)=} opt_parent Parent element or document where to\n *     look for elements. Defaults to document.\n * @return {!NodeList<R>} List of elements. The members of the list are\n *     {!Element} if tagName is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.getElementsByTagName = function(tagName, opt_parent) {\n  var parent = opt_parent || document;\n  return parent.getElementsByTagName(String(tagName));\n};\n\n\n/**\n * Looks up elements by both tag and class name, using browser native functions\n * (`querySelectorAll`, `getElementsByTagName` or\n * `getElementsByClassName`) where possible. This function\n * is a useful, if limited, way of collecting a list of DOM elements\n * with certain characteristics.  `querySelectorAll` offers a\n * more powerful and general solution which allows matching on CSS3\n * selector expressions.\n *\n * Note that tag names are case sensitive in the SVG namespace, and this\n * function converts opt_tag to uppercase for comparisons. For queries in the\n * SVG namespace you should use querySelector or querySelectorAll instead.\n * https://bugzilla.mozilla.org/show_bug.cgi?id=963870\n * https://bugs.webkit.org/show_bug.cgi?id=83438\n *\n * @see {https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll}\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementsByTagNameAndClass_(\n      document, opt_tag, opt_class, opt_el);\n};\n\n\n/**\n * Gets the first element matching the tag and the class.\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {?R} Reference to a DOM node. The return type is {?Element} if\n *     tagName is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.getElementByTagNameAndClass = function(opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementByTagNameAndClass_(\n      document, opt_tag, opt_class, opt_el);\n};\n\n\n/**\n * Returns a static, array-like list of the elements with the provided\n * className.\n *\n * @param {string} className the name of the class to look for.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {!IArrayLike<!Element>} The items found with the class name provided.\n */\ngoog.dom.getElementsByClass = function(className, opt_el) {\n  var parent = opt_el || document;\n  if (goog.dom.canUseQuerySelector_(parent)) {\n    return parent.querySelectorAll('.' + className);\n  }\n  return goog.dom.getElementsByTagNameAndClass_(\n      document, '*', className, opt_el);\n};\n\n\n/**\n * Returns the first element with the provided className.\n *\n * @param {string} className the name of the class to look for.\n * @param {Element|Document=} opt_el Optional element to look in.\n * @return {Element} The first item with the class name provided.\n */\ngoog.dom.getElementByClass = function(className, opt_el) {\n  var parent = opt_el || document;\n  var retVal = null;\n  if (parent.getElementsByClassName) {\n    retVal = parent.getElementsByClassName(className)[0];\n  } else {\n    retVal =\n        goog.dom.getElementByTagNameAndClass_(document, '*', className, opt_el);\n  }\n  return retVal || null;\n};\n\n\n/**\n * Ensures an element with the given className exists, and then returns the\n * first element with the provided className.\n *\n * @param {string} className the name of the class to look for.\n * @param {!Element|!Document=} opt_root Optional element or document to look\n *     in.\n * @return {!Element} The first item with the class name provided.\n * @throws {goog.asserts.AssertionError} Thrown if no element is found.\n */\ngoog.dom.getRequiredElementByClass = function(className, opt_root) {\n  var retValue = goog.dom.getElementByClass(className, opt_root);\n  return goog.asserts.assert(\n      retValue, 'No element found with className: ' + className);\n};\n\n\n/**\n * Prefer the standardized (http://www.w3.org/TR/selectors-api/), native and\n * fast W3C Selectors API.\n * @param {!(Element|Document)} parent The parent document object.\n * @return {boolean} whether or not we can use parent.querySelector* APIs.\n * @private\n */\ngoog.dom.canUseQuerySelector_ = function(parent) {\n  return !!(parent.querySelectorAll && parent.querySelector);\n};\n\n\n/**\n * Helper for `getElementsByTagNameAndClass`.\n * @param {!Document} doc The document to get the elements in.\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @private\n */\ngoog.dom.getElementsByTagNameAndClass_ = function(\n    doc, opt_tag, opt_class, opt_el) {\n  var parent = opt_el || doc;\n  var tagName =\n      (opt_tag && opt_tag != '*') ? String(opt_tag).toUpperCase() : '';\n\n  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {\n    var query = tagName + (opt_class ? '.' + opt_class : '');\n    return parent.querySelectorAll(query);\n  }\n\n  // Use the native getElementsByClassName if available, under the assumption\n  // that even when the tag name is specified, there will be fewer elements to\n  // filter through when going by class than by tag name\n  if (opt_class && parent.getElementsByClassName) {\n    var els = parent.getElementsByClassName(opt_class);\n\n    if (tagName) {\n      var arrayLike = {};\n      var len = 0;\n\n      // Filter for specific tags if requested.\n      for (var i = 0, el; el = els[i]; i++) {\n        if (tagName == el.nodeName) {\n          arrayLike[len++] = el;\n        }\n      }\n      arrayLike.length = len;\n\n      return /** @type {!IArrayLike<!Element>} */ (arrayLike);\n    } else {\n      return els;\n    }\n  }\n\n  var els = parent.getElementsByTagName(tagName || '*');\n\n  if (opt_class) {\n    var arrayLike = {};\n    var len = 0;\n    for (var i = 0, el; el = els[i]; i++) {\n      var className = el.className;\n      // Check if className has a split function since SVG className does not.\n      if (typeof className.split == 'function' &&\n          goog.array.contains(className.split(/\\s+/), opt_class)) {\n        arrayLike[len++] = el;\n      }\n    }\n    arrayLike.length = len;\n    return /** @type {!IArrayLike<!Element>} */ (arrayLike);\n  } else {\n    return els;\n  }\n};\n\n\n/**\n * Helper for goog.dom.getElementByTagNameAndClass.\n *\n * @param {!Document} doc The document to get the elements in.\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {?R} Reference to a DOM node. The return type is {?Element} if\n *     tagName is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @private\n */\ngoog.dom.getElementByTagNameAndClass_ = function(\n    doc, opt_tag, opt_class, opt_el) {\n  var parent = opt_el || doc;\n  var tag = (opt_tag && opt_tag != '*') ? String(opt_tag).toUpperCase() : '';\n  if (goog.dom.canUseQuerySelector_(parent) && (tag || opt_class)) {\n    return parent.querySelector(tag + (opt_class ? '.' + opt_class : ''));\n  }\n  var elements =\n      goog.dom.getElementsByTagNameAndClass_(doc, opt_tag, opt_class, opt_el);\n  return elements[0] || null;\n};\n\n\n\n/**\n * Alias for `getElementsByTagNameAndClass`.\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {Element=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @deprecated Use {@link goog.dom.getElementsByTagNameAndClass} instead.\n */\ngoog.dom.$$ = goog.dom.getElementsByTagNameAndClass;\n\n\n/**\n * Sets multiple properties, and sometimes attributes, on an element. Note that\n * properties are simply object properties on the element instance, while\n * attributes are visible in the DOM. Many properties map to attributes with the\n * same names, some with different names, and there are also unmappable cases.\n *\n * This method sets properties by default (which means that custom attributes\n * are not supported). These are the exeptions (some of which is legacy):\n * - \"style\": Even though this is an attribute name, it is translated to a\n *   property, \"style.cssText\". Note that this property sanitizes and formats\n *   its value, unlike the attribute.\n * - \"class\": This is an attribute name, it is translated to the \"className\"\n *   property.\n * - \"for\": This is an attribute name, it is translated to the \"htmlFor\"\n *   property.\n * - Entries in {@see goog.dom.DIRECT_ATTRIBUTE_MAP_} are set as attributes,\n *   this is probably due to browser quirks.\n * - \"aria-*\", \"data-*\": Always set as attributes, they have no property\n *   counterparts.\n *\n * @param {Element} element DOM node to set properties on.\n * @param {Object} properties Hash of property:value pairs.\n *     Property values can be strings or goog.string.TypedString values (such as\n *     goog.html.SafeUrl).\n */\ngoog.dom.setProperties = function(element, properties) {\n  goog.object.forEach(properties, function(val, key) {\n    if (val && typeof val == 'object' && val.implementsGoogStringTypedString) {\n      val = val.getTypedStringValue();\n    }\n    if (key == 'style') {\n      element.style.cssText = val;\n    } else if (key == 'class') {\n      element.className = val;\n    } else if (key == 'for') {\n      element.htmlFor = val;\n    } else if (goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(key)) {\n      element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);\n    } else if (\n        goog.string.startsWith(key, 'aria-') ||\n        goog.string.startsWith(key, 'data-')) {\n      element.setAttribute(key, val);\n    } else {\n      element[key] = val;\n    }\n  });\n};\n\n\n/**\n * Map of attributes that should be set using\n * element.setAttribute(key, val) instead of element[key] = val.  Used\n * by goog.dom.setProperties.\n *\n * @private {!Object<string, string>}\n * @const\n */\ngoog.dom.DIRECT_ATTRIBUTE_MAP_ = {\n  'cellpadding': 'cellPadding',\n  'cellspacing': 'cellSpacing',\n  'colspan': 'colSpan',\n  'frameborder': 'frameBorder',\n  'height': 'height',\n  'maxlength': 'maxLength',\n  'nonce': 'nonce',\n  'role': 'role',\n  'rowspan': 'rowSpan',\n  'type': 'type',\n  'usemap': 'useMap',\n  'valign': 'vAlign',\n  'width': 'width'\n};\n\n\n/**\n * Gets the dimensions of the viewport.\n *\n * Gecko Standards mode:\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * win.innerWidth     Width of viewport including scrollbar.\n * body.clientWidth   Width of body element.\n *\n * docEl.clientHeight Height of viewport excluding scrollbar.\n * win.innerHeight    Height of viewport including scrollbar.\n * body.clientHeight  Height of document.\n *\n * Gecko Backwards compatible mode:\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * win.innerWidth     Width of viewport including scrollbar.\n * body.clientWidth   Width of viewport excluding scrollbar.\n *\n * docEl.clientHeight Height of document.\n * win.innerHeight    Height of viewport including scrollbar.\n * body.clientHeight  Height of viewport excluding scrollbar.\n *\n * IE6/7 Standards mode:\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * win.innerWidth     Undefined.\n * body.clientWidth   Width of body element.\n *\n * docEl.clientHeight Height of viewport excluding scrollbar.\n * win.innerHeight    Undefined.\n * body.clientHeight  Height of document element.\n *\n * IE5 + IE6/7 Backwards compatible mode:\n * docEl.clientWidth  0.\n * win.innerWidth     Undefined.\n * body.clientWidth   Width of viewport excluding scrollbar.\n *\n * docEl.clientHeight 0.\n * win.innerHeight    Undefined.\n * body.clientHeight  Height of viewport excluding scrollbar.\n *\n * Opera 9 Standards and backwards compatible mode:\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * win.innerWidth     Width of viewport including scrollbar.\n * body.clientWidth   Width of viewport excluding scrollbar.\n *\n * docEl.clientHeight Height of document.\n * win.innerHeight    Height of viewport including scrollbar.\n * body.clientHeight  Height of viewport excluding scrollbar.\n *\n * WebKit:\n * Safari 2\n * docEl.clientHeight Same as scrollHeight.\n * docEl.clientWidth  Same as innerWidth.\n * win.innerWidth     Width of viewport excluding scrollbar.\n * win.innerHeight    Height of the viewport including scrollbar.\n * frame.innerHeight  Height of the viewport exluding scrollbar.\n *\n * Safari 3 (tested in 522)\n *\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * docEl.clientHeight Height of viewport excluding scrollbar in strict mode.\n * body.clientHeight  Height of viewport excluding scrollbar in quirks mode.\n *\n * @param {Window=} opt_window Optional window element to test.\n * @return {!goog.math.Size} Object with values 'width' and 'height'.\n */\ngoog.dom.getViewportSize = function(opt_window) {\n  // TODO(arv): This should not take an argument\n  return goog.dom.getViewportSize_(opt_window || window);\n};\n\n\n/**\n * Helper for `getViewportSize`.\n * @param {Window} win The window to get the view port size for.\n * @return {!goog.math.Size} Object with values 'width' and 'height'.\n * @private\n */\ngoog.dom.getViewportSize_ = function(win) {\n  var doc = win.document;\n  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;\n  return new goog.math.Size(el.clientWidth, el.clientHeight);\n};\n\n\n/**\n * Calculates the height of the document.\n *\n * @return {number} The height of the current document.\n */\ngoog.dom.getDocumentHeight = function() {\n  return goog.dom.getDocumentHeight_(window);\n};\n\n/**\n * Calculates the height of the document of the given window.\n *\n * @param {!Window} win The window whose document height to retrieve.\n * @return {number} The height of the document of the given window.\n */\ngoog.dom.getDocumentHeightForWindow = function(win) {\n  return goog.dom.getDocumentHeight_(win);\n};\n\n/**\n * Calculates the height of the document of the given window.\n *\n * Function code copied from the opensocial gadget api:\n *   gadgets.window.adjustHeight(opt_height)\n *\n * @private\n * @param {!Window} win The window whose document height to retrieve.\n * @return {number} The height of the document of the given window.\n */\ngoog.dom.getDocumentHeight_ = function(win) {\n  // NOTE(eae): This method will return the window size rather than the document\n  // size in webkit quirks mode.\n  var doc = win.document;\n  var height = 0;\n\n  if (doc) {\n    // Calculating inner content height is hard and different between\n    // browsers rendering in Strict vs. Quirks mode.  We use a combination of\n    // three properties within document.body and document.documentElement:\n    // - scrollHeight\n    // - offsetHeight\n    // - clientHeight\n    // These values differ significantly between browsers and rendering modes.\n    // But there are patterns.  It just takes a lot of time and persistence\n    // to figure out.\n\n    var body = doc.body;\n    var docEl = /** @type {!HTMLElement} */ (doc.documentElement);\n    if (!(docEl && body)) {\n      return 0;\n    }\n\n    // Get the height of the viewport\n    var vh = goog.dom.getViewportSize_(win).height;\n    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {\n      // In Strict mode:\n      // The inner content height is contained in either:\n      //    document.documentElement.scrollHeight\n      //    document.documentElement.offsetHeight\n      // Based on studying the values output by different browsers,\n      // use the value that's NOT equal to the viewport height found above.\n      height =\n          docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;\n    } else {\n      // In Quirks mode:\n      // documentElement.clientHeight is equal to documentElement.offsetHeight\n      // except in IE.  In most browsers, document.documentElement can be used\n      // to calculate the inner content height.\n      // However, in other browsers (e.g. IE), document.body must be used\n      // instead.  How do we know which one to use?\n      // If document.documentElement.clientHeight does NOT equal\n      // document.documentElement.offsetHeight, then use document.body.\n      var sh = docEl.scrollHeight;\n      var oh = docEl.offsetHeight;\n      if (docEl.clientHeight != oh) {\n        sh = body.scrollHeight;\n        oh = body.offsetHeight;\n      }\n\n      // Detect whether the inner content height is bigger or smaller\n      // than the bounding box (viewport).  If bigger, take the larger\n      // value.  If smaller, take the smaller value.\n      if (sh > vh) {\n        // Content is larger\n        height = sh > oh ? sh : oh;\n      } else {\n        // Content is smaller\n        height = sh < oh ? sh : oh;\n      }\n    }\n  }\n\n  return height;\n};\n\n\n/**\n * Gets the page scroll distance as a coordinate object.\n *\n * @param {Window=} opt_window Optional window element to test.\n * @return {!goog.math.Coordinate} Object with values 'x' and 'y'.\n * @deprecated Use {@link goog.dom.getDocumentScroll} instead.\n */\ngoog.dom.getPageScroll = function(opt_window) {\n  var win = opt_window || goog.global || window;\n  return goog.dom.getDomHelper(win.document).getDocumentScroll();\n};\n\n\n/**\n * Gets the document scroll distance as a coordinate object.\n *\n * @return {!goog.math.Coordinate} Object with values 'x' and 'y'.\n */\ngoog.dom.getDocumentScroll = function() {\n  return goog.dom.getDocumentScroll_(document);\n};\n\n\n/**\n * Helper for `getDocumentScroll`.\n *\n * @param {!Document} doc The document to get the scroll for.\n * @return {!goog.math.Coordinate} Object with values 'x' and 'y'.\n * @private\n */\ngoog.dom.getDocumentScroll_ = function(doc) {\n  var el = goog.dom.getDocumentScrollElement_(doc);\n  var win = goog.dom.getWindow_(doc);\n  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher('10') &&\n      win.pageYOffset != el.scrollTop) {\n    // The keyboard on IE10 touch devices shifts the page using the pageYOffset\n    // without modifying scrollTop. For this case, we want the body scroll\n    // offsets.\n    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);\n  }\n  return new goog.math.Coordinate(\n      win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);\n};\n\n\n/**\n * Gets the document scroll element.\n * @return {!Element} Scrolling element.\n */\ngoog.dom.getDocumentScrollElement = function() {\n  return goog.dom.getDocumentScrollElement_(document);\n};\n\n\n/**\n * Helper for `getDocumentScrollElement`.\n * @param {!Document} doc The document to get the scroll element for.\n * @return {!Element} Scrolling element.\n * @private\n */\ngoog.dom.getDocumentScrollElement_ = function(doc) {\n  // Old WebKit needs body.scrollLeft in both quirks mode and strict mode. We\n  // also default to the documentElement if the document does not have a body\n  // (e.g. a SVG document).\n  // Uses http://dev.w3.org/csswg/cssom-view/#dom-document-scrollingelement to\n  // avoid trying to guess about browser behavior from the UA string.\n  if (doc.scrollingElement) {\n    return doc.scrollingElement;\n  }\n  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {\n    return doc.documentElement;\n  }\n  return doc.body || doc.documentElement;\n};\n\n\n/**\n * Gets the window object associated with the given document.\n *\n * @param {Document=} opt_doc  Document object to get window for.\n * @return {!Window} The window associated with the given document.\n */\ngoog.dom.getWindow = function(opt_doc) {\n  // TODO(arv): This should not take an argument.\n  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;\n};\n\n\n/**\n * Helper for `getWindow`.\n *\n * @param {!Document} doc  Document object to get window for.\n * @return {!Window} The window associated with the given document.\n * @private\n */\ngoog.dom.getWindow_ = function(doc) {\n  return /** @type {!Window} */ (doc.parentWindow || doc.defaultView);\n};\n\n\n/**\n * Returns a dom node with a set of attributes.  This function accepts varargs\n * for subsequent nodes to be added.  Subsequent nodes will be added to the\n * first node as childNodes.\n *\n * So:\n * <code>createDom(goog.dom.TagName.DIV, null, createDom(goog.dom.TagName.P),\n * createDom(goog.dom.TagName.P));</code> would return a div with two child\n * paragraphs\n *\n * This function uses {@link goog.dom.setProperties} to set attributes: the\n * `opt_attributes` parameter follows the same rules.\n *\n * @param {string|!goog.dom.TagName<T>} tagName Tag to create.\n * @param {?Object|?Array<string>|string=} opt_attributes If object, then a map\n *     of name-value pairs for attributes. If a string, then this is the\n *     className of the new element. If an array, the elements will be joined\n *     together as the className of the new element.\n * @param {...(Object|string|Array|NodeList|null|undefined)} var_args Further\n *     DOM nodes or strings for text nodes. If one of the var_args is an array\n *     or NodeList, its elements will be added as childNodes instead.\n * @return {R} Reference to a DOM node. The return type is {!Element} if tagName\n *     is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.createDom = function(tagName, opt_attributes, var_args) {\n  return goog.dom.createDom_(document, arguments);\n};\n\n\n/**\n * Helper for `createDom`.\n * @param {!Document} doc The document to create the DOM in.\n * @param {!Arguments} args Argument object passed from the callers. See\n *     `goog.dom.createDom` for details.\n * @return {!Element} Reference to a DOM node.\n * @private\n */\ngoog.dom.createDom_ = function(doc, args) {\n  var tagName = String(args[0]);\n  var attributes = args[1];\n\n  // Internet Explorer is dumb:\n  // name: https://msdn.microsoft.com/en-us/library/ms534184(v=vs.85).aspx\n  // type: https://msdn.microsoft.com/en-us/library/ms534700(v=vs.85).aspx\n  // Also does not allow setting of 'type' attribute on 'input' or 'button'.\n  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes &&\n      (attributes.name || attributes.type)) {\n    var tagNameArr = ['<', tagName];\n    if (attributes.name) {\n      tagNameArr.push(' name=\"', goog.string.htmlEscape(attributes.name), '\"');\n    }\n    if (attributes.type) {\n      tagNameArr.push(' type=\"', goog.string.htmlEscape(attributes.type), '\"');\n\n      // Clone attributes map to remove 'type' without mutating the input.\n      var clone = {};\n      goog.object.extend(clone, attributes);\n\n      // JSCompiler can't see how goog.object.extend added this property,\n      // because it was essentially added by reflection.\n      // So it needs to be quoted.\n      delete clone['type'];\n\n      attributes = clone;\n    }\n    tagNameArr.push('>');\n    tagName = tagNameArr.join('');\n  }\n\n  var element = goog.dom.createElement_(doc, tagName);\n\n  if (attributes) {\n    if (typeof attributes === 'string') {\n      element.className = attributes;\n    } else if (goog.isArray(attributes)) {\n      element.className = attributes.join(' ');\n    } else {\n      goog.dom.setProperties(element, attributes);\n    }\n  }\n\n  if (args.length > 2) {\n    goog.dom.append_(doc, element, args, 2);\n  }\n\n  return element;\n};\n\n\n/**\n * Appends a node with text or other nodes.\n * @param {!Document} doc The document to create new nodes in.\n * @param {!Node} parent The node to append nodes to.\n * @param {!Arguments} args The values to add. See `goog.dom.append`.\n * @param {number} startIndex The index of the array to start from.\n * @private\n */\ngoog.dom.append_ = function(doc, parent, args, startIndex) {\n  function childHandler(child) {\n    // TODO(user): More coercion, ala MochiKit?\n    if (child) {\n      parent.appendChild(\n          typeof child === 'string' ? doc.createTextNode(child) : child);\n    }\n  }\n\n  for (var i = startIndex; i < args.length; i++) {\n    var arg = args[i];\n    // TODO(attila): Fix isArrayLike to return false for a text node.\n    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {\n      // If the argument is a node list, not a real array, use a clone,\n      // because forEach can't be used to mutate a NodeList.\n      goog.array.forEach(\n          goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg,\n          childHandler);\n    } else {\n      childHandler(arg);\n    }\n  }\n};\n\n\n/**\n * Alias for `createDom`.\n * @param {string|!goog.dom.TagName<T>} tagName Tag to create.\n * @param {?Object|?Array<string>|string=} opt_attributes If object, then a map\n *     of name-value pairs for attributes. If a string, then this is the\n *     className of the new element. If an array, the elements will be joined\n *     together as the className of the new element.\n * @param {...(Object|string|Array|NodeList|null|undefined)} var_args Further\n *     DOM nodes or strings for text nodes. If one of the var_args is an array,\n *     its children will be added as childNodes instead.\n * @return {R} Reference to a DOM node. The return type is {!Element} if tagName\n *     is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @deprecated Use {@link goog.dom.createDom} instead.\n */\ngoog.dom.$dom = goog.dom.createDom;\n\n\n/**\n * Creates a new element.\n * @param {string|!goog.dom.TagName<T>} name Tag to create.\n * @return {R} The new element. The return type is {!Element} if name is\n *     a string or a more specific type if it is a member of goog.dom.TagName\n *     (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.createElement = function(name) {\n  return goog.dom.createElement_(document, name);\n};\n\n\n/**\n * Creates a new element.\n * @param {!Document} doc The document to create the element in.\n * @param {string|!goog.dom.TagName<T>} name Tag to create.\n * @return {R} The new element. The return type is {!Element} if name is\n *     a string or a more specific type if it is a member of goog.dom.TagName\n *     (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @private\n */\ngoog.dom.createElement_ = function(doc, name) {\n  name = String(name);\n  if (doc.contentType === 'application/xhtml+xml') name = name.toLowerCase();\n  return doc.createElement(name);\n};\n\n\n/**\n * Creates a new text node.\n * @param {number|string} content Content.\n * @return {!Text} The new text node.\n */\ngoog.dom.createTextNode = function(content) {\n  return document.createTextNode(String(content));\n};\n\n\n/**\n * Create a table.\n * @param {number} rows The number of rows in the table.  Must be >= 1.\n * @param {number} columns The number of columns in the table.  Must be >= 1.\n * @param {boolean=} opt_fillWithNbsp If true, fills table entries with\n *     `goog.string.Unicode.NBSP` characters.\n * @return {!Element} The created table.\n */\ngoog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {\n  // TODO(mlourenco): Return HTMLTableElement, also in prototype function.\n  // Callers need to be updated to e.g. not assign numbers to table.cellSpacing.\n  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);\n};\n\n\n/**\n * Create a table.\n * @param {!Document} doc Document object to use to create the table.\n * @param {number} rows The number of rows in the table.  Must be >= 1.\n * @param {number} columns The number of columns in the table.  Must be >= 1.\n * @param {boolean} fillWithNbsp If true, fills table entries with\n *     `goog.string.Unicode.NBSP` characters.\n * @return {!HTMLTableElement} The created table.\n * @private\n */\ngoog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {\n  var table = goog.dom.createElement_(doc, goog.dom.TagName.TABLE);\n  var tbody =\n      table.appendChild(goog.dom.createElement_(doc, goog.dom.TagName.TBODY));\n  for (var i = 0; i < rows; i++) {\n    var tr = goog.dom.createElement_(doc, goog.dom.TagName.TR);\n    for (var j = 0; j < columns; j++) {\n      var td = goog.dom.createElement_(doc, goog.dom.TagName.TD);\n      // IE <= 9 will create a text node if we set text content to the empty\n      // string, so we avoid doing it unless necessary. This ensures that the\n      // same DOM tree is returned on all browsers.\n      if (fillWithNbsp) {\n        goog.dom.setTextContent(td, goog.string.Unicode.NBSP);\n      }\n      tr.appendChild(td);\n    }\n    tbody.appendChild(tr);\n  }\n  return table;\n};\n\n\n\n/**\n * Creates a new Node from constant strings of HTML markup.\n * @param {...!goog.string.Const} var_args The HTML strings to concatenate then\n *     convert into a node.\n * @return {!Node}\n */\ngoog.dom.constHtmlToNode = function(var_args) {\n  var stringArray = goog.array.map(arguments, goog.string.Const.unwrap);\n  var safeHtml =\n      goog.html.uncheckedconversions\n          .safeHtmlFromStringKnownToSatisfyTypeContract(\n              goog.string.Const.from(\n                  'Constant HTML string, that gets turned into a ' +\n                  'Node later, so it will be automatically balanced.'),\n              stringArray.join(''));\n  return goog.dom.safeHtmlToNode(safeHtml);\n};\n\n\n/**\n * Converts HTML markup into a node. This is a safe version of\n * `goog.dom.htmlToDocumentFragment` which is now deleted.\n * @param {!goog.html.SafeHtml} html The HTML markup to convert.\n * @return {!Node} The resulting node.\n */\ngoog.dom.safeHtmlToNode = function(html) {\n  return goog.dom.safeHtmlToNode_(document, html);\n};\n\n\n/**\n * Helper for `safeHtmlToNode`.\n * @param {!Document} doc The document.\n * @param {!goog.html.SafeHtml} html The HTML markup to convert.\n * @return {!Node} The resulting node.\n * @private\n */\ngoog.dom.safeHtmlToNode_ = function(doc, html) {\n  var tempDiv = goog.dom.createElement_(doc, goog.dom.TagName.DIV);\n  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {\n    goog.dom.safe.setInnerHtml(\n        tempDiv, goog.html.SafeHtml.concat(goog.html.SafeHtml.BR, html));\n    tempDiv.removeChild(goog.asserts.assert(tempDiv.firstChild));\n  } else {\n    goog.dom.safe.setInnerHtml(tempDiv, html);\n  }\n  return goog.dom.childrenToNode_(doc, tempDiv);\n};\n\n\n/**\n * Helper for `safeHtmlToNode_`.\n * @param {!Document} doc The document.\n * @param {!Node} tempDiv The input node.\n * @return {!Node} The resulting node.\n * @private\n */\ngoog.dom.childrenToNode_ = function(doc, tempDiv) {\n  if (tempDiv.childNodes.length == 1) {\n    return tempDiv.removeChild(goog.asserts.assert(tempDiv.firstChild));\n  } else {\n    var fragment = doc.createDocumentFragment();\n    while (tempDiv.firstChild) {\n      fragment.appendChild(tempDiv.firstChild);\n    }\n    return fragment;\n  }\n};\n\n\n/**\n * Returns true if the browser is in \"CSS1-compatible\" (standards-compliant)\n * mode, false otherwise.\n * @return {boolean} True if in CSS1-compatible mode.\n */\ngoog.dom.isCss1CompatMode = function() {\n  return goog.dom.isCss1CompatMode_(document);\n};\n\n\n/**\n * Returns true if the browser is in \"CSS1-compatible\" (standards-compliant)\n * mode, false otherwise.\n * @param {!Document} doc The document to check.\n * @return {boolean} True if in CSS1-compatible mode.\n * @private\n */\ngoog.dom.isCss1CompatMode_ = function(doc) {\n  if (goog.dom.COMPAT_MODE_KNOWN_) {\n    return goog.dom.ASSUME_STANDARDS_MODE;\n  }\n\n  return doc.compatMode == 'CSS1Compat';\n};\n\n\n/**\n * Determines if the given node can contain children, intended to be used for\n * HTML generation.\n *\n * IE natively supports node.canHaveChildren but has inconsistent behavior.\n * Prior to IE8 the base tag allows children and in IE9 all nodes return true\n * for canHaveChildren.\n *\n * In practice all non-IE browsers allow you to add children to any node, but\n * the behavior is inconsistent:\n *\n * <pre>\n *   var a = goog.dom.createElement(goog.dom.TagName.BR);\n *   a.appendChild(document.createTextNode('foo'));\n *   a.appendChild(document.createTextNode('bar'));\n *   console.log(a.childNodes.length);  // 2\n *   console.log(a.innerHTML);  // Chrome: \"\", IE9: \"foobar\", FF3.5: \"foobar\"\n * </pre>\n *\n * For more information, see:\n * http://dev.w3.org/html5/markup/syntax.html#syntax-elements\n *\n * TODO(user): Rename shouldAllowChildren() ?\n *\n * @param {Node} node The node to check.\n * @return {boolean} Whether the node can contain children.\n */\ngoog.dom.canHaveChildren = function(node) {\n  if (node.nodeType != goog.dom.NodeType.ELEMENT) {\n    return false;\n  }\n  switch (/** @type {!Element} */ (node).tagName) {\n    case String(goog.dom.TagName.APPLET):\n    case String(goog.dom.TagName.AREA):\n    case String(goog.dom.TagName.BASE):\n    case String(goog.dom.TagName.BR):\n    case String(goog.dom.TagName.COL):\n    case String(goog.dom.TagName.COMMAND):\n    case String(goog.dom.TagName.EMBED):\n    case String(goog.dom.TagName.FRAME):\n    case String(goog.dom.TagName.HR):\n    case String(goog.dom.TagName.IMG):\n    case String(goog.dom.TagName.INPUT):\n    case String(goog.dom.TagName.IFRAME):\n    case String(goog.dom.TagName.ISINDEX):\n    case String(goog.dom.TagName.KEYGEN):\n    case String(goog.dom.TagName.LINK):\n    case String(goog.dom.TagName.NOFRAMES):\n    case String(goog.dom.TagName.NOSCRIPT):\n    case String(goog.dom.TagName.META):\n    case String(goog.dom.TagName.OBJECT):\n    case String(goog.dom.TagName.PARAM):\n    case String(goog.dom.TagName.SCRIPT):\n    case String(goog.dom.TagName.SOURCE):\n    case String(goog.dom.TagName.STYLE):\n    case String(goog.dom.TagName.TRACK):\n    case String(goog.dom.TagName.WBR):\n      return false;\n  }\n  return true;\n};\n\n\n/**\n * Appends a child to a node.\n * @param {Node} parent Parent.\n * @param {Node} child Child.\n */\ngoog.dom.appendChild = function(parent, child) {\n  goog.asserts.assert(\n      parent != null && child != null,\n      'goog.dom.appendChild expects non-null arguments');\n  parent.appendChild(child);\n};\n\n\n/**\n * Appends a node with text or other nodes.\n * @param {!Node} parent The node to append nodes to.\n * @param {...goog.dom.Appendable} var_args The things to append to the node.\n *     If this is a Node it is appended as is.\n *     If this is a string then a text node is appended.\n *     If this is an array like object then fields 0 to length - 1 are appended.\n */\ngoog.dom.append = function(parent, var_args) {\n  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);\n};\n\n\n/**\n * Removes all the child nodes on a DOM node.\n * @param {Node} node Node to remove children from.\n */\ngoog.dom.removeChildren = function(node) {\n  // Note: Iterations over live collections can be slow, this is the fastest\n  // we could find. The double parenthesis are used to prevent JsCompiler and\n  // strict warnings.\n  var child;\n  while ((child = node.firstChild)) {\n    node.removeChild(child);\n  }\n};\n\n\n/**\n * Inserts a new node before an existing reference node (i.e. as the previous\n * sibling). If the reference node has no parent, then does nothing.\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert before.\n */\ngoog.dom.insertSiblingBefore = function(newNode, refNode) {\n  goog.asserts.assert(\n      newNode != null && refNode != null,\n      'goog.dom.insertSiblingBefore expects non-null arguments');\n  if (refNode.parentNode) {\n    refNode.parentNode.insertBefore(newNode, refNode);\n  }\n};\n\n\n/**\n * Inserts a new node after an existing reference node (i.e. as the next\n * sibling). If the reference node has no parent, then does nothing.\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert after.\n */\ngoog.dom.insertSiblingAfter = function(newNode, refNode) {\n  goog.asserts.assert(\n      newNode != null && refNode != null,\n      'goog.dom.insertSiblingAfter expects non-null arguments');\n  if (refNode.parentNode) {\n    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);\n  }\n};\n\n\n/**\n * Insert a child at a given index. If index is larger than the number of child\n * nodes that the parent currently has, the node is inserted as the last child\n * node.\n * @param {Element} parent The element into which to insert the child.\n * @param {Node} child The element to insert.\n * @param {number} index The index at which to insert the new child node. Must\n *     not be negative.\n */\ngoog.dom.insertChildAt = function(parent, child, index) {\n  // Note that if the second argument is null, insertBefore\n  // will append the child at the end of the list of children.\n  goog.asserts.assert(\n      parent != null, 'goog.dom.insertChildAt expects a non-null parent');\n  parent.insertBefore(child, parent.childNodes[index] || null);\n};\n\n\n/**\n * Removes a node from its parent.\n * @param {Node} node The node to remove.\n * @return {Node} The node removed if removed; else, null.\n */\ngoog.dom.removeNode = function(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n};\n\n\n/**\n * Replaces a node in the DOM tree. Will do nothing if `oldNode` has no\n * parent.\n * @param {Node} newNode Node to insert.\n * @param {Node} oldNode Node to replace.\n */\ngoog.dom.replaceNode = function(newNode, oldNode) {\n  goog.asserts.assert(\n      newNode != null && oldNode != null,\n      'goog.dom.replaceNode expects non-null arguments');\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n};\n\n\n/**\n * Flattens an element. That is, removes it and replace it with its children.\n * Does nothing if the element is not in the document.\n * @param {Element} element The element to flatten.\n * @return {Element|undefined} The original element, detached from the document\n *     tree, sans children; or undefined, if the element was not in the document\n *     to begin with.\n */\ngoog.dom.flattenElement = function(element) {\n  var child, parent = element.parentNode;\n  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {\n    // Use IE DOM method (supported by Opera too) if available\n    if (element.removeNode) {\n      return /** @type {Element} */ (element.removeNode(false));\n    } else {\n      // Move all children of the original node up one level.\n      while ((child = element.firstChild)) {\n        parent.insertBefore(child, element);\n      }\n\n      // Detach the original element.\n      return /** @type {Element} */ (goog.dom.removeNode(element));\n    }\n  }\n};\n\n\n/**\n * Returns an array containing just the element children of the given element.\n * @param {Element} element The element whose element children we want.\n * @return {!(Array<!Element>|NodeList<!Element>)} An array or array-like list\n *     of just the element children of the given element.\n */\ngoog.dom.getChildren = function(element) {\n  // We check if the children attribute is supported for child elements\n  // since IE8 misuses the attribute by also including comments.\n  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE &&\n      element.children != undefined) {\n    return element.children;\n  }\n  // Fall back to manually filtering the element's child nodes.\n  return goog.array.filter(element.childNodes, function(node) {\n    return node.nodeType == goog.dom.NodeType.ELEMENT;\n  });\n};\n\n\n/**\n * Returns the first child node that is an element.\n * @param {Node} node The node to get the first child element of.\n * @return {Element} The first child node of `node` that is an element.\n */\ngoog.dom.getFirstElementChild = function(node) {\n  if (node.firstElementChild !== undefined) {\n    return /** @type {!Element} */ (node).firstElementChild;\n  }\n  return goog.dom.getNextElementNode_(node.firstChild, true);\n};\n\n\n/**\n * Returns the last child node that is an element.\n * @param {Node} node The node to get the last child element of.\n * @return {Element} The last child node of `node` that is an element.\n */\ngoog.dom.getLastElementChild = function(node) {\n  if (node.lastElementChild !== undefined) {\n    return /** @type {!Element} */ (node).lastElementChild;\n  }\n  return goog.dom.getNextElementNode_(node.lastChild, false);\n};\n\n\n/**\n * Returns the first next sibling that is an element.\n * @param {Node} node The node to get the next sibling element of.\n * @return {Element} The next sibling of `node` that is an element.\n */\ngoog.dom.getNextElementSibling = function(node) {\n  if (node.nextElementSibling !== undefined) {\n    return /** @type {!Element} */ (node).nextElementSibling;\n  }\n  return goog.dom.getNextElementNode_(node.nextSibling, true);\n};\n\n\n/**\n * Returns the first previous sibling that is an element.\n * @param {Node} node The node to get the previous sibling element of.\n * @return {Element} The first previous sibling of `node` that is\n *     an element.\n */\ngoog.dom.getPreviousElementSibling = function(node) {\n  if (node.previousElementSibling !== undefined) {\n    return /** @type {!Element} */ (node).previousElementSibling;\n  }\n  return goog.dom.getNextElementNode_(node.previousSibling, false);\n};\n\n\n/**\n * Returns the first node that is an element in the specified direction,\n * starting with `node`.\n * @param {Node} node The node to get the next element from.\n * @param {boolean} forward Whether to look forwards or backwards.\n * @return {Element} The first element.\n * @private\n */\ngoog.dom.getNextElementNode_ = function(node, forward) {\n  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {\n    node = forward ? node.nextSibling : node.previousSibling;\n  }\n\n  return /** @type {Element} */ (node);\n};\n\n\n/**\n * Returns the next node in source order from the given node.\n * @param {Node} node The node.\n * @return {Node} The next node in the DOM tree, or null if this was the last\n *     node.\n */\ngoog.dom.getNextNode = function(node) {\n  if (!node) {\n    return null;\n  }\n\n  if (node.firstChild) {\n    return node.firstChild;\n  }\n\n  while (node && !node.nextSibling) {\n    node = node.parentNode;\n  }\n\n  return node ? node.nextSibling : null;\n};\n\n\n/**\n * Returns the previous node in source order from the given node.\n * @param {Node} node The node.\n * @return {Node} The previous node in the DOM tree, or null if this was the\n *     first node.\n */\ngoog.dom.getPreviousNode = function(node) {\n  if (!node) {\n    return null;\n  }\n\n  if (!node.previousSibling) {\n    return node.parentNode;\n  }\n\n  node = node.previousSibling;\n  while (node && node.lastChild) {\n    node = node.lastChild;\n  }\n\n  return node;\n};\n\n\n/**\n * Whether the object looks like a DOM node.\n * @param {?} obj The object being tested for node likeness.\n * @return {boolean} Whether the object looks like a DOM node.\n */\ngoog.dom.isNodeLike = function(obj) {\n  return goog.isObject(obj) && obj.nodeType > 0;\n};\n\n\n/**\n * Whether the object looks like an Element.\n * @param {?} obj The object being tested for Element likeness.\n * @return {boolean} Whether the object looks like an Element.\n */\ngoog.dom.isElement = function(obj) {\n  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;\n};\n\n\n/**\n * Returns true if the specified value is a Window object. This includes the\n * global window for HTML pages, and iframe windows.\n * @param {?} obj Variable to test.\n * @return {boolean} Whether the variable is a window.\n */\ngoog.dom.isWindow = function(obj) {\n  return goog.isObject(obj) && obj['window'] == obj;\n};\n\n\n/**\n * Returns an element's parent, if it's an Element.\n * @param {Element} element The DOM element.\n * @return {Element} The parent, or null if not an Element.\n */\ngoog.dom.getParentElement = function(element) {\n  var parent;\n  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {\n    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher('9') &&\n        !goog.userAgent.isVersionOrHigher('10');\n    // SVG elements in IE9 can't use the parentElement property.\n    // goog.global['SVGElement'] is not defined in IE9 quirks mode.\n    if (!(isIe9 && goog.global['SVGElement'] &&\n          element instanceof goog.global['SVGElement'])) {\n      parent = element.parentElement;\n      if (parent) {\n        return parent;\n      }\n    }\n  }\n  parent = element.parentNode;\n  return goog.dom.isElement(parent) ? /** @type {!Element} */ (parent) : null;\n};\n\n\n/**\n * Whether a node contains another node.\n * @param {?Node|undefined} parent The node that should contain the other node.\n * @param {?Node|undefined} descendant The node to test presence of.\n * @return {boolean} Whether the parent node contains the descendant node.\n */\ngoog.dom.contains = function(parent, descendant) {\n  if (!parent || !descendant) {\n    return false;\n  }\n  // We use browser specific methods for this if available since it is faster\n  // that way.\n\n  // IE DOM\n  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {\n    return parent == descendant || parent.contains(descendant);\n  }\n\n  // W3C DOM Level 3\n  if (typeof parent.compareDocumentPosition != 'undefined') {\n    return parent == descendant ||\n        Boolean(parent.compareDocumentPosition(descendant) & 16);\n  }\n\n  // W3C DOM Level 1\n  while (descendant && parent != descendant) {\n    descendant = descendant.parentNode;\n  }\n  return descendant == parent;\n};\n\n\n/**\n * Compares the document order of two nodes, returning 0 if they are the same\n * node, a negative number if node1 is before node2, and a positive number if\n * node2 is before node1.  Note that we compare the order the tags appear in the\n * document so in the tree <b><i>text</i></b> the B node is considered to be\n * before the I node.\n *\n * @param {Node} node1 The first node to compare.\n * @param {Node} node2 The second node to compare.\n * @return {number} 0 if the nodes are the same node, a negative number if node1\n *     is before node2, and a positive number if node2 is before node1.\n */\ngoog.dom.compareNodeOrder = function(node1, node2) {\n  // Fall out quickly for equality.\n  if (node1 == node2) {\n    return 0;\n  }\n\n  // Use compareDocumentPosition where available\n  if (node1.compareDocumentPosition) {\n    // 4 is the bitmask for FOLLOWS.\n    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;\n  }\n\n  // Special case for document nodes on IE 7 and 8.\n  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {\n    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {\n      return -1;\n    }\n    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {\n      return 1;\n    }\n  }\n\n  // Process in IE using sourceIndex - we check to see if the first node has\n  // a source index or if its parent has one.\n  if ('sourceIndex' in node1 ||\n      (node1.parentNode && 'sourceIndex' in node1.parentNode)) {\n    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;\n    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;\n\n    if (isElement1 && isElement2) {\n      return node1.sourceIndex - node2.sourceIndex;\n    } else {\n      var parent1 = node1.parentNode;\n      var parent2 = node2.parentNode;\n\n      if (parent1 == parent2) {\n        return goog.dom.compareSiblingOrder_(node1, node2);\n      }\n\n      if (!isElement1 && goog.dom.contains(parent1, node2)) {\n        return -1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);\n      }\n\n\n      if (!isElement2 && goog.dom.contains(parent2, node1)) {\n        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);\n      }\n\n      return (isElement1 ? node1.sourceIndex : parent1.sourceIndex) -\n          (isElement2 ? node2.sourceIndex : parent2.sourceIndex);\n    }\n  }\n\n  // For Safari, we compare ranges.\n  var doc = goog.dom.getOwnerDocument(node1);\n\n  var range1, range2;\n  range1 = doc.createRange();\n  range1.selectNode(node1);\n  range1.collapse(true);\n\n  range2 = doc.createRange();\n  range2.selectNode(node2);\n  range2.collapse(true);\n\n  return range1.compareBoundaryPoints(\n      goog.global['Range'].START_TO_END, range2);\n};\n\n\n/**\n * Utility function to compare the position of two nodes, when\n * `textNode`'s parent is an ancestor of `node`.  If this entry\n * condition is not met, this function will attempt to reference a null object.\n * @param {!Node} textNode The textNode to compare.\n * @param {Node} node The node to compare.\n * @return {number} -1 if node is before textNode, +1 otherwise.\n * @private\n */\ngoog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {\n  var parent = textNode.parentNode;\n  if (parent == node) {\n    // If textNode is a child of node, then node comes first.\n    return -1;\n  }\n  var sibling = node;\n  while (sibling.parentNode != parent) {\n    sibling = sibling.parentNode;\n  }\n  return goog.dom.compareSiblingOrder_(sibling, textNode);\n};\n\n\n/**\n * Utility function to compare the position of two nodes known to be non-equal\n * siblings.\n * @param {Node} node1 The first node to compare.\n * @param {!Node} node2 The second node to compare.\n * @return {number} -1 if node1 is before node2, +1 otherwise.\n * @private\n */\ngoog.dom.compareSiblingOrder_ = function(node1, node2) {\n  var s = node2;\n  while ((s = s.previousSibling)) {\n    if (s == node1) {\n      // We just found node1 before node2.\n      return -1;\n    }\n  }\n\n  // Since we didn't find it, node1 must be after node2.\n  return 1;\n};\n\n\n/**\n * Find the deepest common ancestor of the given nodes.\n * @param {...Node} var_args The nodes to find a common ancestor of.\n * @return {Node} The common ancestor of the nodes, or null if there is none.\n *     null will only be returned if two or more of the nodes are from different\n *     documents.\n */\ngoog.dom.findCommonAncestor = function(var_args) {\n  var i, count = arguments.length;\n  if (!count) {\n    return null;\n  } else if (count == 1) {\n    return arguments[0];\n  }\n\n  var paths = [];\n  var minLength = Infinity;\n  for (i = 0; i < count; i++) {\n    // Compute the list of ancestors.\n    var ancestors = [];\n    var node = arguments[i];\n    while (node) {\n      ancestors.unshift(node);\n      node = node.parentNode;\n    }\n\n    // Save the list for comparison.\n    paths.push(ancestors);\n    minLength = Math.min(minLength, ancestors.length);\n  }\n  var output = null;\n  for (i = 0; i < minLength; i++) {\n    var first = paths[0][i];\n    for (var j = 1; j < count; j++) {\n      if (first != paths[j][i]) {\n        return output;\n      }\n    }\n    output = first;\n  }\n  return output;\n};\n\n\n/**\n * Returns whether node is in a document or detached. Throws an error if node\n * itself is a document. This specifically handles two cases beyond naive use of\n * builtins: (1) it works correctly in IE, and (2) it works for elements from\n * different documents/iframes. If neither of these considerations are relevant\n * then a simple `document.contains(node)` may be used instead.\n * @param {!Node} node\n * @return {boolean}\n */\ngoog.dom.isInDocument = function(node) {\n  return (node.ownerDocument.compareDocumentPosition(node) & 16) == 16;\n};\n\n\n/**\n * Returns the owner document for a node.\n * @param {Node|Window} node The node to get the document for.\n * @return {!Document} The document owning the node.\n */\ngoog.dom.getOwnerDocument = function(node) {\n  // TODO(nnaze): Update param signature to be non-nullable.\n  goog.asserts.assert(node, 'Node cannot be null or undefined.');\n  return /** @type {!Document} */ (\n      node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument ||\n              node.document);\n};\n\n\n/**\n * Cross-browser function for getting the document element of a frame or iframe.\n * @param {Element} frame Frame element.\n * @return {!Document} The frame content document.\n */\ngoog.dom.getFrameContentDocument = function(frame) {\n  return frame.contentDocument ||\n      /** @type {!HTMLFrameElement} */ (frame).contentWindow.document;\n};\n\n\n/**\n * Cross-browser function for getting the window of a frame or iframe.\n * @param {Element} frame Frame element.\n * @return {Window} The window associated with the given frame, or null if none\n *     exists.\n */\ngoog.dom.getFrameContentWindow = function(frame) {\n  try {\n    return frame.contentWindow ||\n        (frame.contentDocument ? goog.dom.getWindow(frame.contentDocument) :\n                                 null);\n  } catch (e) {\n    // NOTE(user): In IE8, checking the contentWindow or contentDocument\n    // properties will throw a \"Unspecified Error\" exception if the iframe is\n    // not inserted in the DOM. If we get this we can be sure that no window\n    // exists, so return null.\n  }\n  return null;\n};\n\n\n/**\n * Sets the text content of a node, with cross-browser support.\n * @param {Node} node The node to change the text content of.\n * @param {string|number} text The value that should replace the node's content.\n */\ngoog.dom.setTextContent = function(node, text) {\n  goog.asserts.assert(\n      node != null,\n      'goog.dom.setTextContent expects a non-null value for node');\n\n  if ('textContent' in node) {\n    node.textContent = text;\n  } else if (node.nodeType == goog.dom.NodeType.TEXT) {\n    /** @type {!Text} */ (node).data = String(text);\n  } else if (\n      node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {\n    // If the first child is a text node we just change its data and remove the\n    // rest of the children.\n    while (node.lastChild != node.firstChild) {\n      node.removeChild(goog.asserts.assert(node.lastChild));\n    }\n    /** @type {!Text} */ (node.firstChild).data = String(text);\n  } else {\n    goog.dom.removeChildren(node);\n    var doc = goog.dom.getOwnerDocument(node);\n    node.appendChild(doc.createTextNode(String(text)));\n  }\n};\n\n\n/**\n * Gets the outerHTML of a node, which is like innerHTML, except that it\n * actually contains the HTML of the node itself.\n * @param {Element} element The element to get the HTML of.\n * @return {string} The outerHTML of the given element.\n */\ngoog.dom.getOuterHtml = function(element) {\n  goog.asserts.assert(\n      element !== null,\n      'goog.dom.getOuterHtml expects a non-null value for element');\n  // IE, Opera and WebKit all have outerHTML.\n  if ('outerHTML' in element) {\n    return element.outerHTML;\n  } else {\n    var doc = goog.dom.getOwnerDocument(element);\n    var div = goog.dom.createElement_(doc, goog.dom.TagName.DIV);\n    div.appendChild(element.cloneNode(true));\n    return div.innerHTML;\n  }\n};\n\n\n/**\n * Finds the first descendant node that matches the filter function, using depth\n * first search. This function offers the most general purpose way of finding a\n * matching element.\n *\n * Prefer using `querySelector` if the matching criteria can be expressed as a\n * CSS selector, or `goog.dom.findElement` if you would filter for `nodeType ==\n * Node.ELEMENT_NODE`.\n *\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @return {Node|undefined} The found node or undefined if none is found.\n */\ngoog.dom.findNode = function(root, p) {\n  var rv = [];\n  var found = goog.dom.findNodes_(root, p, rv, true);\n  return found ? rv[0] : undefined;\n};\n\n\n/**\n * Finds all the descendant nodes that match the filter function, using depth\n * first search. This function offers the most general-purpose way\n * of finding a set of matching elements.\n *\n * Prefer using `querySelectorAll` if the matching criteria can be expressed as\n * a CSS selector, or `goog.dom.findElements` if you would filter for\n * `nodeType == Node.ELEMENT_NODE`.\n *\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @return {!Array<!Node>} The found nodes or an empty array if none are found.\n */\ngoog.dom.findNodes = function(root, p) {\n  var rv = [];\n  goog.dom.findNodes_(root, p, rv, false);\n  return rv;\n};\n\n\n/**\n * Finds the first or all the descendant nodes that match the filter function,\n * using a depth first search.\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @param {!Array<!Node>} rv The found nodes are added to this array.\n * @param {boolean} findOne If true we exit after the first found node.\n * @return {boolean} Whether the search is complete or not. True in case findOne\n *     is true and the node is found. False otherwise.\n * @private\n */\ngoog.dom.findNodes_ = function(root, p, rv, findOne) {\n  if (root != null) {\n    var child = root.firstChild;\n    while (child) {\n      if (p(child)) {\n        rv.push(child);\n        if (findOne) {\n          return true;\n        }\n      }\n      if (goog.dom.findNodes_(child, p, rv, findOne)) {\n        return true;\n      }\n      child = child.nextSibling;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Finds the first descendant element (excluding `root`) that matches the filter\n * function, using depth first search. Prefer using `querySelector` if the\n * matching criteria can be expressed as a CSS selector.\n *\n * @param {!Element | !Document} root\n * @param {function(!Element): boolean} pred Filter function.\n * @return {?Element} First matching element or null if there is none.\n */\ngoog.dom.findElement = function(root, pred) {\n  var stack = goog.dom.getChildrenReverse_(root);\n  while (stack.length > 0) {\n    var next = stack.pop();\n    if (pred(next)) return next;\n    for (var c = next.lastElementChild; c; c = c.previousElementSibling) {\n      stack.push(c);\n    }\n  }\n  return null;\n};\n\n\n/**\n * Finds all the descendant elements (excluding `root`) that match the filter\n * function, using depth first search. Prefer using `querySelectorAll` if the\n * matching criteria can be expressed as a CSS selector.\n *\n * @param {!Element | !Document} root\n * @param {function(!Element): boolean} pred Filter function.\n * @return {!Array<!Element>}\n */\ngoog.dom.findElements = function(root, pred) {\n  var result = [], stack = goog.dom.getChildrenReverse_(root);\n  while (stack.length > 0) {\n    var next = stack.pop();\n    if (pred(next)) result.push(next);\n    for (var c = next.lastElementChild; c; c = c.previousElementSibling) {\n      stack.push(c);\n    }\n  }\n  return result;\n};\n\n\n/**\n * @param {!Element | !Document} node\n * @return {!Array<!Element>} node's child elements in reverse order.\n * @private\n */\ngoog.dom.getChildrenReverse_ = function(node) {\n  // document.lastElementChild doesn't exist in IE9; fall back to\n  // documentElement.\n  if (node.nodeType == goog.dom.NodeType.DOCUMENT) {\n    return [node.documentElement];\n  } else {\n    var children = [];\n    for (var c = node.lastElementChild; c; c = c.previousElementSibling) {\n      children.push(c);\n    }\n    return children;\n  }\n};\n\n\n/**\n * Map of tags whose content to ignore when calculating text length.\n * @private {!Object<string, number>}\n * @const\n */\ngoog.dom.TAGS_TO_IGNORE_ = {\n  'SCRIPT': 1,\n  'STYLE': 1,\n  'HEAD': 1,\n  'IFRAME': 1,\n  'OBJECT': 1\n};\n\n\n/**\n * Map of tags which have predefined values with regard to whitespace.\n * @private {!Object<string, string>}\n * @const\n */\ngoog.dom.PREDEFINED_TAG_VALUES_ = {\n  'IMG': ' ',\n  'BR': '\\n'\n};\n\n\n/**\n * Returns true if the element has a tab index that allows it to receive\n * keyboard focus (tabIndex >= 0), false otherwise.  Note that some elements\n * natively support keyboard focus, even if they have no tab index.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element has a tab index that allows keyboard\n *     focus.\n */\ngoog.dom.isFocusableTabIndex = function(element) {\n  return goog.dom.hasSpecifiedTabIndex_(element) &&\n      goog.dom.isTabIndexFocusable_(element);\n};\n\n\n/**\n * Enables or disables keyboard focus support on the element via its tab index.\n * Only elements for which {@link goog.dom.isFocusableTabIndex} returns true\n * (or elements that natively support keyboard focus, like form elements) can\n * receive keyboard focus.  See http://go/tabindex for more info.\n * @param {Element} element Element whose tab index is to be changed.\n * @param {boolean} enable Whether to set or remove a tab index on the element\n *     that supports keyboard focus.\n */\ngoog.dom.setFocusableTabIndex = function(element, enable) {\n  if (enable) {\n    element.tabIndex = 0;\n  } else {\n    // Set tabIndex to -1 first, then remove it. This is a workaround for\n    // Safari (confirmed in version 4 on Windows). When removing the attribute\n    // without setting it to -1 first, the element remains keyboard focusable\n    // despite not having a tabIndex attribute anymore.\n    element.tabIndex = -1;\n    element.removeAttribute('tabIndex');  // Must be camelCase!\n  }\n};\n\n\n/**\n * Returns true if the element can be focused, i.e. it has a tab index that\n * allows it to receive keyboard focus (tabIndex >= 0), or it is an element\n * that natively supports keyboard focus.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element allows keyboard focus.\n */\ngoog.dom.isFocusable = function(element) {\n  var focusable;\n  // Some elements can have unspecified tab index and still receive focus.\n  if (goog.dom.nativelySupportsFocus_(element)) {\n    // Make sure the element is not disabled ...\n    focusable = !element.disabled &&\n        // ... and if a tab index is specified, it allows focus.\n        (!goog.dom.hasSpecifiedTabIndex_(element) ||\n         goog.dom.isTabIndexFocusable_(element));\n  } else {\n    focusable = goog.dom.isFocusableTabIndex(element);\n  }\n\n  // IE requires elements to be visible in order to focus them.\n  return focusable && goog.userAgent.IE ?\n      goog.dom.hasNonZeroBoundingRect_(/** @type {!HTMLElement} */ (element)) :\n      focusable;\n};\n\n\n/**\n * Returns true if the element has a specified tab index.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element has a specified tab index.\n * @private\n */\ngoog.dom.hasSpecifiedTabIndex_ = function(element) {\n  // IE8 and below don't support hasAttribute(), instead check whether the\n  // 'tabindex' attributeNode is specified. Otherwise check hasAttribute().\n  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('9')) {\n    var attrNode = element.getAttributeNode('tabindex');  // Must be lowercase!\n    return attrNode != null && attrNode.specified;\n  } else {\n    return element.hasAttribute('tabindex');\n  }\n};\n\n\n/**\n * Returns true if the element's tab index allows the element to be focused.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element's tab index allows focus.\n * @private\n */\ngoog.dom.isTabIndexFocusable_ = function(element) {\n  var index = /** @type {!HTMLElement} */ (element).tabIndex;\n  // NOTE: IE9 puts tabIndex in 16-bit int, e.g. -2 is 65534.\n  return typeof (index) === 'number' && index >= 0 && index < 32768;\n};\n\n\n/**\n * Returns true if the element is focusable even when tabIndex is not set.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element natively supports focus.\n * @private\n */\ngoog.dom.nativelySupportsFocus_ = function(element) {\n  return (\n      element.tagName == goog.dom.TagName.A && element.hasAttribute('href') ||\n      element.tagName == goog.dom.TagName.INPUT ||\n      element.tagName == goog.dom.TagName.TEXTAREA ||\n      element.tagName == goog.dom.TagName.SELECT ||\n      element.tagName == goog.dom.TagName.BUTTON);\n};\n\n\n/**\n * Returns true if the element has a bounding rectangle that would be visible\n * (i.e. its width and height are greater than zero).\n * @param {!HTMLElement} element Element to check.\n * @return {boolean} Whether the element has a non-zero bounding rectangle.\n * @private\n */\ngoog.dom.hasNonZeroBoundingRect_ = function(element) {\n  var rect;\n  if (!goog.isFunction(element['getBoundingClientRect']) ||\n      // In IE, getBoundingClientRect throws on detached nodes.\n      (goog.userAgent.IE && element.parentElement == null)) {\n    rect = {'height': element.offsetHeight, 'width': element.offsetWidth};\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n  return rect != null && rect.height > 0 && rect.width > 0;\n};\n\n\n/**\n * Returns the text content of the current node, without markup and invisible\n * symbols. New lines are stripped and whitespace is collapsed,\n * such that each character would be visible.\n *\n * In browsers that support it, innerText is used.  Other browsers attempt to\n * simulate it via node traversal.  Line breaks are canonicalized in IE.\n *\n * @param {Node} node The node from which we are getting content.\n * @return {string} The text content.\n */\ngoog.dom.getTextContent = function(node) {\n  var textContent;\n  // Note(arv): IE9, Opera, and Safari 3 support innerText but they include\n  // text nodes in script tags. So we revert to use a user agent test here.\n  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && node !== null &&\n      ('innerText' in node)) {\n    textContent = goog.string.canonicalizeNewlines(node.innerText);\n    // Unfortunately .innerText() returns text with &shy; symbols\n    // We need to filter it out and then remove duplicate whitespaces\n  } else {\n    var buf = [];\n    goog.dom.getTextContent_(node, buf, true);\n    textContent = buf.join('');\n  }\n\n  // Strip &shy; entities. goog.format.insertWordBreaks inserts them in Opera.\n  textContent = textContent.replace(/ \\xAD /g, ' ').replace(/\\xAD/g, '');\n  // Strip &#8203; entities. goog.format.insertWordBreaks inserts them in IE8.\n  textContent = textContent.replace(/\\u200B/g, '');\n\n  // Skip this replacement on old browsers with working innerText, which\n  // automatically turns &nbsp; into ' ' and / +/ into ' ' when reading\n  // innerText.\n  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {\n    textContent = textContent.replace(/ +/g, ' ');\n  }\n  if (textContent != ' ') {\n    textContent = textContent.replace(/^\\s*/, '');\n  }\n\n  return textContent;\n};\n\n\n/**\n * Returns the text content of the current node, without markup.\n *\n * Unlike `getTextContent` this method does not collapse whitespaces\n * or normalize lines breaks.\n *\n * @param {Node} node The node from which we are getting content.\n * @return {string} The raw text content.\n */\ngoog.dom.getRawTextContent = function(node) {\n  var buf = [];\n  goog.dom.getTextContent_(node, buf, false);\n\n  return buf.join('');\n};\n\n\n/**\n * Recursive support function for text content retrieval.\n *\n * @param {Node} node The node from which we are getting content.\n * @param {Array<string>} buf string buffer.\n * @param {boolean} normalizeWhitespace Whether to normalize whitespace.\n * @private\n */\ngoog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {\n  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {\n    // ignore certain tags\n  } else if (node.nodeType == goog.dom.NodeType.TEXT) {\n    if (normalizeWhitespace) {\n      buf.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      buf.push(node.nodeValue);\n    }\n  } else if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {\n    buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);\n  } else {\n    var child = node.firstChild;\n    while (child) {\n      goog.dom.getTextContent_(child, buf, normalizeWhitespace);\n      child = child.nextSibling;\n    }\n  }\n};\n\n\n/**\n * Returns the text length of the text contained in a node, without markup. This\n * is equivalent to the selection length if the node was selected, or the number\n * of cursor movements to traverse the node. Images & BRs take one space.  New\n * lines are ignored.\n *\n * @param {Node} node The node whose text content length is being calculated.\n * @return {number} The length of `node`'s text content.\n */\ngoog.dom.getNodeTextLength = function(node) {\n  return goog.dom.getTextContent(node).length;\n};\n\n\n/**\n * Returns the text offset of a node relative to one of its ancestors. The text\n * length is the same as the length calculated by goog.dom.getNodeTextLength.\n *\n * @param {Node} node The node whose offset is being calculated.\n * @param {Node=} opt_offsetParent The node relative to which the offset will\n *     be calculated. Defaults to the node's owner document's body.\n * @return {number} The text offset.\n */\ngoog.dom.getNodeTextOffset = function(node, opt_offsetParent) {\n  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;\n  var buf = [];\n  while (node && node != root) {\n    var cur = node;\n    while ((cur = cur.previousSibling)) {\n      buf.unshift(goog.dom.getTextContent(cur));\n    }\n    node = node.parentNode;\n  }\n  // Trim left to deal with FF cases when there might be line breaks and empty\n  // nodes at the front of the text\n  return goog.string.trimLeft(buf.join('')).replace(/ +/g, ' ').length;\n};\n\n\n/**\n * Returns the node at a given offset in a parent node.  If an object is\n * provided for the optional third parameter, the node and the remainder of the\n * offset will stored as properties of this object.\n * @param {Node} parent The parent node.\n * @param {number} offset The offset into the parent node.\n * @param {Object=} opt_result Object to be used to store the return value. The\n *     return value will be stored in the form {node: Node, remainder: number}\n *     if this object is provided.\n * @return {Node} The node at the given offset.\n */\ngoog.dom.getNodeAtOffset = function(parent, offset, opt_result) {\n  var stack = [parent], pos = 0, cur = null;\n  while (stack.length > 0 && pos < offset) {\n    cur = stack.pop();\n    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {\n      // ignore certain tags\n    } else if (cur.nodeType == goog.dom.NodeType.TEXT) {\n      var text = cur.nodeValue.replace(/(\\r\\n|\\r|\\n)/g, '').replace(/ +/g, ' ');\n      pos += text.length;\n    } else if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {\n      pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;\n    } else {\n      for (var i = cur.childNodes.length - 1; i >= 0; i--) {\n        stack.push(cur.childNodes[i]);\n      }\n    }\n  }\n  if (goog.isObject(opt_result)) {\n    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;\n    opt_result.node = cur;\n  }\n\n  return cur;\n};\n\n\n/**\n * Returns true if the object is a `NodeList`.  To qualify as a NodeList,\n * the object must have a numeric length property and an item function (which\n * has type 'string' on IE for some reason).\n * @param {Object} val Object to test.\n * @return {boolean} Whether the object is a NodeList.\n */\ngoog.dom.isNodeList = function(val) {\n  // TODO(attila): Now the isNodeList is part of goog.dom we can use\n  // goog.userAgent to make this simpler.\n  // A NodeList must have a length property of type 'number' on all platforms.\n  if (val && typeof val.length == 'number') {\n    // A NodeList is an object everywhere except Safari, where it's a function.\n    if (goog.isObject(val)) {\n      // A NodeList must have an item function (on non-IE platforms) or an item\n      // property of type 'string' (on IE).\n      return typeof val.item == 'function' || typeof val.item == 'string';\n    } else if (goog.isFunction(val)) {\n      // On Safari, a NodeList is a function with an item property that is also\n      // a function.\n      return typeof /** @type {?} */ (val.item) == 'function';\n    }\n  }\n\n  // Not a NodeList.\n  return false;\n};\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that has the passed\n * tag name and/or class name. If the passed element matches the specified\n * criteria, the element itself is returned.\n * @param {Node} element The DOM node to start with.\n * @param {?(goog.dom.TagName<T>|string)=} opt_tag The tag name to match (or\n *     null/undefined to match only based on class name).\n * @param {?string=} opt_class The class name to match (or null/undefined to\n *     match only based on tag name).\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {?R} The first ancestor that matches the passed criteria, or\n *     null if no match is found. The return type is {?Element} if opt_tag is\n *     not a member of goog.dom.TagName or a more specific type if it is (e.g.\n *     {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.getAncestorByTagNameAndClass = function(\n    element, opt_tag, opt_class, opt_maxSearchSteps) {\n  if (!opt_tag && !opt_class) {\n    return null;\n  }\n  var tagName = opt_tag ? String(opt_tag).toUpperCase() : null;\n  return /** @type {Element} */ (goog.dom.getAncestor(element, function(node) {\n    return (!tagName || node.nodeName == tagName) &&\n        (!opt_class ||\n         typeof node.className === 'string' &&\n             goog.array.contains(node.className.split(/\\s+/), opt_class));\n  }, true, opt_maxSearchSteps));\n};\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that has the passed\n * class name. If the passed element matches the specified criteria, the\n * element itself is returned.\n * @param {Node} element The DOM node to start with.\n * @param {string} className The class name to match.\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {Element} The first ancestor that matches the passed criteria, or\n *     null if none match.\n */\ngoog.dom.getAncestorByClass = function(element, className, opt_maxSearchSteps) {\n  return goog.dom.getAncestorByTagNameAndClass(\n      element, null, className, opt_maxSearchSteps);\n};\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that passes the\n * matcher function.\n * @param {Node} element The DOM node to start with.\n * @param {function(Node) : boolean} matcher A function that returns true if the\n *     passed node matches the desired criteria.\n * @param {boolean=} opt_includeNode If true, the node itself is included in\n *     the search (the first call to the matcher will pass startElement as\n *     the node to test).\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {Node} DOM node that matched the matcher, or null if there was\n *     no match.\n */\ngoog.dom.getAncestor = function(\n    element, matcher, opt_includeNode, opt_maxSearchSteps) {\n  if (element && !opt_includeNode) {\n    element = element.parentNode;\n  }\n  var steps = 0;\n  while (element &&\n         (opt_maxSearchSteps == null || steps <= opt_maxSearchSteps)) {\n    goog.asserts.assert(element.name != 'parentNode');\n    if (matcher(element)) {\n      return element;\n    }\n    element = element.parentNode;\n    steps++;\n  }\n  // Reached the root of the DOM without a match\n  return null;\n};\n\n\n/**\n * Determines the active element in the given document.\n * @param {Document} doc The document to look in.\n * @return {Element} The active element.\n */\ngoog.dom.getActiveElement = function(doc) {\n  // While in an iframe, IE9 will throw \"Unspecified error\" when accessing\n  // activeElement.\n  try {\n    var activeElement = doc && doc.activeElement;\n    // While not in an iframe, IE9-11 sometimes gives null.\n    // While in an iframe, IE11 sometimes returns an empty object.\n    return activeElement && activeElement.nodeName ? activeElement : null;\n  } catch (e) {\n    return null;\n  }\n};\n\n\n/**\n * Gives the current devicePixelRatio.\n *\n * By default, this is the value of window.devicePixelRatio (which should be\n * preferred if present).\n *\n * If window.devicePixelRatio is not present, the ratio is calculated with\n * window.matchMedia, if present. Otherwise, gives 1.0.\n *\n * Some browsers (including Chrome) consider the browser zoom level in the pixel\n * ratio, so the value may change across multiple calls.\n *\n * @return {number} The number of actual pixels per virtual pixel.\n */\ngoog.dom.getPixelRatio = function() {\n  var win = goog.dom.getWindow();\n  if (win.devicePixelRatio !== undefined) {\n    return win.devicePixelRatio;\n  } else if (win.matchMedia) {\n    // Should be for IE10 and FF6-17 (this basically clamps to lower)\n    // Note that the order of these statements is important\n    return goog.dom.matchesPixelRatio_(3) || goog.dom.matchesPixelRatio_(2) ||\n           goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(1) ||\n           .75;\n  }\n  return 1;\n};\n\n\n/**\n * Calculates a mediaQuery to check if the current device supports the\n * given actual to virtual pixel ratio.\n * @param {number} pixelRatio The ratio of actual pixels to virtual pixels.\n * @return {number} pixelRatio if applicable, otherwise 0.\n * @private\n */\ngoog.dom.matchesPixelRatio_ = function(pixelRatio) {\n  var win = goog.dom.getWindow();\n  /**\n   * Due to the 1:96 fixed ratio of CSS in to CSS px, 1dppx is equivalent to\n   * 96dpi.\n   * @const {number}\n   */\n  var dpiPerDppx = 96;\n  var query =\n      // FF16-17\n      '(min-resolution: ' + pixelRatio + 'dppx),' +\n      // FF6-15\n      '(min--moz-device-pixel-ratio: ' + pixelRatio + '),' +\n      // IE10 (this works for the two browsers above too but I don't want to\n      // trust the 1:96 fixed ratio magic)\n      '(min-resolution: ' + (pixelRatio * dpiPerDppx) + 'dpi)';\n  return win.matchMedia(query).matches ? pixelRatio : 0;\n};\n\n\n/**\n * Gets '2d' context of a canvas. Shortcut for canvas.getContext('2d') with a\n * type information.\n * @param {!HTMLCanvasElement|!OffscreenCanvas} canvas\n * @return {!CanvasRenderingContext2D}\n */\ngoog.dom.getCanvasContext2D = function(canvas) {\n  return /** @type {!CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n};\n\n\n\n/**\n * Create an instance of a DOM helper with a new document object.\n * @param {Document=} opt_document Document object to associate with this\n *     DOM helper.\n * @constructor\n */\ngoog.dom.DomHelper = function(opt_document) {\n  /**\n   * Reference to the document object to use\n   * @type {!Document}\n   * @private\n   */\n  this.document_ = opt_document || goog.global.document || document;\n};\n\n\n/**\n * Gets the dom helper object for the document where the element resides.\n * @param {Node=} opt_node If present, gets the DomHelper for this node.\n * @return {!goog.dom.DomHelper} The DomHelper.\n */\ngoog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;\n\n\n/**\n * Sets the document object.\n * @param {!Document} document Document object.\n */\ngoog.dom.DomHelper.prototype.setDocument = function(document) {\n  this.document_ = document;\n};\n\n\n/**\n * Gets the document object being used by the dom library.\n * @return {!Document} Document object.\n */\ngoog.dom.DomHelper.prototype.getDocument = function() {\n  return this.document_;\n};\n\n\n/**\n * Alias for `getElementById`. If a DOM node is passed in then we just\n * return that.\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The element with the given ID, or the node passed in.\n */\ngoog.dom.DomHelper.prototype.getElement = function(element) {\n  return goog.dom.getElementHelper_(this.document_, element);\n};\n\n\n/**\n * Gets an element by id, asserting that the element is found.\n *\n * This is used when an element is expected to exist, and should fail with\n * an assertion error if it does not (if assertions are enabled).\n *\n * @param {string} id Element ID.\n * @return {!Element} The element with the given ID, if it exists.\n */\ngoog.dom.DomHelper.prototype.getRequiredElement = function(id) {\n  return goog.dom.getRequiredElementHelper_(this.document_, id);\n};\n\n\n/**\n * Alias for `getElement`.\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The element with the given ID, or the node passed in.\n * @deprecated Use {@link goog.dom.DomHelper.prototype.getElement} instead.\n */\ngoog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;\n\n\n/**\n * Gets elements by tag name.\n * @param {!goog.dom.TagName<T>} tagName\n * @param {(!Document|!Element)=} opt_parent Parent element or document where to\n *     look for elements. Defaults to document of this DomHelper.\n * @return {!NodeList<R>} List of elements. The members of the list are\n *     {!Element} if tagName is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.getElementsByTagName =\n    function(tagName, opt_parent) {\n  var parent = opt_parent || this.document_;\n  return parent.getElementsByTagName(String(tagName));\n};\n\n\n/**\n * Looks up elements by both tag and class name, using browser native functions\n * (`querySelectorAll`, `getElementsByTagName` or\n * `getElementsByClassName`) where possible. The returned array is a live\n * NodeList or a static list depending on the code path taken.\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name or * for all\n *     tags.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(\n    opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementsByTagNameAndClass_(\n      this.document_, opt_tag, opt_class, opt_el);\n};\n\n\n/**\n * Gets the first element matching the tag and the class.\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {?R} Reference to a DOM node. The return type is {?Element} if\n *     tagName is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.getElementByTagNameAndClass = function(\n    opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementByTagNameAndClass_(\n      this.document_, opt_tag, opt_class, opt_el);\n};\n\n\n/**\n * Returns an array of all the elements with the provided className.\n * @param {string} className the name of the class to look for.\n * @param {Element|Document=} opt_el Optional element to look in.\n * @return {!IArrayLike<!Element>} The items found with the class name provided.\n */\ngoog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {\n  var doc = opt_el || this.document_;\n  return goog.dom.getElementsByClass(className, doc);\n};\n\n\n/**\n * Returns the first element we find matching the provided class name.\n * @param {string} className the name of the class to look for.\n * @param {(Element|Document)=} opt_el Optional element to look in.\n * @return {Element} The first item found with the class name provided.\n */\ngoog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {\n  var doc = opt_el || this.document_;\n  return goog.dom.getElementByClass(className, doc);\n};\n\n\n/**\n * Ensures an element with the given className exists, and then returns the\n * first element with the provided className.\n * @param {string} className the name of the class to look for.\n * @param {(!Element|!Document)=} opt_root Optional element or document to look\n *     in.\n * @return {!Element} The first item found with the class name provided.\n * @throws {goog.asserts.AssertionError} Thrown if no element is found.\n */\ngoog.dom.DomHelper.prototype.getRequiredElementByClass = function(\n    className, opt_root) {\n  var root = opt_root || this.document_;\n  return goog.dom.getRequiredElementByClass(className, root);\n};\n\n\n/**\n * Alias for `getElementsByTagNameAndClass`.\n * @deprecated Use DomHelper getElementsByTagNameAndClass.\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {Element=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is a string or more specific types if it is\n *     a member of goog.dom.TagName (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.$$ =\n    goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;\n\n\n/**\n * Sets a number of properties on a node.\n * @param {Element} element DOM node to set properties on.\n * @param {Object} properties Hash of property:value pairs.\n */\ngoog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;\n\n\n/**\n * Gets the dimensions of the viewport.\n * @param {Window=} opt_window Optional window element to test. Defaults to\n *     the window of the Dom Helper.\n * @return {!goog.math.Size} Object with values 'width' and 'height'.\n */\ngoog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {\n  // TODO(arv): This should not take an argument. That breaks the rule of a\n  // a DomHelper representing a single frame/window/document.\n  return goog.dom.getViewportSize(opt_window || this.getWindow());\n};\n\n\n/**\n * Calculates the height of the document.\n *\n * @return {number} The height of the document.\n */\ngoog.dom.DomHelper.prototype.getDocumentHeight = function() {\n  return goog.dom.getDocumentHeight_(this.getWindow());\n};\n\n\n/**\n * Typedef for use with goog.dom.createDom and goog.dom.append.\n * @typedef {Object|string|Array|NodeList}\n */\ngoog.dom.Appendable;\n\n\n/**\n * Returns a dom node with a set of attributes.  This function accepts varargs\n * for subsequent nodes to be added.  Subsequent nodes will be added to the\n * first node as childNodes.\n *\n * So:\n * <code>createDom(goog.dom.TagName.DIV, null, createDom(goog.dom.TagName.P),\n * createDom(goog.dom.TagName.P));</code> would return a div with two child\n * paragraphs\n *\n * An easy way to move all child nodes of an existing element to a new parent\n * element is:\n * <code>createDom(goog.dom.TagName.DIV, null, oldElement.childNodes);</code>\n * which will remove all child nodes from the old element and add them as\n * child nodes of the new DIV.\n *\n * @param {string|!goog.dom.TagName<T>} tagName Tag to create.\n * @param {?Object|?Array<string>|string=} opt_attributes If object, then a map\n *     of name-value pairs for attributes. If a string, then this is the\n *     className of the new element. If an array, the elements will be joined\n *     together as the className of the new element.\n * @param {...(goog.dom.Appendable|undefined)} var_args Further DOM nodes or\n *     strings for text nodes. If one of the var_args is an array or\n *     NodeList, its elements will be added as childNodes instead.\n * @return {R} Reference to a DOM node. The return type is {!Element} if tagName\n *     is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.createDom = function(\n    tagName, opt_attributes, var_args) {\n  return goog.dom.createDom_(this.document_, arguments);\n};\n\n\n/**\n * Alias for `createDom`.\n * @param {string|!goog.dom.TagName<T>} tagName Tag to create.\n * @param {?Object|?Array<string>|string=} opt_attributes If object, then a map\n *     of name-value pairs for attributes. If a string, then this is the\n *     className of the new element. If an array, the elements will be joined\n *     together as the className of the new element.\n * @param {...(goog.dom.Appendable|undefined)} var_args Further DOM nodes or\n *     strings for text nodes.  If one of the var_args is an array, its children\n *     will be added as childNodes instead.\n * @return {R} Reference to a DOM node. The return type is {!Element} if tagName\n *     is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @deprecated Use {@link goog.dom.DomHelper.prototype.createDom} instead.\n */\ngoog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;\n\n\n/**\n * Creates a new element.\n * @param {string|!goog.dom.TagName<T>} name Tag to create.\n * @return {R} The new element. The return type is {!Element} if name is\n *     a string or a more specific type if it is a member of goog.dom.TagName\n *     (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.createElement = function(name) {\n  return goog.dom.createElement_(this.document_, name);\n};\n\n\n/**\n * Creates a new text node.\n * @param {number|string} content Content.\n * @return {!Text} The new text node.\n */\ngoog.dom.DomHelper.prototype.createTextNode = function(content) {\n  return this.document_.createTextNode(String(content));\n};\n\n\n/**\n * Create a table.\n * @param {number} rows The number of rows in the table.  Must be >= 1.\n * @param {number} columns The number of columns in the table.  Must be >= 1.\n * @param {boolean=} opt_fillWithNbsp If true, fills table entries with\n *     `goog.string.Unicode.NBSP` characters.\n * @return {!HTMLElement} The created table.\n */\ngoog.dom.DomHelper.prototype.createTable = function(\n    rows, columns, opt_fillWithNbsp) {\n  return goog.dom.createTable_(\n      this.document_, rows, columns, !!opt_fillWithNbsp);\n};\n\n\n/**\n * Converts an HTML into a node or a document fragment. A single Node is used if\n * `html` only generates a single node. If `html` generates multiple\n * nodes then these are put inside a `DocumentFragment`. This is a safe\n * version of `goog.dom.DomHelper#htmlToDocumentFragment` which is now\n * deleted.\n * @param {!goog.html.SafeHtml} html The HTML markup to convert.\n * @return {!Node} The resulting node.\n */\ngoog.dom.DomHelper.prototype.safeHtmlToNode = function(html) {\n  return goog.dom.safeHtmlToNode_(this.document_, html);\n};\n\n\n/**\n * Returns true if the browser is in \"CSS1-compatible\" (standards-compliant)\n * mode, false otherwise.\n * @return {boolean} True if in CSS1-compatible mode.\n */\ngoog.dom.DomHelper.prototype.isCss1CompatMode = function() {\n  return goog.dom.isCss1CompatMode_(this.document_);\n};\n\n\n/**\n * Gets the window object associated with the document.\n * @return {!Window} The window associated with the given document.\n */\ngoog.dom.DomHelper.prototype.getWindow = function() {\n  return goog.dom.getWindow_(this.document_);\n};\n\n\n/**\n * Gets the document scroll element.\n * @return {!Element} Scrolling element.\n */\ngoog.dom.DomHelper.prototype.getDocumentScrollElement = function() {\n  return goog.dom.getDocumentScrollElement_(this.document_);\n};\n\n\n/**\n * Gets the document scroll distance as a coordinate object.\n * @return {!goog.math.Coordinate} Object with properties 'x' and 'y'.\n */\ngoog.dom.DomHelper.prototype.getDocumentScroll = function() {\n  return goog.dom.getDocumentScroll_(this.document_);\n};\n\n\n/**\n * Determines the active element in the given document.\n * @param {Document=} opt_doc The document to look in.\n * @return {Element} The active element.\n */\ngoog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {\n  return goog.dom.getActiveElement(opt_doc || this.document_);\n};\n\n\n/**\n * Appends a child to a node.\n * @param {Node} parent Parent.\n * @param {Node} child Child.\n */\ngoog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;\n\n\n/**\n * Appends a node with text or other nodes.\n * @param {!Node} parent The node to append nodes to.\n * @param {...goog.dom.Appendable} var_args The things to append to the node.\n *     If this is a Node it is appended as is.\n *     If this is a string then a text node is appended.\n *     If this is an array like object then fields 0 to length - 1 are appended.\n */\ngoog.dom.DomHelper.prototype.append = goog.dom.append;\n\n\n/**\n * Determines if the given node can contain children, intended to be used for\n * HTML generation.\n *\n * @param {Node} node The node to check.\n * @return {boolean} Whether the node can contain children.\n */\ngoog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;\n\n\n/**\n * Removes all the child nodes on a DOM node.\n * @param {Node} node Node to remove children from.\n */\ngoog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;\n\n\n/**\n * Inserts a new node before an existing reference node (i.e., as the previous\n * sibling). If the reference node has no parent, then does nothing.\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert before.\n */\ngoog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;\n\n\n/**\n * Inserts a new node after an existing reference node (i.e., as the next\n * sibling). If the reference node has no parent, then does nothing.\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert after.\n */\ngoog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;\n\n\n/**\n * Insert a child at a given index. If index is larger than the number of child\n * nodes that the parent currently has, the node is inserted as the last child\n * node.\n * @param {Element} parent The element into which to insert the child.\n * @param {Node} child The element to insert.\n * @param {number} index The index at which to insert the new child node. Must\n *     not be negative.\n */\ngoog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;\n\n\n/**\n * Removes a node from its parent.\n * @param {Node} node The node to remove.\n * @return {Node} The node removed if removed; else, null.\n */\ngoog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;\n\n\n/**\n * Replaces a node in the DOM tree. Will do nothing if `oldNode` has no\n * parent.\n * @param {Node} newNode Node to insert.\n * @param {Node} oldNode Node to replace.\n */\ngoog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;\n\n\n/**\n * Flattens an element. That is, removes it and replace it with its children.\n * @param {Element} element The element to flatten.\n * @return {Element|undefined} The original element, detached from the document\n *     tree, sans children, or undefined if the element was already not in the\n *     document.\n */\ngoog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;\n\n\n/**\n * Returns an array containing just the element children of the given element.\n * @param {Element} element The element whose element children we want.\n * @return {!(Array<!Element>|NodeList<!Element>)} An array or array-like list\n *     of just the element children of the given element.\n */\ngoog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;\n\n\n/**\n * Returns the first child node that is an element.\n * @param {Node} node The node to get the first child element of.\n * @return {Element} The first child node of `node` that is an element.\n */\ngoog.dom.DomHelper.prototype.getFirstElementChild =\n    goog.dom.getFirstElementChild;\n\n\n/**\n * Returns the last child node that is an element.\n * @param {Node} node The node to get the last child element of.\n * @return {Element} The last child node of `node` that is an element.\n */\ngoog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;\n\n\n/**\n * Returns the first next sibling that is an element.\n * @param {Node} node The node to get the next sibling element of.\n * @return {Element} The next sibling of `node` that is an element.\n */\ngoog.dom.DomHelper.prototype.getNextElementSibling =\n    goog.dom.getNextElementSibling;\n\n\n/**\n * Returns the first previous sibling that is an element.\n * @param {Node} node The node to get the previous sibling element of.\n * @return {Element} The first previous sibling of `node` that is\n *     an element.\n */\ngoog.dom.DomHelper.prototype.getPreviousElementSibling =\n    goog.dom.getPreviousElementSibling;\n\n\n/**\n * Returns the next node in source order from the given node.\n * @param {Node} node The node.\n * @return {Node} The next node in the DOM tree, or null if this was the last\n *     node.\n */\ngoog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;\n\n\n/**\n * Returns the previous node in source order from the given node.\n * @param {Node} node The node.\n * @return {Node} The previous node in the DOM tree, or null if this was the\n *     first node.\n */\ngoog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;\n\n\n/**\n * Whether the object looks like a DOM node.\n * @param {?} obj The object being tested for node likeness.\n * @return {boolean} Whether the object looks like a DOM node.\n */\ngoog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;\n\n\n/**\n * Whether the object looks like an Element.\n * @param {?} obj The object being tested for Element likeness.\n * @return {boolean} Whether the object looks like an Element.\n */\ngoog.dom.DomHelper.prototype.isElement = goog.dom.isElement;\n\n\n/**\n * Returns true if the specified value is a Window object. This includes the\n * global window for HTML pages, and iframe windows.\n * @param {?} obj Variable to test.\n * @return {boolean} Whether the variable is a window.\n */\ngoog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;\n\n\n/**\n * Returns an element's parent, if it's an Element.\n * @param {Element} element The DOM element.\n * @return {Element} The parent, or null if not an Element.\n */\ngoog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;\n\n\n/**\n * Whether a node contains another node.\n * @param {Node} parent The node that should contain the other node.\n * @param {Node} descendant The node to test presence of.\n * @return {boolean} Whether the parent node contains the descendant node.\n */\ngoog.dom.DomHelper.prototype.contains = goog.dom.contains;\n\n\n/**\n * Compares the document order of two nodes, returning 0 if they are the same\n * node, a negative number if node1 is before node2, and a positive number if\n * node2 is before node1.  Note that we compare the order the tags appear in the\n * document so in the tree <b><i>text</i></b> the B node is considered to be\n * before the I node.\n *\n * @param {Node} node1 The first node to compare.\n * @param {Node} node2 The second node to compare.\n * @return {number} 0 if the nodes are the same node, a negative number if node1\n *     is before node2, and a positive number if node2 is before node1.\n */\ngoog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;\n\n\n/**\n * Find the deepest common ancestor of the given nodes.\n * @param {...Node} var_args The nodes to find a common ancestor of.\n * @return {Node} The common ancestor of the nodes, or null if there is none.\n *     null will only be returned if two or more of the nodes are from different\n *     documents.\n */\ngoog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;\n\n\n/**\n * Returns the owner document for a node.\n * @param {Node} node The node to get the document for.\n * @return {!Document} The document owning the node.\n */\ngoog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;\n\n\n/**\n * Cross browser function for getting the document element of an iframe.\n * @param {Element} iframe Iframe element.\n * @return {!Document} The frame content document.\n */\ngoog.dom.DomHelper.prototype.getFrameContentDocument =\n    goog.dom.getFrameContentDocument;\n\n\n/**\n * Cross browser function for getting the window of a frame or iframe.\n * @param {Element} frame Frame element.\n * @return {Window} The window associated with the given frame.\n */\ngoog.dom.DomHelper.prototype.getFrameContentWindow =\n    goog.dom.getFrameContentWindow;\n\n\n/**\n * Sets the text content of a node, with cross-browser support.\n * @param {Node} node The node to change the text content of.\n * @param {string|number} text The value that should replace the node's content.\n */\ngoog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;\n\n\n/**\n * Gets the outerHTML of a node, which islike innerHTML, except that it\n * actually contains the HTML of the node itself.\n * @param {Element} element The element to get the HTML of.\n * @return {string} The outerHTML of the given element.\n */\ngoog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;\n\n\n/**\n * Finds the first descendant node that matches the filter function. This does\n * a depth first search.\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @return {Node|undefined} The found node or undefined if none is found.\n */\ngoog.dom.DomHelper.prototype.findNode = goog.dom.findNode;\n\n\n/**\n * Finds all the descendant nodes that matches the filter function. This does a\n * depth first search.\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @return {Array<Node>} The found nodes or an empty array if none are found.\n */\ngoog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;\n\n\n/**\n * Returns true if the element has a tab index that allows it to receive\n * keyboard focus (tabIndex >= 0), false otherwise.  Note that some elements\n * natively support keyboard focus, even if they have no tab index.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element has a tab index that allows keyboard\n *     focus.\n */\ngoog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;\n\n\n/**\n * Enables or disables keyboard focus support on the element via its tab index.\n * Only elements for which {@link goog.dom.isFocusableTabIndex} returns true\n * (or elements that natively support keyboard focus, like form elements) can\n * receive keyboard focus.  See http://go/tabindex for more info.\n * @param {Element} element Element whose tab index is to be changed.\n * @param {boolean} enable Whether to set or remove a tab index on the element\n *     that supports keyboard focus.\n */\ngoog.dom.DomHelper.prototype.setFocusableTabIndex =\n    goog.dom.setFocusableTabIndex;\n\n\n/**\n * Returns true if the element can be focused, i.e. it has a tab index that\n * allows it to receive keyboard focus (tabIndex >= 0), or it is an element\n * that natively supports keyboard focus.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element allows keyboard focus.\n */\ngoog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;\n\n\n/**\n * Returns the text contents of the current node, without markup. New lines are\n * stripped and whitespace is collapsed, such that each character would be\n * visible.\n *\n * In browsers that support it, innerText is used.  Other browsers attempt to\n * simulate it via node traversal.  Line breaks are canonicalized in IE.\n *\n * @param {Node} node The node from which we are getting content.\n * @return {string} The text content.\n */\ngoog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;\n\n\n/**\n * Returns the text length of the text contained in a node, without markup. This\n * is equivalent to the selection length if the node was selected, or the number\n * of cursor movements to traverse the node. Images & BRs take one space.  New\n * lines are ignored.\n *\n * @param {Node} node The node whose text content length is being calculated.\n * @return {number} The length of `node`'s text content.\n */\ngoog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;\n\n\n/**\n * Returns the text offset of a node relative to one of its ancestors. The text\n * length is the same as the length calculated by\n * `goog.dom.getNodeTextLength`.\n *\n * @param {Node} node The node whose offset is being calculated.\n * @param {Node=} opt_offsetParent Defaults to the node's owner document's body.\n * @return {number} The text offset.\n */\ngoog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;\n\n\n/**\n * Returns the node at a given offset in a parent node.  If an object is\n * provided for the optional third parameter, the node and the remainder of the\n * offset will stored as properties of this object.\n * @param {Node} parent The parent node.\n * @param {number} offset The offset into the parent node.\n * @param {Object=} opt_result Object to be used to store the return value. The\n *     return value will be stored in the form {node: Node, remainder: number}\n *     if this object is provided.\n * @return {Node} The node at the given offset.\n */\ngoog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;\n\n\n/**\n * Returns true if the object is a `NodeList`.  To qualify as a NodeList,\n * the object must have a numeric length property and an item function (which\n * has type 'string' on IE for some reason).\n * @param {Object} val Object to test.\n * @return {boolean} Whether the object is a NodeList.\n */\ngoog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that has the passed\n * tag name and/or class name. If the passed element matches the specified\n * criteria, the element itself is returned.\n * @param {Node} element The DOM node to start with.\n * @param {?(goog.dom.TagName<T>|string)=} opt_tag The tag name to match (or\n *     null/undefined to match only based on class name).\n * @param {?string=} opt_class The class name to match (or null/undefined to\n *     match only based on tag name).\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {?R} The first ancestor that matches the passed criteria, or\n *     null if no match is found. The return type is {?Element} if opt_tag is\n *     not a member of goog.dom.TagName or a more specific type if it is (e.g.\n *     {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.getAncestorByTagNameAndClass =\n    goog.dom.getAncestorByTagNameAndClass;\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that has the passed\n * class name. If the passed element matches the specified criteria, the\n * element itself is returned.\n * @param {Node} element The DOM node to start with.\n * @param {string} class The class name to match.\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {Element} The first ancestor that matches the passed criteria, or\n *     null if none match.\n */\ngoog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that passes the\n * matcher function.\n * @param {Node} element The DOM node to start with.\n * @param {function(Node) : boolean} matcher A function that returns true if the\n *     passed node matches the desired criteria.\n * @param {boolean=} opt_includeNode If true, the node itself is included in\n *     the search (the first call to the matcher will pass startElement as\n *     the node to test).\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {Node} DOM node that matched the matcher, or null if there was\n *     no match.\n */\ngoog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;\n\n\n/**\n * Gets '2d' context of a canvas. Shortcut for canvas.getContext('2d') with a\n * type information.\n * @param {!HTMLCanvasElement} canvas\n * @return {!CanvasRenderingContext2D}\n */\ngoog.dom.DomHelper.prototype.getCanvasContext2D = goog.dom.getCanvasContext2D;\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview Node utilities.\n * @author moz@google.com (Michael Zhou)\n */\n\ngoog.provide('wgxpath.Node');\n\ngoog.require('goog.array');\ngoog.require('goog.dom.NodeType');\ngoog.require('goog.userAgent');\ngoog.require('wgxpath.IEAttrWrapper');\ngoog.require('wgxpath.userAgent');\n\n\n/** @typedef {!(Node|wgxpath.IEAttrWrapper)} */\nwgxpath.Node = {};\n\n\n/**\n * Returns whether two nodes are equal.\n *\n * @param {wgxpath.Node} a The first node.\n * @param {wgxpath.Node} b The second node.\n * @return {boolean} Whether the nodes are equal.\n */\nwgxpath.Node.equal = function(a, b) {\n  return (a == b) || (a instanceof wgxpath.IEAttrWrapper &&\n      b instanceof wgxpath.IEAttrWrapper && a.getNode() ==\n      b.getNode());\n};\n\n\n/**\n * Returns the string-value of the required type from a node.\n *\n * @param {!wgxpath.Node} node The node to get value from.\n * @return {string} The value required.\n */\nwgxpath.Node.getValueAsString = function(node) {\n  var t = null, type = node.nodeType;\n  // Old IE title problem.\n  var needTitleFix = function(node) {\n    return wgxpath.userAgent.IE_DOC_PRE_9 &&\n        node.nodeName.toLowerCase() == 'title';\n  };\n  // goog.dom.getTextContent doesn't seem to work\n  if (type == goog.dom.NodeType.ELEMENT) {\n    t = node.textContent;\n    t = (t == undefined || t == null) ? node.innerText : t;\n    t = (t == undefined || t == null) ? '' : t;\n  }\n  if (typeof t != 'string') {\n    if (needTitleFix(node) && type == goog.dom.NodeType.ELEMENT) {\n      t = node.text;\n    } else if (type == goog.dom.NodeType.DOCUMENT ||\n        type == goog.dom.NodeType.ELEMENT) {\n      node = (type == goog.dom.NodeType.DOCUMENT) ?\n          node.documentElement : node.firstChild;\n      var i = 0, stack = [];\n      for (t = ''; node;) {\n        do {\n          if (node.nodeType != goog.dom.NodeType.ELEMENT) {\n            t += node.nodeValue;\n          }\n          if (needTitleFix(node)) {\n            t += node.text;\n          }\n          stack[i++] = node; // push\n        } while (node = node.firstChild);\n        while (i && !(node = stack[--i].nextSibling)) {}\n      }\n    } else {\n      t = node.nodeValue;\n    }\n  }\n  return '' + t;\n};\n\n\n/**\n * Returns the string-value of the required type from a node, casted to number.\n *\n * @param {!wgxpath.Node} node The node to get value from.\n * @return {number} The value required.\n */\nwgxpath.Node.getValueAsNumber = function(node) {\n  return +wgxpath.Node.getValueAsString(node);\n};\n\n\n/**\n * Returns the string-value of the required type from a node, casted to boolean.\n *\n * @param {!wgxpath.Node} node The node to get value from.\n * @return {boolean} The value required.\n */\nwgxpath.Node.getValueAsBool = function(node) {\n  return !!wgxpath.Node.getValueAsString(node);\n};\n\n\n/**\n * Returns if the attribute matches the given value.\n *\n * @param {!wgxpath.Node} node The node to get value from.\n * @param {?string} name The attribute name to match, if any.\n * @param {?string} value The attribute value to match, if any.\n * @return {boolean} Whether the node matches the attribute, if any.\n */\nwgxpath.Node.attrMatches = function(node, name, value) {\n  // No attribute.\n  if (goog.isNull(name)) {\n    return true;\n  }\n  // TODO: If possible, figure out why this throws an exception in some\n  // cases on IE < 9.\n  try {\n    if (!node.getAttribute) {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  if (wgxpath.userAgent.IE_DOC_PRE_8 && name == 'class') {\n    name = 'className';\n  }\n  return value == null ? !!node.getAttribute(name) :\n      (node.getAttribute(name, 2) == value);\n};\n\n\n/**\n * Returns the descendants of a node.\n *\n * @param {!wgxpath.NodeTest} test A NodeTest for matching nodes.\n * @param {!wgxpath.Node} node The node to get descendants from.\n * @param {?string=} opt_attrName The attribute name to match, if any.\n * @param {?string=} opt_attrValue The attribute value to match, if any.\n * @param {!wgxpath.NodeSet=} opt_nodeset The node set to add descendants to.\n * @return {!wgxpath.NodeSet} The nodeset with descendants.\n * @suppress {missingRequire} There's a circular dependency between this file\n *     and nodeset.js.\n */\nwgxpath.Node.getDescendantNodes = function(test, node, opt_attrName,\n    opt_attrValue, opt_nodeset) {\n  var nodeset = opt_nodeset || new wgxpath.NodeSet();\n  var func = wgxpath.userAgent.IE_DOC_PRE_9 ?\n      wgxpath.Node.getDescendantNodesIEPre9_ :\n      wgxpath.Node.getDescendantNodesGeneric_;\n  var attrName = goog.isString(opt_attrName) ? opt_attrName : null;\n  var attrValue = goog.isString(opt_attrValue) ? opt_attrValue : null;\n  return func.call(null, test, node, attrName, attrValue, nodeset);\n};\n\n\n/**\n * Returns the descendants of a node for IE.\n *\n * @private\n * @param {!wgxpath.NodeTest} test A NodeTest for matching nodes.\n * @param {!wgxpath.Node} node The node to get descendants from.\n * @param {?string} attrName The attribute name to match, if any.\n * @param {?string} attrValue The attribute value to match, if any.\n * @param {!wgxpath.NodeSet} nodeset The node set to add descendants to.\n * @return {!wgxpath.NodeSet} The nodeset with descendants.\n */\nwgxpath.Node.getDescendantNodesIEPre9_ = function(test, node, attrName,\n    attrValue, nodeset) {\n  if (wgxpath.Node.doesNeedSpecialHandlingIEPre9_(test, attrName)) {\n    var descendants = node.all;\n    if (!descendants) {\n      return nodeset;\n    }\n    var name = wgxpath.Node.getNameFromTestIEPre9_(test);\n    // all.tags not working.\n    if (name != '*') {\n      descendants = node.getElementsByTagName(name);\n      if (!descendants) {\n        return nodeset;\n      }\n    }\n    if (attrName) {\n      /**\n       * The length property of the \"all\" collection is overwritten\n       * if there exists an element with id=\"length\", therefore we\n       * have to iterate without knowing the length.\n       */\n      var result = [];\n      var i = 0;\n      while (node = descendants[i++]) {\n        if (wgxpath.Node.attrMatches(node, attrName, attrValue)) {\n          result.push(node);\n        }\n      }\n      descendants = result;\n    }\n    var i = 0;\n    while (node = descendants[i++]) {\n      if (name != '*' || node.tagName != '!') {\n        nodeset.add(node);\n      }\n    }\n    return nodeset;\n  }\n  wgxpath.Node.doRecursiveAttrMatch_(test, node, attrName,\n      attrValue, nodeset);\n  return nodeset;\n};\n\n\n/**\n * Returns the descendants of a node for browsers other than IE.\n *\n * @private\n * @param {!wgxpath.NodeTest} test A NodeTest for matching nodes.\n * @param {!wgxpath.Node} node The node to get descendants from.\n * @param {?string} attrName The attribute name to match, if any.\n * @param {?string} attrValue The attribute value to match, if any.\n * @param {!wgxpath.NodeSet} nodeset The node set to add descendants to.\n * @return {!wgxpath.NodeSet} The nodeset with descendants.\n */\nwgxpath.Node.getDescendantNodesGeneric_ = function(test, node,\n    attrName, attrValue, nodeset) {\n  if (node.getElementsByName && attrValue && attrName == 'name' &&\n      !goog.userAgent.IE) {\n    var nodes = node.getElementsByName(attrValue);\n    goog.array.forEach(nodes, function(node) {\n      if (test.matches(node)) {\n        nodeset.add(node);\n      }\n    });\n  } else if (node.getElementsByClassName && attrValue && attrName == 'class') {\n    var nodes = node.getElementsByClassName(attrValue);\n    goog.array.forEach(nodes, function(node) {\n      if (node.className == attrValue && test.matches(node)) {\n        nodeset.add(node);\n      }\n    });\n  } else if (test instanceof wgxpath.KindTest) {\n    wgxpath.Node.doRecursiveAttrMatch_(test, node, attrName,\n        attrValue, nodeset);\n  } else if (node.getElementsByTagName) {\n    var nodes = node.getElementsByTagName(test.getName());\n    goog.array.forEach(nodes, function(node) {\n      if (wgxpath.Node.attrMatches(node, attrName, attrValue)) {\n        nodeset.add(node);\n      }\n    });\n  }\n  return nodeset;\n};\n\n\n/**\n * Returns the child nodes of a node.\n *\n * @param {!wgxpath.NodeTest} test A NodeTest for matching nodes.\n * @param {!wgxpath.Node} node The node to get child nodes from.\n * @param {?string=} opt_attrName The attribute name to match, if any.\n * @param {?string=} opt_attrValue The attribute value to match, if any.\n * @param {!wgxpath.NodeSet=} opt_nodeset The node set to add child nodes to.\n * @return {!wgxpath.NodeSet} The nodeset with child nodes.\n * @suppress {missingRequire} There's a circular dependency between this file\n *     and nodeset.js.\n */\nwgxpath.Node.getChildNodes = function(test, node,\n    opt_attrName, opt_attrValue, opt_nodeset) {\n  var nodeset = opt_nodeset || new wgxpath.NodeSet();\n  var func = wgxpath.userAgent.IE_DOC_PRE_9 ?\n      wgxpath.Node.getChildNodesIEPre9_ : wgxpath.Node.getChildNodesGeneric_;\n  var attrName = goog.isString(opt_attrName) ? opt_attrName : null;\n  var attrValue = goog.isString(opt_attrValue) ? opt_attrValue : null;\n  return func.call(null, test, node, attrName, attrValue, nodeset);\n};\n\n\n/**\n * Returns the child nodes of a node for IE browsers.\n *\n * @private\n * @param {!wgxpath.NodeTest} test A NodeTest for matching nodes.\n * @param {!wgxpath.Node} node The node to get child nodes from.\n * @param {?string} attrName The attribute name to match, if any.\n * @param {?string} attrValue The attribute value to match, if any.\n * @param {!wgxpath.NodeSet} nodeset The node set to add child nodes to.\n * @return {!wgxpath.NodeSet} The nodeset with child nodes.\n */\nwgxpath.Node.getChildNodesIEPre9_ = function(test, node,\n    attrName, attrValue, nodeset) {\n  var children;\n  if (wgxpath.Node.doesNeedSpecialHandlingIEPre9_(test, attrName) &&\n      (children = node.childNodes)) { // node.children seems buggy.\n    var name = wgxpath.Node.getNameFromTestIEPre9_(test);\n    if (name != '*') {\n      //children = children.tags(name); // children.tags seems buggy.\n      children = goog.array.filter(children, function(child) {\n        return child.tagName && child.tagName.toLowerCase() == name;\n      });\n      if (!children) {\n        return nodeset;\n      }\n    }\n    if (attrName) {\n      // TODO: See if an optimization is possible.\n      children = goog.array.filter(children, function(n) {\n        return wgxpath.Node.attrMatches(n, attrName, attrValue);\n      });\n    }\n    goog.array.forEach(children, function(node) {\n      if (name != '*' || node.tagName != '!' &&\n          !(name == '*' && node.nodeType != goog.dom.NodeType.ELEMENT)) {\n        nodeset.add(node);\n      }\n    });\n    return nodeset;\n  }\n  return wgxpath.Node.getChildNodesGeneric_(test, node, attrName,\n      attrValue, nodeset);\n};\n\n\n/**\n * Returns the child nodes of a node genericly.\n *\n * @private\n * @param {!wgxpath.NodeTest} test A NodeTest for matching nodes.\n * @param {!wgxpath.Node} node The node to get child nodes from.\n * @param {?string} attrName The attribute name to match, if any.\n * @param {?string} attrValue The attribute value to match, if any.\n * @param {!wgxpath.NodeSet} nodeset The node set to add child nodes to.\n * @return {!wgxpath.NodeSet} The nodeset with child nodes.\n */\nwgxpath.Node.getChildNodesGeneric_ = function(test, node, attrName,\n    attrValue, nodeset) {\n  for (var current = node.firstChild; current; current = current.nextSibling) {\n    if (wgxpath.Node.attrMatches(current, attrName, attrValue)) {\n      if (test.matches(current)) {\n        nodeset.add(current);\n      }\n    }\n  }\n  return nodeset;\n};\n\n\n/**\n * Returns whether a getting descendants/children call\n * needs special handling on IE browsers.\n *\n * @private\n * @param {!wgxpath.NodeTest} test A NodeTest for matching nodes.\n * @param {!wgxpath.Node} node The root node to start the recursive call on.\n * @param {?string} attrName The attribute name to match, if any.\n * @param {?string} attrValue The attribute value to match, if any.\n * @param {!wgxpath.NodeSet} nodeset The NodeSet to add nodes to.\n */\nwgxpath.Node.doRecursiveAttrMatch_ = function(test, node,\n    attrName, attrValue, nodeset) {\n  for (var n = node.firstChild; n; n = n.nextSibling) {\n    if (wgxpath.Node.attrMatches(n, attrName, attrValue) &&\n        test.matches(n)) {\n      nodeset.add(n);\n    }\n    wgxpath.Node.doRecursiveAttrMatch_(test, n, attrName,\n        attrValue, nodeset);\n  }\n};\n\n\n/**\n * Returns whether a getting descendants/children call\n * needs special handling on IE browsers.\n *\n * @private\n * @param {!wgxpath.NodeTest} test A NodeTest for matching nodes.\n * @param {?string} attrName The attribute name to match, if any.\n * @return {boolean} Whether the call needs special handling.\n */\nwgxpath.Node.doesNeedSpecialHandlingIEPre9_ = function(test, attrName) {\n  return test instanceof wgxpath.NameTest ||\n      test.getType() == goog.dom.NodeType.COMMENT ||\n      (!!attrName && goog.isNull(test.getType()));\n};\n\n\n/**\n * Returns a fixed name of a NodeTest for IE browsers.\n *\n * @private\n * @param {!wgxpath.NodeTest} test A NodeTest.\n * @return {string} The name of the NodeTest.\n */\nwgxpath.Node.getNameFromTestIEPre9_ = function(test) {\n  if (test instanceof wgxpath.KindTest) {\n    if (test.getType() == goog.dom.NodeType.COMMENT) {\n      return '!';\n    } else if (goog.isNull(test.getType())) {\n      return '*';\n    }\n  }\n  return test.getName();\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview A class implementing the xpath 1.0 subset of the\n *               KindTest construct.\n * @author moz@google.com (Michael Zhou)\n */\n\ngoog.provide('wgxpath.KindTest');\n\ngoog.require('goog.dom.NodeType');\ngoog.require('wgxpath.NodeTest');\n\n\n\n/**\n * Constructs a subset of KindTest based on the xpath grammar:\n * http://www.w3.org/TR/xpath20/#prod-xpath-KindTest\n *\n * @param {string} typeName Type name to be tested.\n * @param {wgxpath.Literal=} opt_literal Optional literal for\n *        processing-instruction nodes.\n * @constructor\n * @implements {wgxpath.NodeTest}\n */\nwgxpath.KindTest = function(typeName, opt_literal) {\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.typeName_ = typeName;\n\n  /**\n   * @type {wgxpath.Literal}\n   * @private\n   */\n  this.literal_ = goog.isDef(opt_literal) ? opt_literal : null;\n\n  /**\n   * @type {?goog.dom.NodeType}\n   * @private\n   */\n  this.type_ = null;\n  switch (typeName) {\n    case 'comment':\n      this.type_ = goog.dom.NodeType.COMMENT;\n      break;\n    case 'text':\n      this.type_ = goog.dom.NodeType.TEXT;\n      break;\n    case 'processing-instruction':\n      this.type_ = goog.dom.NodeType.PROCESSING_INSTRUCTION;\n      break;\n    case 'node':\n      break;\n    default:\n      throw Error('Unexpected argument');\n  }\n};\n\n\n/**\n * Checks if a type name is a valid KindTest parameter.\n *\n * @param {string} typeName The type name to be checked.\n * @return {boolean} Whether the type name is legal.\n */\nwgxpath.KindTest.isValidType = function(typeName) {\n  return typeName == 'comment' || typeName == 'text' ||\n      typeName == 'processing-instruction' || typeName == 'node';\n};\n\n\n/**\n * @override\n */\nwgxpath.KindTest.prototype.matches = function(node) {\n  return goog.isNull(this.type_) || this.type_ == node.nodeType;\n};\n\n\n/**\n * Returns the type of the node.\n *\n * @return {?number} The type of the node, or null if any type.\n */\nwgxpath.KindTest.prototype.getType = function() {\n  return this.type_;\n};\n\n\n/**\n * @override\n */\nwgxpath.KindTest.prototype.getName = function() {\n  return this.typeName_;\n};\n\n\n/**\n * @override\n */\nwgxpath.KindTest.prototype.toString = function() {\n  var text = 'Kind Test: ' + this.typeName_;\n  if (!goog.isNull(this.literal_)) {\n    text += wgxpath.Expr.indent(this.literal_);\n  }\n  return text;\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview Context information about nodes in their nodeset.\n * @author evanrthomas@google.com (Evan Thomas)\n */\n\ngoog.provide('wgxpath.NodeSet');\n\ngoog.require('goog.dom');\ngoog.require('wgxpath.Node');\n\n\n\n/**\n * A set of nodes sorted by their prefix order in the document.\n *\n * @constructor\n */\nwgxpath.NodeSet = function() {\n  // In violation of standard Closure practice, we initialize properties to\n  // immutable constants in the constructor instead of on the prototype,\n  // because we have empirically measured better performance by doing so.\n\n  /**\n   * A pointer to the first node in the linked list.\n   *\n   * @private\n   * @type {wgxpath.NodeSet.Entry_}\n   */\n  this.first_ = null;\n\n  /**\n   * A pointer to the last node in the linked list.\n   *\n   * @private\n   * @type {wgxpath.NodeSet.Entry_}\n   */\n  this.last_ = null;\n\n  /**\n   * Length of the linked list.\n   *\n   * @private\n   * @type {number}\n   */\n  this.length_ = 0;\n};\n\n\n\n/**\n * A entry for a node in a linked list\n *\n * @param {!wgxpath.Node} node The node to be added.\n * @constructor\n * @private\n */\nwgxpath.NodeSet.Entry_ = function(node) {\n  // In violation of standard Closure practice, we initialize properties to\n  // immutable constants in the constructor instead of on the prototype,\n  // because we have empirically measured better performance by doing so.\n\n  /**\n   * @type {!wgxpath.Node}\n   */\n  this.node = node;\n\n  /**\n   * @type {wgxpath.NodeSet.Entry_}\n   */\n  this.prev = null;\n\n  /**\n   * @type {wgxpath.NodeSet.Entry_}\n   */\n  this.next = null;\n};\n\n\n/**\n * Merges two nodesets, removing duplicates. This function may modify both\n * nodesets, and will return a reference to one of the two.\n *\n * <p> Note: We assume that the two nodesets are already sorted in DOM order.\n *\n * @param {!wgxpath.NodeSet} a The first nodeset.\n * @param {!wgxpath.NodeSet} b The second nodeset.\n * @return {!wgxpath.NodeSet} The merged nodeset.\n */\nwgxpath.NodeSet.merge = function(a, b) {\n  if (!a.first_) {\n    return b;\n  } else if (!b.first_) {\n    return a;\n  }\n  var aCurr = a.first_;\n  var bCurr = b.first_;\n  var merged = a, tail = null, next = null, length = 0;\n  while (aCurr && bCurr) {\n    if (wgxpath.Node.equal(aCurr.node, bCurr.node)) {\n      next = aCurr;\n      aCurr = aCurr.next;\n      bCurr = bCurr.next;\n    } else {\n      var compareResult = goog.dom.compareNodeOrder(\n          /** @type {!Node} */ (aCurr.node),\n          /** @type {!Node} */ (bCurr.node));\n      if (compareResult > 0) {\n        next = bCurr;\n        bCurr = bCurr.next;\n      } else {\n        next = aCurr;\n        aCurr = aCurr.next;\n      }\n    }\n    next.prev = tail;\n    if (tail) {\n      tail.next = next;\n    } else {\n      merged.first_ = next;\n    }\n    tail = next;\n    length++;\n  }\n  next = aCurr || bCurr;\n  while (next) {\n    next.prev = tail;\n    tail.next = next;\n    tail = next;\n    length++;\n    next = next.next;\n  }\n  merged.last_ = tail;\n  merged.length_ = length;\n  return merged;\n};\n\n\n/**\n * Prepends a node to this nodeset.\n *\n * @param {!wgxpath.Node} node The node to be added.\n */\nwgxpath.NodeSet.prototype.unshift = function(node) {\n  var entry = new wgxpath.NodeSet.Entry_(node);\n  entry.next = this.first_;\n  if (!this.last_) {\n    this.first_ = this.last_ = entry;\n  } else {\n    this.first_.prev = entry;\n  }\n  this.first_ = entry;\n  this.length_++;\n};\n\n\n/**\n * Adds a node to this nodeset.\n *\n * @param {!wgxpath.Node} node The node to be added.\n */\nwgxpath.NodeSet.prototype.add = function(node) {\n  var entry = new wgxpath.NodeSet.Entry_(node);\n  entry.prev = this.last_;\n  if (!this.first_) {\n    this.first_ = this.last_ = entry;\n  } else {\n    this.last_.next = entry;\n  }\n  this.last_ = entry;\n  this.length_++;\n};\n\n\n/**\n * Returns the first node of the nodeset.\n *\n * @return {?wgxpath.Node} The first node of the nodeset\n                                     if the nodeset is non-empty;\n *     otherwise null.\n */\nwgxpath.NodeSet.prototype.getFirst = function() {\n  var first = this.first_;\n  if (first) {\n    return first.node;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Return the length of this nodeset.\n *\n * @return {number} The length of the nodeset.\n */\nwgxpath.NodeSet.prototype.getLength = function() {\n  return this.length_;\n};\n\n\n/**\n * Returns the string representation of this nodeset.\n *\n * @return {string} The string representation of this nodeset.\n */\nwgxpath.NodeSet.prototype.string = function() {\n  var node = this.getFirst();\n  return node ? wgxpath.Node.getValueAsString(node) : '';\n};\n\n\n/**\n * Returns the number representation of this nodeset.\n *\n * @return {number} The number representation of this nodeset.\n */\nwgxpath.NodeSet.prototype.number = function() {\n  return +this.string();\n};\n\n\n/**\n * Returns an iterator over this nodeset. Once this iterator is made, DO NOT\n *     add to this nodeset until the iterator is done.\n *\n * @param {boolean=} opt_reverse Whether to iterate right to left or vice versa.\n * @return {!wgxpath.NodeSet.Iterator} An iterator over the nodes.\n */\nwgxpath.NodeSet.prototype.iterator = function(opt_reverse) {\n  return new wgxpath.NodeSet.Iterator(this, !!opt_reverse);\n};\n\n\n\n/**\n * An iterator over the nodes of this nodeset.\n *\n * @param {!wgxpath.NodeSet} nodeset The nodeset to be iterated over.\n * @param {boolean} reverse Whether to iterate in ascending or descending\n *     order.\n * @constructor\n */\nwgxpath.NodeSet.Iterator = function(nodeset, reverse) {\n  // In violation of standard Closure practice, we initialize properties to\n  // immutable constants in the constructor instead of on the prototype,\n  // because we have empirically measured better performance by doing so.\n\n  /**\n   * @type {!wgxpath.NodeSet}\n   * @private\n   */\n  this.nodeset_ = nodeset;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.reverse_ = reverse;\n\n  /**\n   * @type {wgxpath.NodeSet.Entry_}\n   * @private\n   */\n  this.current_ = reverse ? nodeset.last_ : nodeset.first_;\n\n  /**\n   * @type {wgxpath.NodeSet.Entry_}\n   * @private\n   */\n  this.lastReturned_ = null;\n};\n\n\n/**\n * Returns the next value of the iteration or null if passes the end.\n *\n * @return {?wgxpath.Node} The next node from this iterator.\n */\nwgxpath.NodeSet.Iterator.prototype.next = function() {\n  var current = this.current_;\n  if (current == null) {\n    return null;\n  } else {\n    var lastReturned = this.lastReturned_ = current;\n    if (this.reverse_) {\n      this.current_ = current.prev;\n    } else {\n      this.current_ = current.next;\n    }\n    return lastReturned.node;\n  }\n};\n\n\n/**\n * Deletes the last node that was returned from this iterator.\n */\nwgxpath.NodeSet.Iterator.prototype.remove = function() {\n  var nodeset = this.nodeset_;\n  var entry = this.lastReturned_;\n  if (!entry) {\n    throw Error('Next must be called at least once before remove.');\n  }\n  var prev = entry.prev;\n  var next = entry.next;\n\n  // Modify the pointers of prev and next\n  if (prev) {\n    prev.next = next;\n  } else {\n    // If there was no prev node entry must've been first_, so update first_.\n    nodeset.first_ = next;\n  }\n  if (next) {\n    next.prev = prev;\n  } else {\n    // If there was no prev node entry must've been last_, so update last_.\n    nodeset.last_ = prev;\n  }\n  nodeset.length_--;\n  this.lastReturned_ = null;\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview An abstract class representing basic expressions.\n * @author moz@google.com (Michael Zhou)\n */\n\ngoog.provide('wgxpath.Expr');\n\ngoog.require('wgxpath.NodeSet');\n\n\n\n/**\n * Abstract constructor for an XPath expression.\n *\n * @param {!wgxpath.DataType} dataType The data type that the expression\n *                                    will be evaluated into.\n * @constructor\n */\nwgxpath.Expr = function(dataType) {\n\n  /**\n   * @type {!wgxpath.DataType}\n   * @private\n   */\n  this.dataType_ = dataType;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.needContextPosition_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.needContextNode_ = false;\n\n  /**\n   * @type {?{name: string, valueExpr: wgxpath.Expr}}\n   * @private\n   */\n  this.quickAttr_ = null;\n};\n\n\n/**\n * Indentation method for pretty printing.\n *\n * @param {*} obj The object to return a string representation for.\n * @return {string} The string prepended with newline and two spaces.\n */\nwgxpath.Expr.indent = function(obj) {\n  return '\\n  ' + obj.toString().split('\\n').join('\\n  ');\n};\n\n\n/**\n * Evaluates the expression.\n *\n * @param {!wgxpath.Context} ctx The context to evaluate the expression in.\n * @return {!(string|boolean|number|wgxpath.NodeSet)} The evaluation result.\n */\nwgxpath.Expr.prototype.evaluate = goog.abstractMethod;\n\n\n/**\n * @override\n */\nwgxpath.Expr.prototype.toString = goog.abstractMethod;\n\n\n/**\n * Returns the data type of the expression.\n *\n * @return {!wgxpath.DataType} The data type that the expression\n *                            will be evaluated into.\n */\nwgxpath.Expr.prototype.getDataType = function() {\n  return this.dataType_;\n};\n\n\n/**\n * Returns whether the expression needs context position to be evaluated.\n *\n * @return {boolean} Whether context position is needed.\n */\nwgxpath.Expr.prototype.doesNeedContextPosition = function() {\n  return this.needContextPosition_;\n};\n\n\n/**\n * Sets whether the expression needs context position to be evaluated.\n *\n * @param {boolean} flag Whether context position is needed.\n */\nwgxpath.Expr.prototype.setNeedContextPosition = function(flag) {\n  this.needContextPosition_ = flag;\n};\n\n\n/**\n * Returns whether the expression needs context node to be evaluated.\n *\n * @return {boolean} Whether context node is needed.\n */\nwgxpath.Expr.prototype.doesNeedContextNode = function() {\n  return this.needContextNode_;\n};\n\n\n/**\n * Sets whether the expression needs context node to be evaluated.\n *\n * @param {boolean} flag Whether context node is needed.\n */\nwgxpath.Expr.prototype.setNeedContextNode = function(flag) {\n  this.needContextNode_ = flag;\n};\n\n\n/**\n * Returns the quick attribute information, if exists.\n *\n * @return {?{name: string, valueExpr: wgxpath.Expr}} The attribute\n *         information.\n */\nwgxpath.Expr.prototype.getQuickAttr = function() {\n  return this.quickAttr_;\n};\n\n\n/**\n * Sets up the quick attribute info.\n *\n * @param {?{name: string, valueExpr: wgxpath.Expr}} attrInfo The attribute\n *        information.\n */\nwgxpath.Expr.prototype.setQuickAttr = function(attrInfo) {\n  this.quickAttr_ = attrInfo;\n};\n\n\n/**\n * Evaluate and interpret the result as a number.\n *\n * @param {!wgxpath.Context} ctx The context to evaluate the expression in.\n * @return {number} The evaluated number value.\n */\nwgxpath.Expr.prototype.asNumber = function(ctx) {\n  var exrs = this.evaluate(ctx);\n  if (exrs instanceof wgxpath.NodeSet) {\n    return exrs.number();\n  }\n  return +exrs;\n};\n\n\n/**\n * Evaluate and interpret the result as a string.\n *\n * @param {!wgxpath.Context} ctx The context to evaluate the expression in.\n * @return {string} The evaluated string.\n */\nwgxpath.Expr.prototype.asString = function(ctx) {\n  var exrs = this.evaluate(ctx);\n  if (exrs instanceof wgxpath.NodeSet) {\n    return exrs.string();\n  }\n  return '' + exrs;\n};\n\n\n/**\n * Evaluate and interpret the result as a boolean value.\n *\n * @param {!wgxpath.Context} ctx The context to evaluate the expression in.\n * @return {boolean} The evaluated boolean value.\n */\nwgxpath.Expr.prototype.asBool = function(ctx) {\n  var exrs = this.evaluate(ctx);\n  if (exrs instanceof wgxpath.NodeSet) {\n    return !!exrs.getLength();\n  }\n  return !!exrs;\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview A class representing operations on binary expressions.\n * @author moz@google.com (Michael Zhou)\n */\n\ngoog.provide('wgxpath.BinaryExpr');\n\ngoog.require('wgxpath.DataType');\ngoog.require('wgxpath.Expr');\ngoog.require('wgxpath.Node');\n\n\n\n/**\n * Constructor for BinaryExpr.\n *\n * @param {!wgxpath.BinaryExpr.Op} op A binary operator.\n * @param {!wgxpath.Expr} left The left hand side of the expression.\n * @param {!wgxpath.Expr} right The right hand side of the expression.\n * @extends {wgxpath.Expr}\n * @constructor\n */\nwgxpath.BinaryExpr = function(op, left, right) {\n  var opCast = /** @type {!wgxpath.BinaryExpr.Op_} */ (op);\n  wgxpath.Expr.call(this, opCast.dataType_);\n\n  /**\n   * @private\n   * @type {!wgxpath.BinaryExpr.Op_}\n   */\n  this.op_ = opCast;\n\n  /**\n   * @private\n   * @type {!wgxpath.Expr}\n   */\n  this.left_ = left;\n\n  /**\n   * @private\n   * @type {!wgxpath.Expr}\n   */\n  this.right_ = right;\n\n  this.setNeedContextPosition(left.doesNeedContextPosition() ||\n      right.doesNeedContextPosition());\n  this.setNeedContextNode(left.doesNeedContextNode() ||\n      right.doesNeedContextNode());\n\n  // Optimize [@id=\"foo\"] and [@name=\"bar\"]\n  if (this.op_ == wgxpath.BinaryExpr.Op.EQUAL) {\n    if (!right.doesNeedContextNode() && !right.doesNeedContextPosition() &&\n        right.getDataType() != wgxpath.DataType.NODESET &&\n        right.getDataType() != wgxpath.DataType.VOID && left.getQuickAttr()) {\n      this.setQuickAttr({\n        name: left.getQuickAttr().name,\n        valueExpr: right});\n    } else if (!left.doesNeedContextNode() && !left.doesNeedContextPosition() &&\n        left.getDataType() != wgxpath.DataType.NODESET &&\n        left.getDataType() != wgxpath.DataType.VOID && right.getQuickAttr()) {\n      this.setQuickAttr({\n        name: right.getQuickAttr().name,\n        valueExpr: left});\n    }\n  }\n};\ngoog.inherits(wgxpath.BinaryExpr, wgxpath.Expr);\n\n\n/**\n * Performs comparison between the left hand side and the right hand side.\n *\n * @private\n * @param {function((string|number|boolean), (string|number|boolean))}\n *        comp A comparison function that takes two parameters.\n * @param {!wgxpath.Expr} lhs The left hand side of the expression.\n * @param {!wgxpath.Expr} rhs The right hand side of the expression.\n * @param {!wgxpath.Context} ctx The context to perform the comparison in.\n * @param {boolean=} opt_equChk Whether the comparison checks for equality.\n * @return {boolean} True if comp returns true, false otherwise.\n */\nwgxpath.BinaryExpr.compare_ = function(comp, lhs, rhs, ctx, opt_equChk) {\n  var left = lhs.evaluate(ctx);\n  var right = rhs.evaluate(ctx);\n  var lIter, rIter, lNode, rNode;\n  if (left instanceof wgxpath.NodeSet && right instanceof wgxpath.NodeSet) {\n    lIter = left.iterator();\n    for (lNode = lIter.next(); lNode; lNode = lIter.next()) {\n      rIter = right.iterator();\n      for (rNode = rIter.next(); rNode; rNode = rIter.next()) {\n        if (comp(wgxpath.Node.getValueAsString(lNode),\n            wgxpath.Node.getValueAsString(rNode))) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  if ((left instanceof wgxpath.NodeSet) ||\n      (right instanceof wgxpath.NodeSet)) {\n    var nodeset, primitive;\n    if ((left instanceof wgxpath.NodeSet)) {\n      nodeset = left, primitive = right;\n    } else {\n      nodeset = right, primitive = left;\n    }\n    var iter = nodeset.iterator();\n    var type = typeof primitive;\n    for (var node = iter.next(); node; node = iter.next()) {\n      var stringValue;\n      switch (type) {\n        case 'number':\n          stringValue = wgxpath.Node.getValueAsNumber(node);\n          break;\n        case 'boolean':\n          stringValue = wgxpath.Node.getValueAsBool(node);\n          break;\n        case 'string':\n          stringValue = wgxpath.Node.getValueAsString(node);\n          break;\n        default:\n          throw Error('Illegal primitive type for comparison.');\n      }\n      if (nodeset == left &&\n          comp(stringValue,\n              /** @type {(string|number|boolean)} */ (primitive))) {\n        return true;\n      } else if (nodeset == right &&\n          comp(/** @type {(string|number|boolean)} */ (primitive),\n              stringValue)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if (opt_equChk) {\n    if (typeof left == 'boolean' || typeof right == 'boolean') {\n      return comp(!!left, !!right);\n    }\n    if (typeof left == 'number' || typeof right == 'number') {\n      return comp(+left, +right);\n    }\n    return comp(left, right);\n  }\n  return comp(+left, +right);\n};\n\n\n/**\n * @override\n * @return {(boolean|number)} The boolean or number result.\n */\nwgxpath.BinaryExpr.prototype.evaluate = function(ctx) {\n  return this.op_.evaluate_(this.left_, this.right_, ctx);\n};\n\n\n/**\n * @override\n */\nwgxpath.BinaryExpr.prototype.toString = function() {\n  var text = 'Binary Expression: ' + this.op_;\n  text += wgxpath.Expr.indent(this.left_);\n  text += wgxpath.Expr.indent(this.right_);\n  return text;\n};\n\n\n\n/**\n * A binary operator.\n *\n * @param {string} opString The operator string.\n * @param {number} precedence The precedence when evaluated.\n * @param {!wgxpath.DataType} dataType The dataType to return when evaluated.\n * @param {function(!wgxpath.Expr, !wgxpath.Expr, !wgxpath.Context)}\n *         evaluate An evaluation function.\n * @constructor\n * @private\n */\nwgxpath.BinaryExpr.Op_ = function(opString, precedence, dataType, evaluate) {\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.opString_ = opString;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.precedence_ = precedence;\n\n  /**\n   * @private\n   * @type {!wgxpath.DataType}\n   */\n  this.dataType_ = dataType;\n\n  /**\n   * @private\n   * @type {function(!wgxpath.Expr, !wgxpath.Expr, !wgxpath.Context)}\n   */\n  this.evaluate_ = evaluate;\n};\n\n\n/**\n * Returns the precedence for the operator.\n *\n * @return {number} The precedence.\n */\nwgxpath.BinaryExpr.Op_.prototype.getPrecedence = function() {\n  return this.precedence_;\n};\n\n\n/**\n * @override\n */\nwgxpath.BinaryExpr.Op_.prototype.toString = function() {\n  return this.opString_;\n};\n\n\n/**\n * A mapping from operator strings to operator objects.\n *\n * @private\n * @type {!Object.<string, !wgxpath.BinaryExpr.Op>}\n */\nwgxpath.BinaryExpr.stringToOpMap_ = {};\n\n\n/**\n * Creates a binary operator.\n *\n * @param {string} opString The operator string.\n * @param {number} precedence The precedence when evaluated.\n * @param {!wgxpath.DataType} dataType The dataType to return when evaluated.\n * @param {function(!wgxpath.Expr, !wgxpath.Expr, !wgxpath.Context)}\n *         evaluate An evaluation function.\n * @return {!wgxpath.BinaryExpr.Op} A binary expression operator.\n * @private\n */\nwgxpath.BinaryExpr.createOp_ = function(opString, precedence, dataType,\n    evaluate) {\n  if (wgxpath.BinaryExpr.stringToOpMap_.hasOwnProperty(opString)) {\n    throw new Error('Binary operator already created: ' + opString);\n  }\n  // The upcast and then downcast for the JSCompiler.\n  var op = /** @type {!Object} */ (new wgxpath.BinaryExpr.Op_(\n      opString, precedence, dataType, evaluate));\n  op = /** @type {!wgxpath.BinaryExpr.Op} */ (op);\n  wgxpath.BinaryExpr.stringToOpMap_[op.toString()] = op;\n  return op;\n};\n\n\n/**\n * Returns the operator with this opString or null if none.\n *\n * @param {string} opString The opString.\n * @return {!wgxpath.BinaryExpr.Op} The operator.\n */\nwgxpath.BinaryExpr.getOp = function(opString) {\n  return wgxpath.BinaryExpr.stringToOpMap_[opString] || null;\n};\n\n\n/**\n * Binary operator enumeration.\n *\n * @enum {{getPrecedence: function(): number}}\n */\nwgxpath.BinaryExpr.Op = {\n  DIV: wgxpath.BinaryExpr.createOp_('div', 6, wgxpath.DataType.NUMBER,\n      function(left, right, ctx) {\n        return left.asNumber(ctx) / right.asNumber(ctx);\n      }),\n  MOD: wgxpath.BinaryExpr.createOp_('mod', 6, wgxpath.DataType.NUMBER,\n      function(left, right, ctx) {\n        return left.asNumber(ctx) % right.asNumber(ctx);\n      }),\n  MULT: wgxpath.BinaryExpr.createOp_('*', 6, wgxpath.DataType.NUMBER,\n      function(left, right, ctx) {\n        return left.asNumber(ctx) * right.asNumber(ctx);\n      }),\n  PLUS: wgxpath.BinaryExpr.createOp_('+', 5, wgxpath.DataType.NUMBER,\n      function(left, right, ctx) {\n        return left.asNumber(ctx) + right.asNumber(ctx);\n      }),\n  MINUS: wgxpath.BinaryExpr.createOp_('-', 5, wgxpath.DataType.NUMBER,\n      function(left, right, ctx) {\n        return left.asNumber(ctx) - right.asNumber(ctx);\n      }),\n  LESSTHAN: wgxpath.BinaryExpr.createOp_('<', 4, wgxpath.DataType.BOOLEAN,\n      function(left, right, ctx) {\n        return wgxpath.BinaryExpr.compare_(function(a, b) {return a < b;},\n            left, right, ctx);\n      }),\n  GREATERTHAN: wgxpath.BinaryExpr.createOp_('>', 4, wgxpath.DataType.BOOLEAN,\n      function(left, right, ctx) {\n        return wgxpath.BinaryExpr.compare_(function(a, b) {return a > b;},\n            left, right, ctx);\n      }),\n  LESSTHAN_EQUAL: wgxpath.BinaryExpr.createOp_(\n      '<=', 4, wgxpath.DataType.BOOLEAN,\n      function(left, right, ctx) {\n        return wgxpath.BinaryExpr.compare_(function(a, b) {return a <= b;},\n            left, right, ctx);\n      }),\n  GREATERTHAN_EQUAL: wgxpath.BinaryExpr.createOp_('>=', 4,\n      wgxpath.DataType.BOOLEAN, function(left, right, ctx) {\n        return wgxpath.BinaryExpr.compare_(function(a, b) {return a >= b;},\n            left, right, ctx);\n      }),\n  EQUAL: wgxpath.BinaryExpr.createOp_('=', 3, wgxpath.DataType.BOOLEAN,\n      function(left, right, ctx) {\n        return wgxpath.BinaryExpr.compare_(function(a, b) {return a == b;},\n            left, right, ctx, true);\n      }),\n  NOT_EQUAL: wgxpath.BinaryExpr.createOp_('!=', 3, wgxpath.DataType.BOOLEAN,\n      function(left, right, ctx) {\n        return wgxpath.BinaryExpr.compare_(function(a, b) {return a != b},\n            left, right, ctx, true);\n      }),\n  AND: wgxpath.BinaryExpr.createOp_('and', 2, wgxpath.DataType.BOOLEAN,\n      function(left, right, ctx) {\n        return left.asBool(ctx) && right.asBool(ctx);\n      }),\n  OR: wgxpath.BinaryExpr.createOp_('or', 1, wgxpath.DataType.BOOLEAN,\n      function(left, right, ctx) {\n        return left.asBool(ctx) || right.asBool(ctx);\n      })\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview Enumeration of internal data types.\n * @author moz@google.com (Michael Zhou)\n */\n\ngoog.provide('wgxpath.DataType');\n\n\n/**\n * Enum for data types.\n * @enum {number}\n */\nwgxpath.DataType = {\n  VOID: 0,\n  NUMBER: 1,\n  BOOLEAN: 2,\n  STRING: 3,\n  NODESET: 4\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview A class representing operations on filter expressions.\n * @author moz@google.com (Michael Zhou)\n */\n\ngoog.provide('wgxpath.FilterExpr');\n\ngoog.require('wgxpath.Expr');\n\n\n\n/**\n * Constructor for FilterExpr.\n *\n * @param {!wgxpath.Expr} primary The primary expression.\n * @param {!wgxpath.Predicates} predicates The predicates.\n * @extends {wgxpath.Expr}\n * @constructor\n */\nwgxpath.FilterExpr = function(primary, predicates) {\n  if (predicates.getLength() && primary.getDataType() !=\n      wgxpath.DataType.NODESET) {\n    throw Error('Primary expression must evaluate to nodeset ' +\n        'if filter has predicate(s).');\n  }\n  wgxpath.Expr.call(this, primary.getDataType());\n\n  /**\n   * @type {!wgxpath.Expr}\n   * @private\n   */\n  this.primary_ = primary;\n\n\n  /**\n   * @type {!wgxpath.Predicates}\n   * @private\n   */\n  this.predicates_ = predicates;\n\n  this.setNeedContextPosition(primary.doesNeedContextPosition());\n  this.setNeedContextNode(primary.doesNeedContextNode());\n};\ngoog.inherits(wgxpath.FilterExpr, wgxpath.Expr);\n\n\n/**\n * @override\n * @return {!wgxpath.NodeSet} The nodeset result.\n */\nwgxpath.FilterExpr.prototype.evaluate = function(ctx) {\n  var result = this.primary_.evaluate(ctx);\n  return this.predicates_.evaluatePredicates(\n      /** @type {!wgxpath.NodeSet} */ (result));\n};\n\n\n/**\n * @override\n */\nwgxpath.FilterExpr.prototype.toString = function() {\n  var text = 'Filter:';\n  text += wgxpath.Expr.indent(this.primary_);\n  text += wgxpath.Expr.indent(this.predicates_);\n  return text;\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview An abstract class representing expressions with predicates.\n *     baseExprWithPredictes are immutable objects that evaluate their\n *     predicates against nodesets and return the modified nodesets.\n * @author evanrthomas@google.com (Evan Thomas)\n */\n\ngoog.provide('wgxpath.Predicates');\n\ngoog.require('goog.array');\ngoog.require('wgxpath.Context');\ngoog.require('wgxpath.Expr');\n\n\n\n/**\n * An abstract class for expressions with predicates.\n *\n * @constructor\n * @param {!Array.<!wgxpath.Expr>} predicates The array of predicates.\n * @param {boolean=} opt_reverse Whether to iterate over the nodeset in reverse.\n */\nwgxpath.Predicates = function(predicates, opt_reverse) {\n\n  /**\n   * List of predicates\n   *\n   * @private\n   * @type {!Array.<!wgxpath.Expr>}\n   */\n  this.predicates_ = predicates;\n\n\n  /**\n   * Which direction to iterate over the predicates\n   *\n   * @private\n   * @type {boolean}\n   */\n  this.reverse_ = !!opt_reverse;\n};\n\n\n/**\n * Evaluates the predicates against the given nodeset.\n *\n * @param {!wgxpath.NodeSet} nodeset The nodes against which to evaluate\n *     the predicates.\n * @param {number=} opt_start The index of the first predicate to evaluate,\n *     defaults to 0.\n * @return {!wgxpath.NodeSet} nodeset The filtered nodeset.\n */\nwgxpath.Predicates.prototype.evaluatePredicates =\n    function(nodeset, opt_start) {\n  for (var i = opt_start || 0; i < this.predicates_.length; i++) {\n    var predicate = this.predicates_[i];\n    var iter = nodeset.iterator();\n    var l = nodeset.getLength();\n    var node;\n    for (var j = 0; node = iter.next(); j++) {\n      var position = this.reverse_ ? (l - j) : (j + 1);\n      var exrs = predicate.evaluate(new\n          wgxpath.Context(/** @type {wgxpath.Node} */ (node), position, l));\n      var keep;\n      if (typeof exrs == 'number') {\n        keep = (position == exrs);\n      } else if (typeof exrs == 'string' || typeof exrs == 'boolean') {\n        keep = !!exrs;\n      } else if (exrs instanceof wgxpath.NodeSet) {\n        keep = (exrs.getLength() > 0);\n      } else {\n        throw Error('Predicate.evaluate returned an unexpected type.');\n      }\n      if (!keep) {\n        iter.remove();\n      }\n    }\n  }\n  return nodeset;\n};\n\n\n/**\n * Returns the quickAttr info.\n *\n * @return {?{name: string, valueExpr: wgxpath.Expr}}\n */\nwgxpath.Predicates.prototype.getQuickAttr = function() {\n  return this.predicates_.length > 0 ?\n      this.predicates_[0].getQuickAttr() : null;\n};\n\n\n/**\n * Returns whether this set of predicates needs context position.\n *\n * @return {boolean} Whether something needs context position.\n */\nwgxpath.Predicates.prototype.doesNeedContextPosition = function() {\n  for (var i = 0; i < this.predicates_.length; i++) {\n    var predicate = this.predicates_[i];\n    if (predicate.doesNeedContextPosition() ||\n        predicate.getDataType() == wgxpath.DataType.NUMBER ||\n        predicate.getDataType() == wgxpath.DataType.VOID) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Returns the length of this set of predicates.\n *\n * @return {number} The number of expressions.\n */\nwgxpath.Predicates.prototype.getLength = function() {\n  return this.predicates_.length;\n};\n\n\n/**\n * Returns the set of predicates.\n *\n * @return {!Array.<!wgxpath.Expr>} The predicates.\n */\nwgxpath.Predicates.prototype.getPredicates = function() {\n  return this.predicates_;\n};\n\n\n/**\n * @override\n */\nwgxpath.Predicates.prototype.toString = function() {\n  return goog.array.reduce(this.predicates_, function(prev, curr) {\n    return prev + wgxpath.Expr.indent(curr);\n  }, 'Predicates:');\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview A function call expression.\n * @author gdennis@google.com (Greg Dennis)\n */\n\ngoog.provide('wgxpath.FunctionCall');\n\ngoog.require('goog.array');\ngoog.require('goog.dom');\ngoog.require('goog.dom.NodeType');\ngoog.require('goog.string');\ngoog.require('wgxpath.Expr');\ngoog.require('wgxpath.Node');\ngoog.require('wgxpath.NodeSet');\ngoog.require('wgxpath.userAgent');\ngoog.require('wgxpath.DataType');\n\n\n\n/**\n * A function call expression.\n *\n * @constructor\n * @extends {wgxpath.Expr}\n * @param {!wgxpath.FunctionCall.Func} func Function.\n * @param {!Array.<!wgxpath.Expr>} args Arguments to the function.\n */\nwgxpath.FunctionCall = function(func, args) {\n  // Check the provided arguments match the function parameters.\n  if (args.length < func.minArgs_) {\n    throw new Error('Function ' + func.name_ + ' expects at least' +\n        func.minArgs_ + ' arguments, ' + args.length + ' given');\n  }\n  if (!goog.isNull(func.maxArgs_) && args.length > func.maxArgs_) {\n    throw new Error('Function ' + func.name_ + ' expects at most ' +\n        func.maxArgs_ + ' arguments, ' + args.length + ' given');\n  }\n  if (func.nodesetsRequired_) {\n    goog.array.forEach(args, function(arg, i) {\n      if (arg.getDataType() != wgxpath.DataType.NODESET) {\n        throw new Error('Argument ' + i + ' to function ' + func.name_ +\n            ' is not of type Nodeset: ' + arg);\n      }\n    });\n  }\n  wgxpath.Expr.call(this, func.dataType_);\n\n  /**\n   * @type {!wgxpath.FunctionCall.Func}\n   * @private\n   */\n  this.func_ = func;\n\n  /**\n   * @type {!Array.<!wgxpath.Expr>}\n   * @private\n   */\n  this.args_ = args;\n\n  this.setNeedContextPosition(func.needContextPosition_ ||\n      goog.array.some(args, function(arg) {\n        return arg.doesNeedContextPosition();\n      }));\n  this.setNeedContextNode(\n      (func.needContextNodeWithoutArgs_ && !args.length) ||\n      (func.needContextNodeWithArgs_ && !!args.length) ||\n      goog.array.some(args, function(arg) {\n        return arg.doesNeedContextNode();\n      }));\n};\ngoog.inherits(wgxpath.FunctionCall, wgxpath.Expr);\n\n\n/**\n * @override\n */\nwgxpath.FunctionCall.prototype.evaluate = function(ctx) {\n  var result = this.func_.evaluate_.apply(null,\n      goog.array.concat(ctx, this.args_));\n  return /** @type {!(string|boolean|number|wgxpath.NodeSet)} */ (result);\n};\n\n\n/**\n * @override\n */\nwgxpath.FunctionCall.prototype.toString = function() {\n  var text = 'Function: ' + this.func_;\n  if (this.args_.length) {\n    var args = goog.array.reduce(this.args_, function(prev, curr) {\n      return prev + wgxpath.Expr.indent(curr);\n    }, 'Arguments:');\n    text += wgxpath.Expr.indent(args);\n  }\n  return text;\n};\n\n\n\n/**\n * A function in a function call expression.\n *\n * @constructor\n * @param {string} name Name of the function.\n * @param {wgxpath.DataType} dataType Datatype of the function return value.\n * @param {boolean} needContextPosition Whether the function needs a context\n *     position.\n * @param {boolean} needContextNodeWithoutArgs Whether the function needs a\n *     context node when not given arguments.\n * @param {boolean} needContextNodeWithArgs Whether the function needs a context\n *     node when the function is given arguments.\n * @param {function(!wgxpath.Context, ...!wgxpath.Expr):*} evaluate\n *     Evaluates the function in a context with any number of expression\n *     arguments.\n * @param {number} minArgs Minimum number of arguments accepted by the function.\n * @param {?number=} opt_maxArgs Maximum number of arguments accepted by the\n *     function; null means there is no max; defaults to minArgs.\n * @param {boolean=} opt_nodesetsRequired Whether the args must be nodesets.\n * @private\n */\nwgxpath.FunctionCall.Func_ = function(name, dataType, needContextPosition,\n    needContextNodeWithoutArgs, needContextNodeWithArgs, evaluate, minArgs,\n    opt_maxArgs, opt_nodesetsRequired) {\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.name_ = name;\n\n  /**\n   * @type {wgxpath.DataType}\n   * @private\n   */\n  this.dataType_ = dataType;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.needContextPosition_ = needContextPosition;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.needContextNodeWithoutArgs_ = needContextNodeWithoutArgs;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.needContextNodeWithArgs_ = needContextNodeWithArgs;\n\n  /**\n   * @type {function(!wgxpath.Context, ...!wgxpath.Expr):*}\n   * @private\n   */\n  this.evaluate_ = evaluate;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minArgs_ = minArgs;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.maxArgs_ = goog.isDef(opt_maxArgs) ? opt_maxArgs : minArgs;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.nodesetsRequired_ = !!opt_nodesetsRequired;\n};\n\n\n/**\n * @override\n */\nwgxpath.FunctionCall.Func_.prototype.toString = function() {\n  return this.name_;\n};\n\n\n/**\n * A mapping from function names to Func objects.\n *\n * @private\n * @type {!Object.<string, !wgxpath.FunctionCall.Func>}\n */\nwgxpath.FunctionCall.nameToFuncMap_ = {};\n\n\n/**\n * Constructs a Func and maps its name to it.\n *\n * @param {string} name Name of the function.\n * @param {wgxpath.DataType} dataType Datatype of the function return value.\n * @param {boolean} needContextPosition Whether the function needs a context\n *     position.\n * @param {boolean} needContextNodeWithoutArgs Whether the function needs a\n *     context node when not given arguments.\n * @param {boolean} needContextNodeWithArgs Whether the function needs a context\n *     node when the function is given arguments.\n * @param {function(!wgxpath.Context, ...!wgxpath.Expr):*} evaluate\n *     Evaluates the function in a context with any number of expression\n *     arguments.\n * @param {number} minArgs Minimum number of arguments accepted by the function.\n * @param {?number=} opt_maxArgs Maximum number of arguments accepted by the\n *     function; null means there is no max; defaults to minArgs.\n * @param {boolean=} opt_nodesetsRequired Whether the args must be nodesets.\n * @return {!wgxpath.FunctionCall.Func} The function created.\n * @private\n */\nwgxpath.FunctionCall.createFunc_ = function(name, dataType,\n    needContextPosition, needContextNodeWithoutArgs, needContextNodeWithArgs,\n    evaluate, minArgs, opt_maxArgs, opt_nodesetsRequired) {\n  if (wgxpath.FunctionCall.nameToFuncMap_.hasOwnProperty(name)) {\n    throw new Error('Function already created: ' + name + '.');\n  }\n  var func = new wgxpath.FunctionCall.Func_(name, dataType,\n      needContextPosition, needContextNodeWithoutArgs, needContextNodeWithArgs,\n      evaluate, minArgs, opt_maxArgs, opt_nodesetsRequired);\n  func = /** @type {!wgxpath.FunctionCall.Func} */ (func);\n  wgxpath.FunctionCall.nameToFuncMap_[name] = func;\n  return func;\n};\n\n\n/**\n * Returns the function object for this name.\n *\n * @param {string} name The function's name.\n * @return {wgxpath.FunctionCall.Func} The function object.\n */\nwgxpath.FunctionCall.getFunc = function(name) {\n  return wgxpath.FunctionCall.nameToFuncMap_[name] || null;\n};\n\n\n/**\n * An XPath function enumeration.\n *\n * <p>A list of XPath 1.0 functions:\n * http://www.w3.org/TR/xpath/#corelib\n *\n * @enum {!Object}\n */\nwgxpath.FunctionCall.Func = {\n  BOOLEAN: wgxpath.FunctionCall.createFunc_('boolean',\n      wgxpath.DataType.BOOLEAN, false, false, false,\n      function(ctx, expr) {\n        return expr.asBool(ctx);\n      }, 1),\n  CEILING: wgxpath.FunctionCall.createFunc_('ceiling',\n      wgxpath.DataType.NUMBER, false, false, false,\n      function(ctx, expr) {\n        return Math.ceil(expr.asNumber(ctx));\n      }, 1),\n  CONCAT: wgxpath.FunctionCall.createFunc_('concat',\n      wgxpath.DataType.STRING, false, false, false,\n      function(ctx, var_args) {\n        var exprs = goog.array.slice(arguments, 1);\n        return goog.array.reduce(exprs, function(prev, curr) {\n          return prev + curr.asString(ctx);\n        }, '');\n      }, 2, null),\n  CONTAINS: wgxpath.FunctionCall.createFunc_('contains',\n      wgxpath.DataType.BOOLEAN, false, false, false,\n      function(ctx, expr1, expr2) {\n        return goog.string.contains(expr1.asString(ctx), expr2.asString(ctx));\n      }, 2),\n  COUNT: wgxpath.FunctionCall.createFunc_('count',\n      wgxpath.DataType.NUMBER, false, false, false,\n      function(ctx, expr) {\n        return expr.evaluate(ctx).getLength();\n      }, 1, 1, true),\n  FALSE: wgxpath.FunctionCall.createFunc_('false',\n      wgxpath.DataType.BOOLEAN, false, false, false,\n      function(ctx) {\n        return false;\n      }, 0),\n  FLOOR: wgxpath.FunctionCall.createFunc_('floor',\n      wgxpath.DataType.NUMBER, false, false, false,\n      function(ctx, expr) {\n        return Math.floor(expr.asNumber(ctx));\n      }, 1),\n  ID: wgxpath.FunctionCall.createFunc_('id',\n      wgxpath.DataType.NODESET, false, false, false,\n      function(ctx, expr) {\n        var ctxNode = ctx.getNode();\n        var doc = ctxNode.nodeType == goog.dom.NodeType.DOCUMENT ? ctxNode :\n            ctxNode.ownerDocument;\n        var ids = expr.asString(ctx).split(/\\s+/);\n        var nsArray = [];\n        goog.array.forEach(ids, function(id) {\n          var elem = idSingle(id);\n          if (elem && !goog.array.contains(nsArray, elem)) {\n            nsArray.push(elem);\n          }\n        });\n        nsArray.sort(goog.dom.compareNodeOrder);\n        var ns = new wgxpath.NodeSet();\n        goog.array.forEach(nsArray, function(n) {\n          ns.add(n);\n        });\n        return ns;\n\n        function idSingle(id) {\n          if (wgxpath.userAgent.IE_DOC_PRE_9) {\n            var allId = doc.all[id];\n            if (allId) {\n              if (allId.nodeType && id == allId.id) {\n                return allId;\n              } else if (allId.length) {\n                return goog.array.find(allId, function(elem) {\n                  return id == elem.id;\n                });\n              }\n            }\n            return null;\n          } else {\n            return doc.getElementById(id);\n          }\n        }\n      }, 1),\n  LANG: wgxpath.FunctionCall.createFunc_('lang',\n      wgxpath.DataType.BOOLEAN, false, false, false,\n      function(ctx, expr) {\n        // TODO: Fully implement this.\n        return false;\n      }, 1),\n  LAST: wgxpath.FunctionCall.createFunc_('last',\n      wgxpath.DataType.NUMBER, true, false, false,\n      function(ctx) {\n        if (arguments.length != 1) {\n          throw Error('Function last expects ()');\n        }\n        return ctx.getLast();\n      }, 0),\n  LOCAL_NAME: wgxpath.FunctionCall.createFunc_('local-name',\n      wgxpath.DataType.STRING, false, true, false,\n      function(ctx, opt_expr) {\n        var node = opt_expr ? opt_expr.evaluate(ctx).getFirst() : ctx.getNode();\n        return node ? (node.localName || node.nodeName.toLowerCase()) : '';\n      }, 0, 1, true),\n  NAME: wgxpath.FunctionCall.createFunc_('name',\n      wgxpath.DataType.STRING, false, true, false,\n      function(ctx, opt_expr) {\n        // TODO: Fully implement this.\n        var node = opt_expr ? opt_expr.evaluate(ctx).getFirst() : ctx.getNode();\n        return node ? node.nodeName.toLowerCase() : '';\n      }, 0, 1, true),\n  NAMESPACE_URI: wgxpath.FunctionCall.createFunc_('namespace-uri',\n      wgxpath.DataType.STRING, true, false, false,\n      function(ctx, opt_expr) {\n        // TODO: Fully implement this.\n        return '';\n      }, 0, 1, true),\n  NORMALIZE_SPACE: wgxpath.FunctionCall.createFunc_('normalize-space',\n      wgxpath.DataType.STRING, false, true, false,\n      function(ctx, opt_expr) {\n        var str = opt_expr ? opt_expr.asString(ctx) :\n            wgxpath.Node.getValueAsString(ctx.getNode());\n        return goog.string.collapseWhitespace(str);\n      }, 0, 1),\n  NOT: wgxpath.FunctionCall.createFunc_('not',\n      wgxpath.DataType.BOOLEAN, false, false, false,\n      function(ctx, expr) {\n        return !expr.asBool(ctx);\n      }, 1),\n  NUMBER: wgxpath.FunctionCall.createFunc_('number',\n      wgxpath.DataType.NUMBER, false, true, false,\n      function(ctx, opt_expr) {\n        return opt_expr ? opt_expr.asNumber(ctx) :\n            wgxpath.Node.getValueAsNumber(ctx.getNode());\n      }, 0, 1),\n  POSITION: wgxpath.FunctionCall.createFunc_('position',\n      wgxpath.DataType.NUMBER, true, false, false,\n      function(ctx) {\n        return ctx.getPosition();\n      }, 0),\n  ROUND: wgxpath.FunctionCall.createFunc_('round',\n      wgxpath.DataType.NUMBER, false, false, false,\n      function(ctx, expr) {\n        return Math.round(expr.asNumber(ctx));\n      }, 1),\n  STARTS_WITH: wgxpath.FunctionCall.createFunc_('starts-with',\n      wgxpath.DataType.BOOLEAN, false, false, false,\n      function(ctx, expr1, expr2) {\n        return goog.string.startsWith(expr1.asString(ctx), expr2.asString(ctx));\n      }, 2),\n  STRING: wgxpath.FunctionCall.createFunc_(\n      'string', wgxpath.DataType.STRING, false, true, false,\n      function(ctx, opt_expr) {\n        return opt_expr ? opt_expr.asString(ctx) :\n            wgxpath.Node.getValueAsString(ctx.getNode());\n      }, 0, 1),\n  STRING_LENGTH: wgxpath.FunctionCall.createFunc_('string-length',\n      wgxpath.DataType.NUMBER, false, true, false,\n      function(ctx, opt_expr) {\n        var str = opt_expr ? opt_expr.asString(ctx) :\n            wgxpath.Node.getValueAsString(ctx.getNode());\n        return str.length;\n      }, 0, 1),\n  SUBSTRING: wgxpath.FunctionCall.createFunc_('substring',\n      wgxpath.DataType.STRING, false, false, false,\n      function(ctx, expr1, expr2, opt_expr3) {\n        var startRaw = expr2.asNumber(ctx);\n        if (isNaN(startRaw) || startRaw == Infinity || startRaw == -Infinity) {\n          return '';\n        }\n        var lengthRaw = opt_expr3 ? opt_expr3.asNumber(ctx) : Infinity;\n        if (isNaN(lengthRaw) || lengthRaw === -Infinity) {\n          return '';\n        }\n\n        // XPath indices are 1-based.\n        var startInt = Math.round(startRaw) - 1;\n        var start = Math.max(startInt, 0);\n        var str = expr1.asString(ctx);\n\n        if (lengthRaw == Infinity) {\n          return str.substring(start);\n        } else {\n          var lengthInt = Math.round(lengthRaw);\n          // Length is from startInt, not start!\n          return str.substring(start, startInt + lengthInt);\n        }\n      }, 2, 3),\n  SUBSTRING_AFTER: wgxpath.FunctionCall.createFunc_('substring-after',\n      wgxpath.DataType.STRING, false, false, false,\n      function(ctx, expr1, expr2) {\n        var str1 = expr1.asString(ctx);\n        var str2 = expr2.asString(ctx);\n        var str2Index = str1.indexOf(str2);\n        return str2Index == -1 ? '' : str1.substring(str2Index + str2.length);\n      }, 2),\n  SUBSTRING_BEFORE: wgxpath.FunctionCall.createFunc_('substring-before',\n      wgxpath.DataType.STRING, false, false, false,\n      function(ctx, expr1, expr2) {\n        var str1 = expr1.asString(ctx);\n        var str2 = expr2.asString(ctx);\n        var str2Index = str1.indexOf(str2);\n        return str2Index == -1 ? '' : str1.substring(0, str2Index);\n      }, 2),\n  SUM: wgxpath.FunctionCall.createFunc_('sum',\n      wgxpath.DataType.NUMBER, false, false, false,\n      function(ctx, expr) {\n        var ns = expr.evaluate(ctx);\n        var iter = ns.iterator();\n        var prev = 0;\n        for (var node = iter.next(); node; node = iter.next()) {\n          prev += wgxpath.Node.getValueAsNumber(node);\n        }\n        return prev;\n      }, 1, 1, true),\n  TRANSLATE: wgxpath.FunctionCall.createFunc_('translate',\n      wgxpath.DataType.STRING, false, false, false,\n      function(ctx, expr1, expr2, expr3) {\n        var str1 = expr1.asString(ctx);\n        var str2 = expr2.asString(ctx);\n        var str3 = expr3.asString(ctx);\n\n        var map = {};\n        for (var i = 0; i < str2.length; i++) {\n          var ch = str2.charAt(i);\n          if (!(ch in map)) {\n            // If i >= str3.length, charAt will return the empty string.\n            map[ch] = str3.charAt(i);\n          }\n        }\n\n        var translated = '';\n        for (var i = 0; i < str1.length; i++) {\n          var ch = str1.charAt(i);\n          translated += (ch in map) ? map[ch] : ch;\n        }\n        return translated;\n      }, 3),\n  TRUE: wgxpath.FunctionCall.createFunc_(\n      'true', wgxpath.DataType.BOOLEAN, false, false, false,\n      function(ctx) {\n        return true;\n      }, 0)\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview A class representing the string literals.\n * @author moz@google.com (Michael Zhou)\n */\n\ngoog.provide('wgxpath.Literal');\n\ngoog.require('wgxpath.Expr');\n\n\n\n/**\n * Constructs a string literal expression.\n *\n * @param {string} text The text value of the literal.\n * @constructor\n * @extends {wgxpath.Expr}\n */\nwgxpath.Literal = function(text) {\n  wgxpath.Expr.call(this, wgxpath.DataType.STRING);\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.text_ = text.substring(1, text.length - 1);\n};\ngoog.inherits(wgxpath.Literal, wgxpath.Expr);\n\n\n/**\n * @override\n * @return {string} The string result.\n */\nwgxpath.Literal.prototype.evaluate = function(context) {\n  return this.text_;\n};\n\n\n/**\n * @override\n */\nwgxpath.Literal.prototype.toString = function() {\n  return 'Literal: ' + this.text_;\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview A class implementing the NameTest construct.\n * @author moz@google.com (Michael Zhou)\n */\n\ngoog.provide('wgxpath.NameTest');\n\ngoog.require('goog.dom.NodeType');\ngoog.require('wgxpath.NodeTest');\n\n\n\n/**\n * Constructs a NameTest based on the xpath grammar:\n * http://www.w3.org/TR/xpath/#NT-NameTest\n *\n * <p>If no namespace is provided, the default HTML namespace is used.\n *\n * @param {string} name Name to be tested.\n * @param {string=} opt_namespaceUri Namespace URI; defaults to HTML namespace.\n * @constructor\n * @implements {wgxpath.NodeTest}\n */\nwgxpath.NameTest = function(name, opt_namespaceUri) {\n  /**\n   * @type {string}\n   * @private\n   */\n  this.name_ = name.toLowerCase();\n\n  var defaultNamespace;\n  if (this.name_ == wgxpath.NameTest.WILDCARD) {\n    // Wildcard names default to wildcard namespace.\n    defaultNamespace = wgxpath.NameTest.WILDCARD;\n  } else {\n    // Defined names default to html namespace.\n    defaultNamespace = wgxpath.NameTest.HTML_NAMESPACE_URI_;\n  }\n  /**\n   * @type {string}\n   * @private\n   */\n  this.namespaceUri_ = opt_namespaceUri ? opt_namespaceUri.toLowerCase() :\n      defaultNamespace;\n\n};\n\n\n/**\n * The default namespace URI for XHTML nodes.\n *\n * @const\n * @type {string}\n * @private\n */\nwgxpath.NameTest.HTML_NAMESPACE_URI_ = 'http://www.w3.org/1999/xhtml';\n\n /**\n  * Wildcard namespace which matches any namespace\n  *\n  * @const\n  * @type {string}\n  * @public\n  */\n wgxpath.NameTest.WILDCARD = '*';\n\n\n/**\n * @override\n */\nwgxpath.NameTest.prototype.matches = function(node) {\n  var type = node.nodeType;\n  if (type != goog.dom.NodeType.ELEMENT &&\n      type != goog.dom.NodeType.ATTRIBUTE) {\n    return false;\n  }\n  // TODO(moz): Investigate if node.localName is necessary.\n  var localName = goog.isDef(node.localName) ? node.localName : node.nodeName;\n  if (this.name_ != wgxpath.NameTest.WILDCARD &&\n      this.name_ != localName.toLowerCase()) {\n    return false;\n  } else {\n    if (this.namespaceUri_ == wgxpath.NameTest.WILDCARD) {\n      return true;\n    } else {\n      var namespaceUri = node.namespaceURI ? node.namespaceURI.toLowerCase() :\n          wgxpath.NameTest.HTML_NAMESPACE_URI_;\n      return this.namespaceUri_ == namespaceUri;\n    }\n  }\n};\n\n\n/**\n * @override\n */\nwgxpath.NameTest.prototype.getName = function() {\n  return this.name_;\n};\n\n\n/**\n * Returns the namespace URI to be matched.\n *\n * @return {string} Namespace URI.\n */\nwgxpath.NameTest.prototype.getNamespaceUri = function() {\n  return this.namespaceUri_;\n};\n\n\n/**\n * @override\n */\nwgxpath.NameTest.prototype.toString = function() {\n  var prefix = this.namespaceUri_ == wgxpath.NameTest.HTML_NAMESPACE_URI_ ?\n      '' : this.namespaceUri_ + ':';\n  return 'Name Test: ' + prefix + this.name_;\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview A class representing number literals.\n * @author moz@google.com (Michael Zhou)\n */\n\ngoog.provide('wgxpath.Number');\n\ngoog.require('wgxpath.Expr');\n\n\n\n/**\n * Constructs a number expression.\n *\n * @param {number} value The number value.\n * @constructor\n * @extends {wgxpath.Expr}\n */\nwgxpath.Number = function(value) {\n  wgxpath.Expr.call(this, wgxpath.DataType.NUMBER);\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.value_ = value;\n};\ngoog.inherits(wgxpath.Number, wgxpath.Expr);\n\n\n/**\n * @override\n * @return {number} The number result.\n */\nwgxpath.Number.prototype.evaluate = function(ctx) {\n  return this.value_;\n};\n\n\n/**\n * @override\n */\nwgxpath.Number.prototype.toString = function() {\n  return 'Number: ' + this.value_;\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview An class representing operations on path expressions.\n * @author moz@google.com (Michael Zhou)\n */\n\ngoog.provide('wgxpath.PathExpr');\n\ngoog.require('goog.array');\ngoog.require('goog.dom.NodeType');\ngoog.require('wgxpath.Context');\ngoog.require('wgxpath.DataType');\ngoog.require('wgxpath.Expr');\ngoog.require('wgxpath.NodeSet');\n\n\n\n/**\n * Constructor for PathExpr.\n *\n * @param {!wgxpath.Expr} filter A filter expression.\n * @param {!Array.<!wgxpath.Step>} steps The steps in the location path.\n * @extends {wgxpath.Expr}\n * @constructor\n */\nwgxpath.PathExpr = function(filter, steps) {\n  wgxpath.Expr.call(this, filter.getDataType());\n\n  /**\n   * @type {!wgxpath.Expr}\n   * @private\n   */\n  this.filter_ = filter;\n\n  /**\n   * @type {!Array.<!wgxpath.Step>}\n   * @private\n   */\n  this.steps_ = steps;\n\n  this.setNeedContextPosition(filter.doesNeedContextPosition());\n  this.setNeedContextNode(filter.doesNeedContextNode());\n  if (this.steps_.length == 1) {\n    var firstStep = this.steps_[0];\n    if (!firstStep.doesIncludeDescendants() &&\n        firstStep.getAxis() == wgxpath.Step.Axis.ATTRIBUTE) {\n      var test = firstStep.getTest();\n      if (test.getName() != '*') {\n        this.setQuickAttr({\n          name: test.getName(),\n          valueExpr: null\n        });\n      }\n    }\n  }\n};\ngoog.inherits(wgxpath.PathExpr, wgxpath.Expr);\n\n\n\n/**\n * Constructor for RootHelperExpr.\n *\n * @extends {wgxpath.Expr}\n * @constructor\n */\nwgxpath.PathExpr.RootHelperExpr = function() {\n  wgxpath.Expr.call(this, wgxpath.DataType.NODESET);\n};\ngoog.inherits(wgxpath.PathExpr.RootHelperExpr, wgxpath.Expr);\n\n\n/**\n * Evaluates the root-node helper expression.\n *\n * @param {!wgxpath.Context} ctx The context to evaluate the expression in.\n * @return {!wgxpath.NodeSet} The evaluation result.\n */\nwgxpath.PathExpr.RootHelperExpr.prototype.evaluate = function(ctx) {\n  var nodeset = new wgxpath.NodeSet();\n  var node = ctx.getNode();\n  if (node.nodeType == goog.dom.NodeType.DOCUMENT) {\n    nodeset.add(node);\n  } else {\n    nodeset.add(/** @type {!Node} */ (node.ownerDocument));\n  }\n  return nodeset;\n};\n\n\n/**\n * @override\n */\nwgxpath.PathExpr.RootHelperExpr.prototype.toString = function() {\n  return 'Root Helper Expression';\n};\n\n\n\n/**\n * Constructor for ContextHelperExpr.\n *\n * @extends {wgxpath.Expr}\n * @constructor\n */\nwgxpath.PathExpr.ContextHelperExpr = function() {\n  wgxpath.Expr.call(this, wgxpath.DataType.NODESET);\n};\ngoog.inherits(wgxpath.PathExpr.ContextHelperExpr, wgxpath.Expr);\n\n\n/**\n * Evaluates the context-node helper expression.\n *\n * @param {!wgxpath.Context} ctx The context to evaluate the expression in.\n * @return {!wgxpath.NodeSet} The evaluation result.\n */\nwgxpath.PathExpr.ContextHelperExpr.prototype.evaluate = function(ctx) {\n  var nodeset = new wgxpath.NodeSet();\n  nodeset.add(ctx.getNode());\n  return nodeset;\n};\n\n\n/**\n * @override\n */\nwgxpath.PathExpr.ContextHelperExpr.prototype.toString = function() {\n  return 'Context Helper Expression';\n};\n\n\n/**\n * Returns whether the token is a valid PathExpr operator.\n *\n * @param {string} token The token to be checked.\n * @return {boolean} Whether the token is a valid operator.\n */\nwgxpath.PathExpr.isValidOp = function(token) {\n  return token == '/' || token == '//';\n};\n\n\n/**\n * @override\n * @return {!wgxpath.NodeSet} The nodeset result.\n */\nwgxpath.PathExpr.prototype.evaluate = function(ctx) {\n  var nodeset = this.filter_.evaluate(ctx);\n  if (!(nodeset instanceof wgxpath.NodeSet)) {\n    throw Error('Filter expression must evaluate to nodeset.');\n  }\n  var steps = this.steps_;\n  for (var i = 0, l0 = steps.length; i < l0 && nodeset.getLength(); i++) {\n    var step = steps[i];\n    var reverse = step.getAxis().isReverse();\n    var iter = nodeset.iterator(reverse);\n    nodeset = null;\n    var node, next;\n    if (!step.doesNeedContextPosition() &&\n        step.getAxis() == wgxpath.Step.Axis.FOLLOWING) {\n      for (node = iter.next(); next = iter.next(); node = next) {\n        if (node.contains && !node.contains(next)) {\n          break;\n        } else {\n          if (!(next.compareDocumentPosition(/** @type {!Node} */ (node)) &\n              8)) {\n            break;\n          }\n        }\n      }\n      nodeset = step.evaluate(new\n          wgxpath.Context(/** @type {wgxpath.Node} */ (node)));\n    } else if (!step.doesNeedContextPosition() &&\n        step.getAxis() == wgxpath.Step.Axis.PRECEDING) {\n      node = iter.next();\n      nodeset = step.evaluate(new\n          wgxpath.Context(/** @type {wgxpath.Node} */ (node)));\n    } else {\n      node = iter.next();\n      nodeset = step.evaluate(new\n          wgxpath.Context(/** @type {wgxpath.Node} */ (node)));\n      while ((node = iter.next()) != null) {\n        var result = step.evaluate(new\n            wgxpath.Context(/** @type {wgxpath.Node} */ (node)));\n        nodeset = wgxpath.NodeSet.merge(nodeset, result);\n      }\n    }\n  }\n  return /** @type {!wgxpath.NodeSet} */ (nodeset);\n};\n\n\n/**\n * @override\n */\nwgxpath.PathExpr.prototype.toString = function() {\n  var text = 'Path Expression:';\n  text += wgxpath.Expr.indent(this.filter_);\n  if (this.steps_.length) {\n    var steps = goog.array.reduce(this.steps_, function(prev, curr) {\n      return prev + wgxpath.Expr.indent(curr);\n    }, 'Steps:');\n    text += wgxpath.Expr.indent(steps);\n  }\n  return text;\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview A step expression.\n * @author moz@google.com (Michael Zhou)\n */\n\ngoog.provide('wgxpath.Step');\n\ngoog.require('goog.array');\ngoog.require('goog.dom.NodeType');\ngoog.require('wgxpath.DataType');\ngoog.require('wgxpath.Expr');\ngoog.require('wgxpath.KindTest');\ngoog.require('wgxpath.Node');\ngoog.require('wgxpath.NodeSet');\ngoog.require('wgxpath.Predicates');\ngoog.require('wgxpath.userAgent');\n\n\n\n/**\n * Class for a step in a path expression\n * http://www.w3.org/TR/xpath20/#id-steps.\n *\n * @extends {wgxpath.Expr}\n * @constructor\n * @param {!wgxpath.Step.Axis} axis The axis for this Step.\n * @param {!wgxpath.NodeTest} test The test for this Step.\n * @param {!wgxpath.Predicates=} opt_predicates The predicates for this\n *     Step.\n * @param {boolean=} opt_descendants Whether descendants are to be included in\n *     this step ('//' vs '/').\n */\nwgxpath.Step = function(axis, test, opt_predicates, opt_descendants) {\n  var axisCast = /** @type {!wgxpath.Step.Axis_} */ (axis);\n  wgxpath.Expr.call(this, wgxpath.DataType.NODESET);\n\n  /**\n   * @type {!wgxpath.Step.Axis_}\n   * @private\n   */\n  this.axis_ = axisCast;\n\n\n  /**\n   * @type {!wgxpath.NodeTest}\n   * @private\n   */\n  this.test_ = test;\n\n  /**\n   * @type {!wgxpath.Predicates}\n   * @private\n   */\n  this.predicates_ = opt_predicates || new wgxpath.Predicates([]);\n\n\n  /**\n   * Whether decendants are included in this step\n   *\n   * @private\n   * @type {boolean}\n   */\n  this.descendants_ = !!opt_descendants;\n\n  var quickAttrInfo = this.predicates_.getQuickAttr();\n  if (axis.supportsQuickAttr_ && quickAttrInfo) {\n    var attrName = quickAttrInfo.name;\n    attrName = wgxpath.userAgent.IE_DOC_PRE_9 ?\n        attrName.toLowerCase() : attrName;\n    var attrValueExpr = quickAttrInfo.valueExpr;\n    this.setQuickAttr({\n      name: attrName,\n      valueExpr: attrValueExpr\n    });\n  }\n  this.setNeedContextPosition(this.predicates_.doesNeedContextPosition());\n};\ngoog.inherits(wgxpath.Step, wgxpath.Expr);\n\n\n/**\n * @override\n * @return {!wgxpath.NodeSet} The nodeset result.\n */\nwgxpath.Step.prototype.evaluate = function(ctx) {\n  var node = ctx.getNode();\n  var nodeset = null;\n  var quickAttr = this.getQuickAttr();\n  var attrName = null;\n  var attrValue = null;\n  var pstart = 0;\n  if (quickAttr) {\n    attrName = quickAttr.name;\n    attrValue = quickAttr.valueExpr ?\n        quickAttr.valueExpr.asString(ctx) : null;\n    pstart = 1;\n  }\n  if (this.descendants_) {\n    if (!this.doesNeedContextPosition() &&\n        this.axis_ == wgxpath.Step.Axis.CHILD) {\n      nodeset = wgxpath.Node.getDescendantNodes(this.test_, node,\n          attrName, attrValue);\n      nodeset = this.predicates_.evaluatePredicates(nodeset, pstart);\n    } else {\n      var step = new wgxpath.Step(wgxpath.Step.Axis.DESCENDANT_OR_SELF,\n          new wgxpath.KindTest('node'));\n      var iter = step.evaluate(ctx).iterator();\n      var n = iter.next();\n      if (!n) {\n        nodeset = new wgxpath.NodeSet();\n      } else {\n        nodeset = this.evaluate_(/** @type {!wgxpath.Node} */ (n),\n            attrName, attrValue, pstart);\n        while ((n = iter.next()) != null) {\n          nodeset = wgxpath.NodeSet.merge(nodeset,\n              this.evaluate_(/** @type {!wgxpath.Node} */ (n), attrName,\n              attrValue, pstart));\n        }\n      }\n    }\n  } else {\n    nodeset = this.evaluate_(ctx.getNode(), attrName, attrValue, pstart);\n  }\n  return nodeset;\n};\n\n\n/**\n * Evaluates this step on the given context to a nodeset.\n *     (assumes this.descendants_ = false)\n *\n * @private\n * @param {!wgxpath.Node} node The context node.\n * @param {?string} attrName The name of the attribute.\n * @param {?string} attrValue The value of the attribute.\n * @param {number} pstart The first predicate to evaluate.\n * @return {!wgxpath.NodeSet} The nodeset from evaluating this Step.\n */\nwgxpath.Step.prototype.evaluate_ = function(\n    node, attrName, attrValue, pstart) {\n  var nodeset = this.axis_.func_(this.test_, node, attrName, attrValue);\n  nodeset = this.predicates_.evaluatePredicates(nodeset, pstart);\n  return nodeset;\n};\n\n\n/**\n * Returns whether the step evaluation should include descendants.\n *\n * @return {boolean} Whether descendants are included.\n */\nwgxpath.Step.prototype.doesIncludeDescendants = function() {\n  return this.descendants_;\n};\n\n\n/**\n * Returns the step's axis.\n *\n * @return {!wgxpath.Step.Axis} The axis.\n */\nwgxpath.Step.prototype.getAxis = function() {\n  return /** @type {!wgxpath.Step.Axis} */ (this.axis_);\n};\n\n\n/**\n * Returns the test for this step.\n *\n * @return {!wgxpath.NodeTest} The test for this step.\n */\nwgxpath.Step.prototype.getTest = function() {\n  return this.test_;\n};\n\n\n/**\n * @override\n */\nwgxpath.Step.prototype.toString = function() {\n  var text = 'Step:';\n  text += wgxpath.Expr.indent('Operator: ' + (this.descendants_ ? '//' : '/'));\n  if (this.axis_.name_) {\n    text += wgxpath.Expr.indent('Axis: ' + this.axis_);\n  }\n  text += wgxpath.Expr.indent(this.test_);\n  if (this.predicates_.getLength()) {\n    var predicates = goog.array.reduce(this.predicates_.getPredicates(),\n        function(prev, curr) {\n          return prev + wgxpath.Expr.indent(curr);\n        }, 'Predicates:');\n    text += wgxpath.Expr.indent(predicates);\n  }\n  return text;\n};\n\n\n\n/**\n * A step axis.\n *\n * @constructor\n * @param {string} name The axis name.\n * @param {function(!wgxpath.NodeTest, wgxpath.Node, ?string, ?string):\n *     !wgxpath.NodeSet} func The function for this axis.\n * @param {boolean} reverse Whether to iterate over the nodeset in reverse.\n * @param {boolean} supportsQuickAttr Whether quickAttr should be enabled for\n *     this axis.\n * @private\n */\nwgxpath.Step.Axis_ = function(name, func, reverse, supportsQuickAttr) {\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.name_ = name;\n\n  /**\n   * @private\n   * @type {function(!wgxpath.NodeTest, wgxpath.Node, ?string, ?string):\n   *     !wgxpath.NodeSet}\n   */\n  this.func_ = func;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.reverse_ = reverse;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.supportsQuickAttr_ = supportsQuickAttr;\n};\n\n\n/**\n * Returns whether the nodes in the step should be iterated over in reverse.\n *\n * @return {boolean} Whether the nodes should be iterated over in reverse.\n */\nwgxpath.Step.Axis_.prototype.isReverse = function() {\n  return this.reverse_;\n};\n\n\n/**\n * @override\n */\nwgxpath.Step.Axis_.prototype.toString = function() {\n  return this.name_;\n};\n\n\n/**\n * A map from axis name to Axis.\n *\n * @type {!Object.<string, !wgxpath.Step.Axis>}\n * @private\n */\nwgxpath.Step.nameToAxisMap_ = {};\n\n\n/**\n * Creates an axis and maps the axis's name to that axis.\n *\n * @param {string} name The axis name.\n * @param {function(!wgxpath.NodeTest, wgxpath.Node, ?string, ?string):\n *     !wgxpath.NodeSet} func The function for this axis.\n * @param {boolean} reverse Whether to iterate over nodesets in reverse.\n * @param {boolean=} opt_supportsQuickAttr Whether quickAttr can be enabled\n *     for this axis.\n * @return {!wgxpath.Step.Axis} The axis.\n * @private\n */\nwgxpath.Step.createAxis_ =\n    function(name, func, reverse, opt_supportsQuickAttr) {\n  if (wgxpath.Step.nameToAxisMap_.hasOwnProperty(name)) {\n    throw Error('Axis already created: ' + name);\n  }\n  // The upcast and then downcast for the JSCompiler.\n  var axis = /** @type {!Object} */ (new wgxpath.Step.Axis_(\n      name, func, reverse, !!opt_supportsQuickAttr));\n  axis = /** @type {!wgxpath.Step.Axis} */ (axis);\n  wgxpath.Step.nameToAxisMap_[name] = axis;\n  return axis;\n};\n\n\n/**\n * Returns the axis for this axisname or null if none.\n *\n * @param {string} name The axis name.\n * @return {wgxpath.Step.Axis} The axis.\n */\nwgxpath.Step.getAxis = function(name) {\n  return wgxpath.Step.nameToAxisMap_[name] || null;\n};\n\n\n/**\n * Axis enumeration.\n *\n * @enum {{isReverse: function(): boolean}}\n */\nwgxpath.Step.Axis = {\n  ANCESTOR: wgxpath.Step.createAxis_('ancestor',\n      function(test, node) {\n        var nodeset = new wgxpath.NodeSet();\n        var parent = node;\n        while (parent = parent.parentNode) {\n          if (test.matches(parent)) {\n            nodeset.unshift(parent);\n          }\n        }\n        return nodeset;\n      }, true),\n  ANCESTOR_OR_SELF: wgxpath.Step.createAxis_('ancestor-or-self',\n      function(test, node) {\n        var nodeset = new wgxpath.NodeSet();\n        var toMatch = node;\n        do {\n          if (test.matches(toMatch)) {\n            nodeset.unshift(toMatch);\n          }\n        } while (toMatch = toMatch.parentNode);\n        return nodeset;\n      }, true),\n  ATTRIBUTE: wgxpath.Step.createAxis_('attribute',\n      function(test, node) {\n        var nodeset = new wgxpath.NodeSet();\n        var testName = test.getName();\n        // IE8 doesn't allow access to the style attribute using getNamedItem.\n        // It returns an object with nodeValue = null. Even worse, \".style\" on\n        // IE8 can mutate the DOM, adding an empty string attribute. Therefore\n        // we check it last.\n        if (testName == 'style' &&\n            wgxpath.userAgent.IE_DOC_PRE_9 && node.style) {\n          nodeset.add(wgxpath.IEAttrWrapper.forStyleOf(\n              /** @type {!Node} */ (node), node.sourceIndex));\n          return nodeset;\n        }\n        var attrs = node.attributes;\n        if (attrs) {\n          if ((test instanceof wgxpath.KindTest &&\n              goog.isNull(test.getType())) || testName == '*') {\n            var sourceIndex = node.sourceIndex;\n            for (var i = 0, attr; attr = attrs[i]; i++) {\n              if (wgxpath.userAgent.IE_DOC_PRE_9) {\n                if (attr.nodeValue) {\n                  nodeset.add(wgxpath.IEAttrWrapper.forAttrOf(\n                      /** @type {!Node} */ (node), attr, sourceIndex));\n                }\n              } else {\n                nodeset.add(attr);\n              }\n            }\n          } else {\n            var attr = attrs.getNamedItem(testName);\n            if (attr) {\n              if (wgxpath.userAgent.IE_DOC_PRE_9) {\n                if (attr.nodeValue) {\n                  nodeset.add(wgxpath.IEAttrWrapper.forAttrOf(\n                      /** @type {!Node} */ (node), attr, node.sourceIndex));\n                }\n              } else {\n                nodeset.add(attr);\n              }\n            }\n          }\n        }\n        return nodeset;\n      }, false),\n  CHILD: wgxpath.Step.createAxis_('child',\n      wgxpath.Node.getChildNodes, false, true),\n  DESCENDANT: wgxpath.Step.createAxis_('descendant',\n      wgxpath.Node.getDescendantNodes, false, true),\n  DESCENDANT_OR_SELF: wgxpath.Step.createAxis_('descendant-or-self',\n      function(test, node, attrName, attrValue) {\n        var nodeset = new wgxpath.NodeSet();\n        if (wgxpath.Node.attrMatches(node, attrName, attrValue)) {\n          if (test.matches(node)) {\n            nodeset.add(node);\n          }\n        }\n        return wgxpath.Node.getDescendantNodes(test, node,\n            attrName, attrValue, nodeset);\n      }, false, true),\n  FOLLOWING: wgxpath.Step.createAxis_('following',\n      function(test, node, attrName, attrValue) {\n        var nodeset = new wgxpath.NodeSet();\n        var parent = node;\n        do {\n          var child = parent;\n          while (child = child.nextSibling) {\n            if (wgxpath.Node.attrMatches(child, attrName, attrValue)) {\n              if (test.matches(child)) {\n                nodeset.add(child);\n              }\n            }\n            nodeset = wgxpath.Node.getDescendantNodes(test, child,\n                attrName, attrValue, nodeset);\n          }\n        } while (parent = parent.parentNode);\n        return nodeset;\n      }, false, true),\n  FOLLOWING_SIBLING: wgxpath.Step.createAxis_('following-sibling',\n      function(test, node) {\n        var nodeset = new wgxpath.NodeSet();\n        var toMatch = node;\n        while (toMatch = toMatch.nextSibling) {\n          if (test.matches(toMatch)) {\n            nodeset.add(toMatch);\n          }\n        }\n        return nodeset;\n      }, false),\n  NAMESPACE: wgxpath.Step.createAxis_('namespace',\n      function(test, node) {\n        // not implemented\n        return new wgxpath.NodeSet();\n      }, false),\n  PARENT: wgxpath.Step.createAxis_('parent',\n      function(test, node) {\n        var nodeset = new wgxpath.NodeSet();\n        if (node.nodeType == goog.dom.NodeType.DOCUMENT) {\n          return nodeset;\n        } else if (node.nodeType == goog.dom.NodeType.ATTRIBUTE) {\n          nodeset.add(node.ownerElement);\n          return nodeset;\n        }\n        var parent = /** @type {!Node} */ (node.parentNode);\n        if (test.matches(parent)) {\n          nodeset.add(parent);\n        }\n        return nodeset;\n      }, false),\n  PRECEDING: wgxpath.Step.createAxis_('preceding',\n      function(test, node, attrName, attrValue) {\n        var nodeset = new wgxpath.NodeSet();\n        var parents = [];\n        var parent = node;\n        do {\n          parents.unshift(parent);\n        } while (parent = parent.parentNode);\n        for (var i = 1, l0 = parents.length; i < l0; i++) {\n          var siblings = [];\n          node = parents[i];\n          while (node = node.previousSibling) {\n            siblings.unshift(node);\n          }\n          for (var j = 0, l1 = siblings.length; j < l1; j++) {\n            node = siblings[j];\n            if (wgxpath.Node.attrMatches(node, attrName, attrValue)) {\n              if (test.matches(node)) nodeset.add(node);\n            }\n            nodeset = wgxpath.Node.getDescendantNodes(test, node,\n                attrName, attrValue, nodeset);\n          }\n        }\n        return nodeset;\n      }, true, true),\n  PRECEDING_SIBLING: wgxpath.Step.createAxis_('preceding-sibling',\n      function(test, node) {\n        var nodeset = new wgxpath.NodeSet();\n        var toMatch = node;\n        while (toMatch = toMatch.previousSibling) {\n          if (test.matches(toMatch)) {\n            nodeset.unshift(toMatch);\n          }\n        }\n        return nodeset;\n      }, true),\n  SELF: wgxpath.Step.createAxis_('self',\n      function(test, node) {\n        var nodeset = new wgxpath.NodeSet();\n        if (test.matches(node)) {\n          nodeset.add(node);\n        }\n        return nodeset;\n      }, false)\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview A class representing operations on unary expressions.\n * @author moz@google.com (Michael Zhou)\n */\n\ngoog.provide('wgxpath.UnaryExpr');\n\ngoog.require('wgxpath.DataType');\ngoog.require('wgxpath.Expr');\n\n\n\n/**\n * Constructor for UnaryExpr.\n *\n * @param {!wgxpath.Expr} expr The unary expression.\n * @extends {wgxpath.Expr}\n * @constructor\n */\nwgxpath.UnaryExpr = function(expr) {\n  wgxpath.Expr.call(this, wgxpath.DataType.NUMBER);\n\n  /**\n   * @private\n   * @type {!wgxpath.Expr}\n   */\n  this.expr_ = expr;\n\n  this.setNeedContextPosition(expr.doesNeedContextPosition());\n  this.setNeedContextNode(expr.doesNeedContextNode());\n};\ngoog.inherits(wgxpath.UnaryExpr, wgxpath.Expr);\n\n\n/**\n * @override\n * @return {number} The number result.\n */\nwgxpath.UnaryExpr.prototype.evaluate = function(ctx) {\n  return -this.expr_.asNumber(ctx);\n};\n\n\n/**\n * @override\n */\nwgxpath.UnaryExpr.prototype.toString = function() {\n  return 'Unary Expression: -' + wgxpath.Expr.indent(this.expr_);\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview A class representing operations on union expressions.\n * @author moz@google.com (Michael Zhou)\n */\n\ngoog.provide('wgxpath.UnionExpr');\n\ngoog.require('goog.array');\ngoog.require('wgxpath.DataType');\ngoog.require('wgxpath.Expr');\ngoog.require('wgxpath.NodeSet');\n\n\n\n/**\n * Constructor for UnionExpr.\n *\n * @param {!Array.<!wgxpath.Expr>} paths The paths in the union.\n * @extends {wgxpath.Expr}\n * @constructor\n */\nwgxpath.UnionExpr = function(paths) {\n  wgxpath.Expr.call(this, wgxpath.DataType.NODESET);\n\n  /**\n   * @type {!Array.<!wgxpath.Expr>}\n   * @private\n   */\n  this.paths_ = paths;\n  this.setNeedContextPosition(goog.array.some(this.paths_, function(p) {\n    return p.doesNeedContextPosition();\n  }));\n  this.setNeedContextNode(goog.array.some(this.paths_, function(p) {\n    return p.doesNeedContextNode();\n  }));\n};\ngoog.inherits(wgxpath.UnionExpr, wgxpath.Expr);\n\n\n/**\n * @override\n * @return {!wgxpath.NodeSet} The nodeset result.\n */\nwgxpath.UnionExpr.prototype.evaluate = function(ctx) {\n  var nodeset = new wgxpath.NodeSet();\n  goog.array.forEach(this.paths_, function(p) {\n    var result = p.evaluate(ctx);\n    if (!(result instanceof wgxpath.NodeSet)) {\n      throw Error('Path expression must evaluate to NodeSet.');\n    }\n    nodeset = wgxpath.NodeSet.merge(nodeset, result);\n  });\n  return nodeset;\n};\n\n\n/**\n * @override\n */\nwgxpath.UnionExpr.prototype.toString = function() {\n  return goog.array.reduce(this.paths_, function(prev, curr) {\n    return prev + wgxpath.Expr.indent(curr);\n  }, 'Union Expression:');\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview A recursive descent Parser.\n * @author evanrthomas@google.com (Evan Thomas)\n */\n\ngoog.provide('wgxpath.Parser');\n\ngoog.require('wgxpath.BinaryExpr');\ngoog.require('wgxpath.FilterExpr');\ngoog.require('wgxpath.FunctionCall');\ngoog.require('wgxpath.KindTest');\ngoog.require('wgxpath.Literal');\ngoog.require('wgxpath.NameTest');\ngoog.require('wgxpath.Number');\ngoog.require('wgxpath.PathExpr');\ngoog.require('wgxpath.Predicates');\ngoog.require('wgxpath.Step');\ngoog.require('wgxpath.UnaryExpr');\ngoog.require('wgxpath.UnionExpr');\n\n\n\n/**\n * The recursive descent parser.\n *\n * @constructor\n * @param {!wgxpath.Lexer} lexer The lexer.\n * @param {function(string): ?string} nsResolver Namespace resolver.\n */\nwgxpath.Parser = function(lexer, nsResolver) {\n\n  /**\n   * @private {!wgxpath.Lexer}\n   */\n  this.lexer_ = lexer;\n\n  /**\n   * @private {function(string): ?string}\n   */\n  this.nsResolver_ = nsResolver;\n};\n\n\n/**\n * Apply recursive descent parsing on the input to construct an\n * abstract syntax tree.\n *\n * @return {!wgxpath.Expr} The root of the constructed tree.\n */\nwgxpath.Parser.prototype.parseExpr = function() {\n  var expr, stack = [];\n  while (true) {\n    this.checkNotEmpty_('Missing right hand side of binary expression.');\n    expr = this.parseUnaryExpr_(); // See if it's just a UnaryExpr.\n    var opString = this.lexer_.next();\n    if (!opString) {\n      break; // Done, we have only a UnaryExpr.\n    }\n\n    var op = wgxpath.BinaryExpr.getOp(opString);\n    var precedence = op && op.getPrecedence();\n    if (!precedence) {\n      this.lexer_.back();\n      break;\n    }\n    // Precedence climbing\n    while (stack.length &&\n        precedence <= stack[stack.length - 1].getPrecedence()) {\n      expr = new wgxpath.BinaryExpr(stack.pop(), stack.pop(), expr);\n    }\n    stack.push(expr, op);\n  }\n  while (stack.length) {\n    expr = new wgxpath.BinaryExpr(stack.pop(), stack.pop(),\n        /** @type {!wgxpath.Expr} */ (expr));\n  }\n  return /** @type {!wgxpath.Expr} */ (expr);\n};\n\n\n/**\n * Checks that the lexer is not empty,\n *     displays the given error message if it is.\n *\n * @private\n * @param {string} msg The error message to display.\n */\nwgxpath.Parser.prototype.checkNotEmpty_ = function(msg) {\n  if (this.lexer_.empty()) {\n    throw Error(msg);\n  }\n};\n\n\n/**\n * Checks that the next token of the error message is the expected token.\n *\n * @private\n * @param {string} expected The expected token.\n */\nwgxpath.Parser.prototype.checkNextEquals_ = function(expected) {\n  var got = this.lexer_.next();\n  if (got != expected) {\n    throw Error('Bad token, expected: ' + expected + ' got: ' + got);\n  }\n};\n\n\n/**\n * Checks that the next token of the error message is not the given token.\n *\n * @private\n * @param {string} token The token.\n */\nwgxpath.Parser.prototype.checkNextNotEquals_ = function(token) {\n  var next = this.lexer_.next();\n  if (next != token) {\n    throw Error('Bad token: ' + next);\n  }\n};\n\n\n/**\n * Attempts to parse the input as a FilterExpr.\n *\n * @private\n * @return {wgxpath.Expr} The root of the constructed tree.\n */\nwgxpath.Parser.prototype.parseFilterExpr_ = function() {\n  var expr;\n  var token = this.lexer_.peek();\n  var ch = token.charAt(0);\n  switch (ch) {\n    case '$':\n      throw Error('Variable reference not allowed in HTML XPath');\n    case '(':\n      this.lexer_.next();\n      expr = this.parseExpr();\n      this.checkNotEmpty_('unclosed \"(\"');\n      this.checkNextEquals_(')');\n      break;\n    case '\"':\n    case \"'\":\n      expr = this.parseLiteral_();\n      break;\n    default:\n      if (!isNaN(+token)) {\n        expr = this.parseNumber_();\n      } else if (wgxpath.KindTest.isValidType(token)) {\n        return null;\n      } else if (/(?![0-9])[\\w]/.test(ch) && this.lexer_.peek(1) == '(') {\n        expr = this.parseFunctionCall_();\n      } else {\n        return null;\n      }\n  }\n  if (this.lexer_.peek() != '[') {\n    return expr;\n  }\n  var predicates = new wgxpath.Predicates(this.parsePredicates_());\n  return new wgxpath.FilterExpr(expr, predicates);\n};\n\n\n/**\n * Parses FunctionCall.\n *\n * @private\n * @return {!wgxpath.FunctionCall} The parsed expression.\n */\nwgxpath.Parser.prototype.parseFunctionCall_ = function() {\n  var funcName = this.lexer_.next();\n  var func = wgxpath.FunctionCall.getFunc(funcName);\n  this.lexer_.next();\n\n  var args = [];\n  while (this.lexer_.peek() != ')') {\n    this.checkNotEmpty_('Missing function argument list.');\n    args.push(this.parseExpr());\n    if (this.lexer_.peek() != ',') {\n      break;\n    }\n    this.lexer_.next();\n  }\n  this.checkNotEmpty_('Unclosed function argument list.');\n  this.checkNextNotEquals_(')');\n\n  return new wgxpath.FunctionCall(func, args);\n};\n\n\n/**\n * Parses the input to construct a KindTest.\n *\n * @private\n * @return {!wgxpath.KindTest} The KindTest constructed.\n */\nwgxpath.Parser.prototype.parseKindTest_ = function() {\n  var typeName = this.lexer_.next();\n  if (!wgxpath.KindTest.isValidType(typeName)) {\n    throw Error('Invalid type name: ' + typeName);\n  }\n  this.checkNextEquals_('(');\n  this.checkNotEmpty_('Bad nodetype');\n  var ch = this.lexer_.peek().charAt(0);\n\n  var literal = null;\n  if (ch == '\"' || ch == \"'\") {\n    literal = this.parseLiteral_();\n  }\n  this.checkNotEmpty_('Bad nodetype');\n  this.checkNextNotEquals_(')');\n  return new wgxpath.KindTest(typeName, literal);\n};\n\n\n/**\n * Parses the input to construct a Literal.\n *\n * @private\n * @return {!wgxpath.Literal} The Literal constructed.\n */\nwgxpath.Parser.prototype.parseLiteral_ = function() {\n  var token = this.lexer_.next();\n  if (token.length < 2) {\n    throw Error('Unclosed literal string');\n  }\n  return new wgxpath.Literal(token);\n};\n\n\n/**\n * Parses the input to construct a NameTest.\n *\n * @private\n * @return {!wgxpath.NameTest} The NameTest constructed.\n */\nwgxpath.Parser.prototype.parseNameTest_ = function() {\n  var name = this.lexer_.next();\n\n  // Check whether there's a namespace prefix.\n  var colonIndex = name.indexOf(':');\n  if (colonIndex == -1) {\n    return new wgxpath.NameTest(name);\n  } else {\n    var namespacePrefix = name.substring(0, colonIndex);\n    var namespaceUri;\n    if (namespacePrefix == wgxpath.NameTest.WILDCARD) {\n      namespaceUri = wgxpath.NameTest.WILDCARD;\n    } else {\n      namespaceUri = this.nsResolver_(namespacePrefix);\n      if (!namespaceUri) {\n        throw Error('Namespace prefix not declared: ' + namespacePrefix);\n      }\n    }\n    name = name.substr(colonIndex + 1);\n    return new wgxpath.NameTest(name, namespaceUri);\n  }\n};\n\n\n/**\n * Parses the input to construct a Number.\n *\n * @private\n * @return {!wgxpath.Number} The Number constructed.\n */\nwgxpath.Parser.prototype.parseNumber_ = function() {\n  return new wgxpath.Number(+this.lexer_.next());\n};\n\n\n/**\n * Attempts to parse the input as a PathExpr.\n *\n * @private\n * @return {!wgxpath.Expr} The root of the constructed tree.\n */\nwgxpath.Parser.prototype.parsePathExpr_ = function() {\n  var op, expr;\n  var steps = [];\n  var filterExpr;\n  if (wgxpath.PathExpr.isValidOp(this.lexer_.peek())) {\n    op = this.lexer_.next();\n    var token = this.lexer_.peek();\n    if (op == '/' && (this.lexer_.empty() ||\n        (token != '.' && token != '..' && token != '@' && token != '*' &&\n        !/(?![0-9])[\\w]/.test(token)))) {\n      return new wgxpath.PathExpr.RootHelperExpr();\n    }\n    filterExpr = new wgxpath.PathExpr.RootHelperExpr();\n\n    this.checkNotEmpty_('Missing next location step.');\n    expr = this.parseStep_(op);\n    steps.push(expr);\n  } else {\n    expr = this.parseFilterExpr_();\n    if (!expr) {\n      expr = this.parseStep_('/');\n      filterExpr = new wgxpath.PathExpr.ContextHelperExpr();\n      steps.push(expr);\n    } else if (!wgxpath.PathExpr.isValidOp(this.lexer_.peek())) {\n      return expr; // Done.\n    } else {\n      filterExpr = expr;\n    }\n  }\n  while (true) {\n    if (!wgxpath.PathExpr.isValidOp(this.lexer_.peek())) {\n      break;\n    }\n    op = this.lexer_.next();\n    this.checkNotEmpty_('Missing next location step.');\n    expr = this.parseStep_(op);\n    steps.push(expr);\n  }\n  return new wgxpath.PathExpr(filterExpr, steps);\n};\n\n\n/**\n * Parses Step.\n *\n * @private\n * @param {string} op The op for this step.\n * @return {!wgxpath.Step} The parsed expression.\n */\nwgxpath.Parser.prototype.parseStep_ = function(op) {\n  var test, step, token, predicates;\n  if (op != '/' && op != '//') {\n    throw Error('Step op should be \"/\" or \"//\"');\n  }\n  if (this.lexer_.peek() == '.') {\n    step = new wgxpath.Step(wgxpath.Step.Axis.SELF,\n        new wgxpath.KindTest('node'));\n    this.lexer_.next();\n    return step;\n  }\n  else if (this.lexer_.peek() == '..') {\n    step = new wgxpath.Step(wgxpath.Step.Axis.PARENT,\n        new wgxpath.KindTest('node'));\n    this.lexer_.next();\n    return step;\n  } else {\n    // Grab the axis.\n    var axis;\n    if (this.lexer_.peek() == '@') {\n      axis = wgxpath.Step.Axis.ATTRIBUTE;\n      this.lexer_.next();\n      this.checkNotEmpty_('Missing attribute name');\n    } else {\n      if (this.lexer_.peek(1) == '::') {\n        if (!/(?![0-9])[\\w]/.test(this.lexer_.peek().charAt(0))) {\n          throw Error('Bad token: ' + this.lexer_.next());\n        }\n        var axisName = this.lexer_.next();\n        axis = wgxpath.Step.getAxis(axisName);\n        if (!axis) {\n          throw Error('No axis with name: ' + axisName);\n        }\n        this.lexer_.next();\n        this.checkNotEmpty_('Missing node name');\n      } else {\n        axis = wgxpath.Step.Axis.CHILD;\n      }\n    }\n\n    // Grab the test.\n    token = this.lexer_.peek();\n    if (!/(?![0-9])[\\w\\*]/.test(token.charAt(0))) {\n      throw Error('Bad token: ' + this.lexer_.next());\n    } else {\n      if (this.lexer_.peek(1) == '(') {\n        if (!wgxpath.KindTest.isValidType(token)) {\n          throw Error('Invalid node type: ' + token);\n        }\n        test = this.parseKindTest_();\n      } else {\n        test = this.parseNameTest_();\n      }\n    }\n    predicates = new wgxpath.Predicates(this.parsePredicates_(),\n        axis.isReverse());\n    return step || new wgxpath.Step(axis, test, predicates, op == '//');\n  }\n};\n\n\n/**\n * Parses and returns the predicates from the this.lexer_.\n *\n * @private\n * @return {!Array.<!wgxpath.Expr>} An array of the predicates.\n */\nwgxpath.Parser.prototype.parsePredicates_ = function() {\n  var predicates = [];\n  while (this.lexer_.peek() == '[') {\n    this.lexer_.next();\n    this.checkNotEmpty_('Missing predicate expression.');\n    var predicate = this.parseExpr();\n    predicates.push(predicate);\n    this.checkNotEmpty_('Unclosed predicate expression.');\n    this.checkNextEquals_(']');\n  }\n  return predicates;\n};\n\n\n/**\n * Attempts to parse the input as a unary expression with\n * recursive descent parsing.\n *\n * @private\n * @return {!wgxpath.Expr} The root of the constructed tree.\n */\nwgxpath.Parser.prototype.parseUnaryExpr_ = function() {\n  if (this.lexer_.peek() == '-') {\n    this.lexer_.next();\n    return new wgxpath.UnaryExpr(this.parseUnaryExpr_());\n  } else {\n    return this.parseUnionExpr_();\n  }\n};\n\n\n/**\n * Attempts to parse the input as a union expression with\n * recursive descent parsing.\n *\n * @private\n * @return {!wgxpath.Expr} The root of the constructed tree.\n */\nwgxpath.Parser.prototype.parseUnionExpr_ = function() {\n  var expr = this.parsePathExpr_();\n  if (!(this.lexer_.peek() == '|')) {\n    return expr;  // Not a UnionExpr, returning as is.\n  }\n  var paths = [expr];\n  while (this.lexer_.next() == '|') {\n    this.checkNotEmpty_('Missing next union location path.');\n    paths.push(this.parsePathExpr_());\n  }\n  this.lexer_.back();\n  return new wgxpath.UnionExpr(paths);\n};\n"," /**\n  * @license\n  * The MIT License\n  *\n  * Copyright (c) 2007 Cybozu Labs, Inc.\n  * Copyright (c) 2012 Google Inc.\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to\n  * deal in the Software without restriction, including without limitation the\n  * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n  * sell copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n  *\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n  *\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  * IN THE SOFTWARE.\n  */\n\n/**\n * @fileoverview Namespace resolver functions.\n * @author gdennis@google.com (Greg Dennis)\n */\n\ngoog.provide('wgxpath.nsResolver');\n\ngoog.require('goog.dom.NodeType');\n\n\n/**\n * Returns a namespace resolve function for the given node.\n *\n * @param {!Node} node The context node.\n * @return {function(?string):?string} A lookupNamespaceURI function.\n */\nwgxpath.nsResolver.getResolver = function(node) {\n  // Adopted from W3C psuedocode specification:\n  // http://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html\n  //\n  // [03/2014] changed NodeType.ATTRIBUTE handling (always return nullResolver_)\n  // following DOM4 spec, Chrome, Firefox dropping attr.ownerElement attribute:\n  // http://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/ai6_ySyVITg\n\n  switch (node.nodeType) {\n    case goog.dom.NodeType.ELEMENT:\n      return goog.partial(wgxpath.nsResolver.resolveForElement_, node);\n\n    case goog.dom.NodeType.DOCUMENT:\n      return wgxpath.nsResolver.getResolver(node.documentElement);\n\n    case goog.dom.NodeType.DOCUMENT_FRAGMENT:\n    case goog.dom.NodeType.DOCUMENT_TYPE:\n    case goog.dom.NodeType.ENTITY:\n    case goog.dom.NodeType.NOTATION:\n      return wgxpath.nsResolver.nullResolver_;\n\n    default:\n      if (node.parentNode) {\n        return wgxpath.nsResolver.getResolver(node.parentNode);\n      }\n      return wgxpath.nsResolver.nullResolver_;\n  }\n};\n\n\n/**\n * A resolver function that always returns null.\n *\n * @param {?string} prefix Namespace prefix or null for default namespace.\n * @return {?string} Null.\n * @private\n */\nwgxpath.nsResolver.nullResolver_ = function(prefix) {\n  return null;\n};\n\n\n/**\n * The default namespace URI for XHTML nodes.\n *\n * @const\n * @type {string}\n * @private\n */\nwgxpath.nsResolver.HTML_NAMESPACE_URI_ = 'http://www.w3.org/1999/xhtml';\n\n\n/**\n * Looks up the namespace URI for the given prefix and given element context.\n *\n * @param {!Element} elem Context element for the namespace resolution.\n * @param {?string} prefix Namespace prefix or null for default namespace.\n * @return {?string} The namespace URI for the given prefix, or null if none.\n * @private\n */\nwgxpath.nsResolver.resolveForElement_ = function(elem, prefix) {\n  if (elem.prefix == prefix) {\n    return elem.namespaceURI || wgxpath.nsResolver.HTML_NAMESPACE_URI_;\n  }\n\n  var attr = elem.getAttributeNode('xmlns:' + prefix);\n  if (attr && attr.specified) {\n    return attr.value || null;\n  }\n\n  if (elem.parentNode &&\n      elem.parentNode.nodeType != goog.dom.NodeType.DOCUMENT) {\n    return wgxpath.nsResolver.resolveForElement_(\n        /** @type {!Element} */ (elem.parentNode), prefix);\n  }\n\n  return null;\n};\n","/*  JavaScript-XPath 0.1.11\n *  (c) 2007 Cybozu Labs, Inc.\n *\n *  JavaScript-XPath is freely distributable under the terms of an MIT-style\n *  license. For details, see the JavaScript-XPath web site:\n *  http://coderepos.org/share/wiki/JavaScript-XPath\n *\n/*--------------------------------------------------------------------------*/\n\n// Copyright 2012 Google Inc. All Rights Reserved.\n\n/**\n * @fileoverview Exports the wgxpath.install function.\n *\n */\n\ngoog.require('wgxpath');\n\ngoog.exportSymbol('wgxpath.install', wgxpath.install);\n","/**\n * @fileoverview Miscellaneous utility functions.\n */\n\ngoog.module('misc');\n\n/**\n * Assign an object to a dict using the given key name.  \n * If the object is a function, its `name` property is changed along the way.\n * \n * Useful for (mostly) undoing GCC's aggressive renaming of top-level functions & classes,\n * as the export annotation cannot be used in those cases.\n * \n * @param {Object} dict The object being assigned to.\n * @param {string} name The key name.\n * @param {?} obj The object being assigned and possibly renamed.\n * @suppress {reportUnknownTypes}\n */\nfunction assignAs(dict, name, obj) {\n  dict[name] = (typeof obj === 'function') ? \n      Object.defineProperty(obj, 'name', { value: name }) :\n      obj;\n}\n\nexports = {\n  assignAs,\n};\n","/**\n * @fileoverview The core GM_selenium module.\n */\n\ngoog.module('GM_selenium');\n\nconst misc = goog.require('misc');\nconst { Condition, ElementCondition, ElementPromise, wait } = goog.require('webdriver');\nconst { TimeoutError, WebDriverError } = goog.require('webdriver.error');\n\n// non-clobbering global init\nconst GM_selenium = /** @type {Object<string, ?>} */ (window['GM_selenium']) || {};\nwindow['GM_selenium'] = GM_selenium;\n\nconst assignAs = misc.assignAs;\nassignAs(GM_selenium, 'Condition', Condition);\nassignAs(GM_selenium, 'ElementCondition', ElementCondition);\nassignAs(GM_selenium, 'ElementPromise', ElementPromise);\nassignAs(GM_selenium, 'wait', wait);\nassignAs(GM_selenium, 'TimeoutError', TimeoutError);\nassignAs(GM_selenium, 'WebDriverError', WebDriverError);\n\nexports = {\n  GM_selenium,\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Names of standard colors with their associated hex values.\n */\n\ngoog.provide('goog.color.names');\n\n\n/**\n * A map that contains a lot of colors that are recognised by various browsers.\n * This list is way larger than the minimal one dictated by W3C.\n * The keys of this map are the lowercase \"readable\" names of the colors, while\n * the values are the \"hex\" values.\n *\n * @type {!Object<string, string>}\n */\ngoog.color.names = {\n  'aliceblue': '#f0f8ff',\n  'antiquewhite': '#faebd7',\n  'aqua': '#00ffff',\n  'aquamarine': '#7fffd4',\n  'azure': '#f0ffff',\n  'beige': '#f5f5dc',\n  'bisque': '#ffe4c4',\n  'black': '#000000',\n  'blanchedalmond': '#ffebcd',\n  'blue': '#0000ff',\n  'blueviolet': '#8a2be2',\n  'brown': '#a52a2a',\n  'burlywood': '#deb887',\n  'cadetblue': '#5f9ea0',\n  'chartreuse': '#7fff00',\n  'chocolate': '#d2691e',\n  'coral': '#ff7f50',\n  'cornflowerblue': '#6495ed',\n  'cornsilk': '#fff8dc',\n  'crimson': '#dc143c',\n  'cyan': '#00ffff',\n  'darkblue': '#00008b',\n  'darkcyan': '#008b8b',\n  'darkgoldenrod': '#b8860b',\n  'darkgray': '#a9a9a9',\n  'darkgreen': '#006400',\n  'darkgrey': '#a9a9a9',\n  'darkkhaki': '#bdb76b',\n  'darkmagenta': '#8b008b',\n  'darkolivegreen': '#556b2f',\n  'darkorange': '#ff8c00',\n  'darkorchid': '#9932cc',\n  'darkred': '#8b0000',\n  'darksalmon': '#e9967a',\n  'darkseagreen': '#8fbc8f',\n  'darkslateblue': '#483d8b',\n  'darkslategray': '#2f4f4f',\n  'darkslategrey': '#2f4f4f',\n  'darkturquoise': '#00ced1',\n  'darkviolet': '#9400d3',\n  'deeppink': '#ff1493',\n  'deepskyblue': '#00bfff',\n  'dimgray': '#696969',\n  'dimgrey': '#696969',\n  'dodgerblue': '#1e90ff',\n  'firebrick': '#b22222',\n  'floralwhite': '#fffaf0',\n  'forestgreen': '#228b22',\n  'fuchsia': '#ff00ff',\n  'gainsboro': '#dcdcdc',\n  'ghostwhite': '#f8f8ff',\n  'gold': '#ffd700',\n  'goldenrod': '#daa520',\n  'gray': '#808080',\n  'green': '#008000',\n  'greenyellow': '#adff2f',\n  'grey': '#808080',\n  'honeydew': '#f0fff0',\n  'hotpink': '#ff69b4',\n  'indianred': '#cd5c5c',\n  'indigo': '#4b0082',\n  'ivory': '#fffff0',\n  'khaki': '#f0e68c',\n  'lavender': '#e6e6fa',\n  'lavenderblush': '#fff0f5',\n  'lawngreen': '#7cfc00',\n  'lemonchiffon': '#fffacd',\n  'lightblue': '#add8e6',\n  'lightcoral': '#f08080',\n  'lightcyan': '#e0ffff',\n  'lightgoldenrodyellow': '#fafad2',\n  'lightgray': '#d3d3d3',\n  'lightgreen': '#90ee90',\n  'lightgrey': '#d3d3d3',\n  'lightpink': '#ffb6c1',\n  'lightsalmon': '#ffa07a',\n  'lightseagreen': '#20b2aa',\n  'lightskyblue': '#87cefa',\n  'lightslategray': '#778899',\n  'lightslategrey': '#778899',\n  'lightsteelblue': '#b0c4de',\n  'lightyellow': '#ffffe0',\n  'lime': '#00ff00',\n  'limegreen': '#32cd32',\n  'linen': '#faf0e6',\n  'magenta': '#ff00ff',\n  'maroon': '#800000',\n  'mediumaquamarine': '#66cdaa',\n  'mediumblue': '#0000cd',\n  'mediumorchid': '#ba55d3',\n  'mediumpurple': '#9370db',\n  'mediumseagreen': '#3cb371',\n  'mediumslateblue': '#7b68ee',\n  'mediumspringgreen': '#00fa9a',\n  'mediumturquoise': '#48d1cc',\n  'mediumvioletred': '#c71585',\n  'midnightblue': '#191970',\n  'mintcream': '#f5fffa',\n  'mistyrose': '#ffe4e1',\n  'moccasin': '#ffe4b5',\n  'navajowhite': '#ffdead',\n  'navy': '#000080',\n  'oldlace': '#fdf5e6',\n  'olive': '#808000',\n  'olivedrab': '#6b8e23',\n  'orange': '#ffa500',\n  'orangered': '#ff4500',\n  'orchid': '#da70d6',\n  'palegoldenrod': '#eee8aa',\n  'palegreen': '#98fb98',\n  'paleturquoise': '#afeeee',\n  'palevioletred': '#db7093',\n  'papayawhip': '#ffefd5',\n  'peachpuff': '#ffdab9',\n  'peru': '#cd853f',\n  'pink': '#ffc0cb',\n  'plum': '#dda0dd',\n  'powderblue': '#b0e0e6',\n  'purple': '#800080',\n  'red': '#ff0000',\n  'rosybrown': '#bc8f8f',\n  'royalblue': '#4169e1',\n  'saddlebrown': '#8b4513',\n  'salmon': '#fa8072',\n  'sandybrown': '#f4a460',\n  'seagreen': '#2e8b57',\n  'seashell': '#fff5ee',\n  'sienna': '#a0522d',\n  'silver': '#c0c0c0',\n  'skyblue': '#87ceeb',\n  'slateblue': '#6a5acd',\n  'slategray': '#708090',\n  'slategrey': '#708090',\n  'snow': '#fffafa',\n  'springgreen': '#00ff7f',\n  'steelblue': '#4682b4',\n  'tan': '#d2b48c',\n  'teal': '#008080',\n  'thistle': '#d8bfd8',\n  'tomato': '#ff6347',\n  'turquoise': '#40e0d0',\n  'violet': '#ee82ee',\n  'wheat': '#f5deb3',\n  'white': '#ffffff',\n  'whitesmoke': '#f5f5f5',\n  'yellow': '#ffff00',\n  'yellowgreen': '#9acd32'\n};\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Utilities related to color and color conversion.\n * Some of this code is borrowed and modified from goog.color and\n * goog.color.alpha.\n */\n\ngoog.provide('bot.color');\n\ngoog.require('goog.array');\ngoog.require('goog.color.names');\n\n\n/**\n * Returns a property, with a standardized color if it contains a\n * convertible color.\n * @param {string} propertyName Name of the CSS property in camelCase.\n * @param {string} propertyValue The value of the CSS property.\n * @return {string} The value, in a standardized format\n *    if it is a color property.\n */\nbot.color.standardizeColor = function (propertyName, propertyValue) {\n  if (!goog.array.contains(bot.color.COLOR_PROPERTIES_, propertyName)) {\n    return propertyValue;\n  }\n  var rgba =\n    bot.color.maybeParseRgbaColor_(propertyValue) ||\n    bot.color.maybeParseRgbColor_(propertyValue) ||\n    bot.color.maybeConvertHexOrColorName_(propertyValue);\n  return rgba ? 'rgba(' + rgba.join(', ') + ')' : propertyValue;\n};\n\n\n/**\n * Used to determine whether a css property contains a color and\n * should therefore be standardized to rgba.\n * These are  extracted from the W3C CSS spec:\n *\n * http://www.w3.org/TR/CSS/#properties\n *\n * @const\n * @private {!Array.<string>}\n */\nbot.color.COLOR_PROPERTIES_ = [\n  'backgroundColor',\n  'borderTopColor',\n  'borderRightColor',\n  'borderBottomColor',\n  'borderLeftColor',\n  'color',\n  'outlineColor'\n];\n\n\n/**\n * Regular expression for extracting the digits in a hex color triplet.\n * @private {!RegExp}\n * @const\n */\nbot.color.HEX_TRIPLET_RE_ = /#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])/;\n\n\n/**\n * Converts a hex representation of a color to RGB.\n * @param {string} hexOrColorName Color to convert.\n * @return {?Array} array containing [r, g, b, 1] as ints in [0, 255] or null\n *     for invalid colors.\n * @private\n */\nbot.color.maybeConvertHexOrColorName_ = function (hexOrColorName) {\n  hexOrColorName = hexOrColorName.toLowerCase();\n  var hex = goog.color.names[hexOrColorName.toLowerCase()];\n  if (!hex) {\n    hex = hexOrColorName.charAt(0) == '#' ?\n      hexOrColorName : '#' + hexOrColorName;\n    if (hex.length == 4) { // of the form #RGB\n      hex = hex.replace(bot.color.HEX_TRIPLET_RE_, '#$1$1$2$2$3$3');\n    }\n\n    if (!bot.color.VALID_HEX_COLOR_RE_.test(hex)) {\n      return null;\n    }\n  }\n\n  var r = parseInt(hex.substr(1, 2), 16);\n  var g = parseInt(hex.substr(3, 2), 16);\n  var b = parseInt(hex.substr(5, 2), 16);\n\n  return [r, g, b, 1];\n};\n\n\n/**\n * Helper for isValidHexColor_.\n * @private {!RegExp}\n * @const\n */\nbot.color.VALID_HEX_COLOR_RE_ = /^#(?:[0-9a-f]{3}){1,2}$/i;\n\n\n/**\n * Regular expression for matching and capturing RGBA style strings.\n * @private {!RegExp}\n * @const\n */\nbot.color.RGBA_COLOR_RE_ =\n  /^(?:rgba)?\\((\\d{1,3}),\\s?(\\d{1,3}),\\s?(\\d{1,3}),\\s?(0|1|0\\.\\d*)\\)$/i;\n\n\n/**\n * Attempts to parse a string as an rgba color.  We expect strings of the\n * format '(r, g, b, a)', or 'rgba(r, g, b, a)', where r, g, b are ints in\n * [0, 255] and a is a float in [0, 1].\n * @param {string} str String to check.\n * @return {?Array.<number>} the integers [r, g, b, a] for valid colors or null\n *     for invalid colors.\n * @private\n */\nbot.color.maybeParseRgbaColor_ = function (str) {\n  // Each component is separate (rather than using a repeater) so we can\n  // capture the match. Also, we explicitly set each component to be either 0,\n  // or start with a non-zero, to prevent octal numbers from slipping through.\n  var regExpResultArray = str.match(bot.color.RGBA_COLOR_RE_);\n  if (regExpResultArray) {\n    var r = Number(regExpResultArray[1]);\n    var g = Number(regExpResultArray[2]);\n    var b = Number(regExpResultArray[3]);\n    var a = Number(regExpResultArray[4]);\n    if (r >= 0 && r <= 255 &&\n      g >= 0 && g <= 255 &&\n      b >= 0 && b <= 255 &&\n      a >= 0 && a <= 1) {\n      return [r, g, b, a];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Regular expression for matching and capturing RGB style strings.\n * @private {!RegExp}\n * @const\n */\nbot.color.RGB_COLOR_RE_ =\n  /^(?:rgb)?\\((0|[1-9]\\d{0,2}),\\s?(0|[1-9]\\d{0,2}),\\s?(0|[1-9]\\d{0,2})\\)$/i;\n\n\n/**\n * Attempts to parse a string as an rgb color.  We expect strings of the format\n * '(r, g, b)', or 'rgb(r, g, b)', where each color component is an int in\n * [0, 255].\n * @param {string} str String to check.\n * @return {?Array.<number>} the integers [r, g, b, 1] for valid colors or null\n *     for invalid colors.\n * @private\n */\nbot.color.maybeParseRgbColor_ = function (str) {\n  // Each component is separate (rather than using a repeater) so we can\n  // capture the match. Also, we explicitly set each component to be either 0,\n  // or start with a non-zero, to prevent octal numbers from slipping through.\n  var regExpResultArray = str.match(bot.color.RGB_COLOR_RE_);\n  if (regExpResultArray) {\n    var r = Number(regExpResultArray[1]);\n    var g = Number(regExpResultArray[2]);\n    var b = Number(regExpResultArray[3]);\n    if (r >= 0 && r <= 255 &&\n      g >= 0 && g <= 255 &&\n      b >= 0 && b <= 255) {\n      return [r, g, b, 1];\n    }\n  }\n  return null;\n};\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Utilities for working with errors as defined by WebDriver's\n * wire protocol: https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol\n */\n\ngoog.provide('bot.Error');\ngoog.provide('bot.ErrorCode');\n\n\n/**\n * Error codes from the Selenium WebDriver protocol:\n * https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#response-status-codes\n *\n * @enum {number}\n * @suppress {lintChecks}\n */\nbot.ErrorCode = {\n  SUCCESS: 0,  // Included for completeness\n\n  NO_SUCH_ELEMENT: 7,\n  NO_SUCH_FRAME: 8,\n  UNKNOWN_COMMAND: 9,\n  UNSUPPORTED_OPERATION: 9,  // Alias.\n  STALE_ELEMENT_REFERENCE: 10,\n  ELEMENT_NOT_VISIBLE: 11,\n  INVALID_ELEMENT_STATE: 12,\n  UNKNOWN_ERROR: 13,\n  ELEMENT_NOT_SELECTABLE: 15,\n  JAVASCRIPT_ERROR: 17,\n  XPATH_LOOKUP_ERROR: 19,\n  TIMEOUT: 21,\n  NO_SUCH_WINDOW: 23,\n  INVALID_COOKIE_DOMAIN: 24,\n  UNABLE_TO_SET_COOKIE: 25,\n  UNEXPECTED_ALERT_OPEN: 26,\n  NO_SUCH_ALERT: 27,\n  SCRIPT_TIMEOUT: 28,\n  INVALID_ELEMENT_COORDINATES: 29,\n  IME_NOT_AVAILABLE: 30,\n  IME_ENGINE_ACTIVATION_FAILED: 31,\n  INVALID_SELECTOR_ERROR: 32,\n  SESSION_NOT_CREATED: 33,\n  MOVE_TARGET_OUT_OF_BOUNDS: 34,\n  SQL_DATABASE_ERROR: 35,\n  INVALID_XPATH_SELECTOR: 51,\n  INVALID_XPATH_SELECTOR_RETURN_TYPE: 52,\n  INVALID_ARGUMENT: 61,\n  // The following error codes are derived straight from HTTP return codes.\n  METHOD_NOT_ALLOWED: 405\n};\n\n\n/**\n * Represents an error returned from a WebDriver command request.\n *\n * @param {!bot.ErrorCode} code The error's status code.\n * @param {string=} opt_message Optional error message.\n * @constructor\n * @extends {Error}\n */\nbot.Error = function (code, opt_message) {\n\n  /**\n   * This error's status code.\n   * @type {!bot.ErrorCode}\n   */\n  this.code = code;\n\n  /** @type {string} */\n  this.state =\n    bot.Error.CODE_TO_STATE_[code] || bot.Error.State.UNKNOWN_ERROR;\n\n  /** @override */\n  this.message = opt_message || '';\n\n  var name = this.state.replace(/((?:^|\\s+)[a-z])/g, function (str) {\n    // IE<9 does not support String#trim(). Also, IE does not include 0xa0\n    // (the non-breaking-space) in the \\s character class, so we have to\n    // explicitly include it.\n    return str.toUpperCase().replace(/^[\\s\\xa0]+/g, '');\n  });\n\n  var l = name.length - 'Error'.length;\n  if (l < 0 || name.indexOf('Error', l) != l) {\n    name += 'Error';\n  }\n\n  /** @override */\n  this.name = name;\n\n  // Generate a stacktrace for our custom error; ensure the error has our\n  // custom name and message so the stack prints correctly in all browsers.\n  var template = new Error(this.message);\n  template.name = this.name;\n\n  /** @override */\n  this.stack = template.stack || '';\n};\ngoog.inherits(bot.Error, Error);\n\n\n/**\n * Status strings enumerated in the W3C WebDriver protocol.\n * @enum {string}\n * @see https://w3c.github.io/webdriver/webdriver-spec.html#handling-errors\n */\nbot.Error.State = {\n  ELEMENT_NOT_SELECTABLE: 'element not selectable',\n  ELEMENT_NOT_VISIBLE: 'element not visible',\n  INVALID_ARGUMENT: 'invalid argument',\n  INVALID_COOKIE_DOMAIN: 'invalid cookie domain',\n  INVALID_ELEMENT_COORDINATES: 'invalid element coordinates',\n  INVALID_ELEMENT_STATE: 'invalid element state',\n  INVALID_SELECTOR: 'invalid selector',\n  INVALID_SESSION_ID: 'invalid session id',\n  JAVASCRIPT_ERROR: 'javascript error',\n  MOVE_TARGET_OUT_OF_BOUNDS: 'move target out of bounds',\n  NO_SUCH_ALERT: 'no such alert',\n  NO_SUCH_ELEMENT: 'no such element',\n  NO_SUCH_FRAME: 'no such frame',\n  NO_SUCH_WINDOW: 'no such window',\n  SCRIPT_TIMEOUT: 'script timeout',\n  SESSION_NOT_CREATED: 'session not created',\n  STALE_ELEMENT_REFERENCE: 'stale element reference',\n  TIMEOUT: 'timeout',\n  UNABLE_TO_SET_COOKIE: 'unable to set cookie',\n  UNEXPECTED_ALERT_OPEN: 'unexpected alert open',\n  UNKNOWN_COMMAND: 'unknown command',\n  UNKNOWN_ERROR: 'unknown error',\n  UNKNOWN_METHOD: 'unknown method',\n  UNSUPPORTED_OPERATION: 'unsupported operation'\n};\n\n\n/**\n * A map of error codes to state string.\n * @private {!Object.<bot.ErrorCode, bot.Error.State>}\n */\nbot.Error.CODE_TO_STATE_ = {};\ngoog.scope(function () {\n  var map = bot.Error.CODE_TO_STATE_;\n  var code = bot.ErrorCode;\n  var state = bot.Error.State;\n\n  map[code.ELEMENT_NOT_SELECTABLE] = state.ELEMENT_NOT_SELECTABLE;\n  map[code.ELEMENT_NOT_VISIBLE] = state.ELEMENT_NOT_VISIBLE;\n  map[code.IME_ENGINE_ACTIVATION_FAILED] = state.UNKNOWN_ERROR;\n  map[code.IME_NOT_AVAILABLE] = state.UNKNOWN_ERROR;\n  map[code.INVALID_COOKIE_DOMAIN] = state.INVALID_COOKIE_DOMAIN;\n  map[code.INVALID_ELEMENT_COORDINATES] = state.INVALID_ELEMENT_COORDINATES;\n  map[code.INVALID_ELEMENT_STATE] = state.INVALID_ELEMENT_STATE;\n  map[code.INVALID_SELECTOR_ERROR] = state.INVALID_SELECTOR;\n  map[code.INVALID_XPATH_SELECTOR] = state.INVALID_SELECTOR;\n  map[code.INVALID_XPATH_SELECTOR_RETURN_TYPE] = state.INVALID_SELECTOR;\n  map[code.JAVASCRIPT_ERROR] = state.JAVASCRIPT_ERROR;\n  map[code.METHOD_NOT_ALLOWED] = state.UNSUPPORTED_OPERATION;\n  map[code.MOVE_TARGET_OUT_OF_BOUNDS] = state.MOVE_TARGET_OUT_OF_BOUNDS;\n  map[code.NO_SUCH_ALERT] = state.NO_SUCH_ALERT;\n  map[code.NO_SUCH_ELEMENT] = state.NO_SUCH_ELEMENT;\n  map[code.NO_SUCH_FRAME] = state.NO_SUCH_FRAME;\n  map[code.NO_SUCH_WINDOW] = state.NO_SUCH_WINDOW;\n  map[code.SCRIPT_TIMEOUT] = state.SCRIPT_TIMEOUT;\n  map[code.SESSION_NOT_CREATED] = state.SESSION_NOT_CREATED;\n  map[code.STALE_ELEMENT_REFERENCE] = state.STALE_ELEMENT_REFERENCE;\n  map[code.TIMEOUT] = state.TIMEOUT;\n  map[code.UNABLE_TO_SET_COOKIE] = state.UNABLE_TO_SET_COOKIE;\n  map[code.UNEXPECTED_ALERT_OPEN] = state.UNEXPECTED_ALERT_OPEN;\n  map[code.UNKNOWN_ERROR] = state.UNKNOWN_ERROR;\n  map[code.UNSUPPORTED_OPERATION] = state.UNKNOWN_COMMAND;\n});  // goog.scope\n\n\n/**\n * Flag used for duck-typing when this code is embedded in a Firefox extension.\n * This is required since an Error thrown in one component and then reported\n * to another will fail instanceof checks in the second component.\n * @type {boolean}\n */\nbot.Error.prototype.isAutomationError = true;\n\n\nif (goog.DEBUG) {\n  /**\n   * @override\n   * @return {string} The string representation of this error.\n   */\n  bot.Error.prototype.toString = function () {\n    return this.name + ': ' + this.message;\n  };\n}\n","// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Detects the specific browser and not just the rendering engine.\n */\n\ngoog.provide('goog.userAgent.product');\n\ngoog.require('goog.labs.userAgent.browser');\ngoog.require('goog.labs.userAgent.platform');\ngoog.require('goog.userAgent');\n\n\n/**\n * @define {boolean} Whether the code is running on the Firefox web browser.\n */\ngoog.userAgent.product.ASSUME_FIREFOX =\n    goog.define('goog.userAgent.product.ASSUME_FIREFOX', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the product is an\n *     iPhone.\n */\ngoog.userAgent.product.ASSUME_IPHONE =\n    goog.define('goog.userAgent.product.ASSUME_IPHONE', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the product is an\n *     iPad.\n */\ngoog.userAgent.product.ASSUME_IPAD =\n    goog.define('goog.userAgent.product.ASSUME_IPAD', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the product is an\n *     AOSP browser or WebView inside a pre KitKat Android phone or tablet.\n */\ngoog.userAgent.product.ASSUME_ANDROID =\n    goog.define('goog.userAgent.product.ASSUME_ANDROID', false);\n\n\n/**\n * @define {boolean} Whether the code is running on the Chrome web browser on\n * any platform or AOSP browser or WebView in a KitKat+ Android phone or tablet.\n */\ngoog.userAgent.product.ASSUME_CHROME =\n    goog.define('goog.userAgent.product.ASSUME_CHROME', false);\n\n\n/**\n * @define {boolean} Whether the code is running on the Safari web browser.\n */\ngoog.userAgent.product.ASSUME_SAFARI =\n    goog.define('goog.userAgent.product.ASSUME_SAFARI', false);\n\n\n/**\n * Whether we know the product type at compile-time.\n * @type {boolean}\n * @private\n */\ngoog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE ||\n    goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_OPERA ||\n    goog.userAgent.product.ASSUME_FIREFOX ||\n    goog.userAgent.product.ASSUME_IPHONE ||\n    goog.userAgent.product.ASSUME_IPAD ||\n    goog.userAgent.product.ASSUME_ANDROID ||\n    goog.userAgent.product.ASSUME_CHROME ||\n    goog.userAgent.product.ASSUME_SAFARI;\n\n\n/**\n * Whether the code is running on the Opera web browser.\n * @type {boolean}\n */\ngoog.userAgent.product.OPERA = goog.userAgent.OPERA;\n\n\n/**\n * Whether the code is running on an IE web browser.\n * @type {boolean}\n */\ngoog.userAgent.product.IE = goog.userAgent.IE;\n\n\n/**\n * Whether the code is running on an Edge web browser (EdgeHTML based).\n * @type {boolean}\n */\ngoog.userAgent.product.EDGE = goog.userAgent.EDGE;\n\n\n/**\n * Whether the code is running on the Firefox web browser.\n * @type {boolean}\n */\ngoog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ?\n    goog.userAgent.product.ASSUME_FIREFOX :\n    goog.labs.userAgent.browser.isFirefox();\n\n\n/**\n * Whether the user agent is an iPhone or iPod (as in iPod touch).\n * @return {boolean}\n * @private\n */\ngoog.userAgent.product.isIphoneOrIpod_ = function() {\n  return goog.labs.userAgent.platform.isIphone() ||\n      goog.labs.userAgent.platform.isIpod();\n};\n\n\n/**\n * Whether the code is running on an iPhone or iPod touch.\n *\n * iPod touch is considered an iPhone for legacy reasons.\n * @type {boolean}\n */\ngoog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ?\n    goog.userAgent.product.ASSUME_IPHONE :\n    goog.userAgent.product.isIphoneOrIpod_();\n\n\n/**\n * Whether the code is running on an iPad.\n * @type {boolean}\n */\ngoog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ?\n    goog.userAgent.product.ASSUME_IPAD :\n    goog.labs.userAgent.platform.isIpad();\n\n\n/**\n * Whether the code is running on AOSP browser or WebView inside\n * a pre KitKat Android phone or tablet.\n * @type {boolean}\n */\ngoog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ?\n    goog.userAgent.product.ASSUME_ANDROID :\n    goog.labs.userAgent.browser.isAndroidBrowser();\n\n\n/**\n * Whether the code is running on any Chromium-based web browser on any platform\n * or AOSP browser or WebView in a KitKat+ Android phone or tablet.\n * @type {boolean}\n */\ngoog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ?\n    goog.userAgent.product.ASSUME_CHROME :\n    goog.labs.userAgent.browser.isChrome();\n\n\n/**\n * @return {boolean} Whether the browser is Safari on desktop.\n * @private\n */\ngoog.userAgent.product.isSafariDesktop_ = function() {\n  return goog.labs.userAgent.browser.isSafari() &&\n      !goog.labs.userAgent.platform.isIos();\n};\n\n\n/**\n * Whether the code is running on the desktop Safari web browser.\n * Note: the legacy behavior here is only true for Safari not running\n * on iOS.\n * @type {boolean}\n */\ngoog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ?\n    goog.userAgent.product.ASSUME_SAFARI :\n    goog.userAgent.product.isSafariDesktop_();\n","// Copyright 2009 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Functions for understanding the version of the browser.\n * This is pulled out of product.js to ensure that only builds that need\n * this functionality actually get it, without having to rely on the compiler\n * to strip out unneeded pieces.\n *\n * TODO(nnaze): Move to more appropriate filename/namespace.\n */\n\n\ngoog.provide('goog.userAgent.product.isVersion');\n\n\ngoog.require('goog.labs.userAgent.platform');\ngoog.require('goog.string');\ngoog.require('goog.userAgent');\ngoog.require('goog.userAgent.product');\n\n\n/**\n * @return {string} The string that describes the version number of the user\n *     agent product.  This is a string rather than a number because it may\n *     contain 'b', 'a', and so on.\n * @private\n */\ngoog.userAgent.product.determineVersion_ = function() {\n  // All browsers have different ways to detect the version and they all have\n  // different naming schemes.\n\n  if (goog.userAgent.product.FIREFOX) {\n    // Firefox/2.0.0.1 or Firefox/3.5.3\n    return goog.userAgent.product.getFirstRegExpGroup_(/Firefox\\/([0-9.]+)/);\n  }\n\n  if (goog.userAgent.product.IE || goog.userAgent.product.EDGE ||\n      goog.userAgent.product.OPERA) {\n    return goog.userAgent.VERSION;\n  }\n\n  if (goog.userAgent.product.CHROME) {\n    if (goog.labs.userAgent.platform.isIos()) {\n      // CriOS/56.0.2924.79\n      return goog.userAgent.product.getFirstRegExpGroup_(/CriOS\\/([0-9.]+)/);\n    }\n    // Chrome/4.0.223.1\n    return goog.userAgent.product.getFirstRegExpGroup_(/Chrome\\/([0-9.]+)/);\n  }\n\n  // This replicates legacy logic, which considered Safari and iOS to be\n  // different products.\n  if (goog.userAgent.product.SAFARI && !goog.labs.userAgent.platform.isIos()) {\n    // Version/5.0.3\n    //\n    // NOTE: Before version 3, Safari did not report a product version number.\n    // The product version number for these browsers will be the empty string.\n    // They may be differentiated by WebKit version number in goog.userAgent.\n    return goog.userAgent.product.getFirstRegExpGroup_(/Version\\/([0-9.]+)/);\n  }\n\n  if (goog.userAgent.product.IPHONE || goog.userAgent.product.IPAD) {\n    // Mozilla/5.0 (iPod; U; CPU like Mac OS X; en) AppleWebKit/420.1\n    // (KHTML, like Gecko) Version/3.0 Mobile/3A100a Safari/419.3\n    // Version is the browser version, Mobile is the build number. We combine\n    // the version string with the build number: 3.0.3A100a for the example.\n    var arr =\n        goog.userAgent.product.execRegExp_(/Version\\/(\\S+).*Mobile\\/(\\S+)/);\n    if (arr) {\n      return arr[1] + '.' + arr[2];\n    }\n  } else if (goog.userAgent.product.ANDROID) {\n    // Mozilla/5.0 (Linux; U; Android 0.5; en-us) AppleWebKit/522+\n    // (KHTML, like Gecko) Safari/419.3\n    //\n    // Mozilla/5.0 (Linux; U; Android 1.0; en-us; dream) AppleWebKit/525.10+\n    // (KHTML, like Gecko) Version/3.0.4 Mobile Safari/523.12.2\n    //\n    // Prefer Version number if present, else make do with the OS number\n    var version =\n        goog.userAgent.product.getFirstRegExpGroup_(/Android\\s+([0-9.]+)/);\n    if (version) {\n      return version;\n    }\n\n    return goog.userAgent.product.getFirstRegExpGroup_(/Version\\/([0-9.]+)/);\n  }\n\n  return '';\n};\n\n\n/**\n * Return the first group of the given regex.\n * @param {!RegExp} re Regular expression with at least one group.\n * @return {string} Contents of the first group or an empty string if no match.\n * @private\n */\ngoog.userAgent.product.getFirstRegExpGroup_ = function(re) {\n  var arr = goog.userAgent.product.execRegExp_(re);\n  return arr ? arr[1] : '';\n};\n\n\n/**\n * Run regexp's exec() on the userAgent string.\n * @param {!RegExp} re Regular expression.\n * @return {?IArrayLike<string>} A result array, or null for no match.\n * @private\n */\ngoog.userAgent.product.execRegExp_ = function(re) {\n  return re.exec(goog.userAgent.getUserAgentString());\n};\n\n\n/**\n * The version of the user agent. This is a string because it might contain\n * 'b' (as in beta) as well as multiple dots.\n * @type {string}\n */\ngoog.userAgent.product.VERSION = goog.userAgent.product.determineVersion_();\n\n\n/**\n * Whether the user agent product version is higher or the same as the given\n * version.\n *\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the user agent product version is higher or the\n *     same as the given version.\n */\ngoog.userAgent.product.isVersion = function(version) {\n  return goog.string.compareVersions(goog.userAgent.product.VERSION, version) >=\n      0;\n};\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Similar to goog.userAgent.isVersion, but with support for\n * getting the version information when running in a firefox extension.\n */\ngoog.provide('bot.userAgent');\n\ngoog.require('goog.string');\ngoog.require('goog.userAgent');\ngoog.require('goog.userAgent.product');\ngoog.require('goog.userAgent.product.isVersion');\n\n\n/**\n * Whether the rendering engine version of the current browser is equal to or\n * greater than the given version. This implementation differs from\n * goog.userAgent.isVersion in the following ways:\n * <ol>\n * <li>in a Firefox extension, tests the engine version through the XUL version\n *     comparator service, because no window.navigator object is available\n * <li>in IE, compares the given version to the current documentMode\n * </ol>\n *\n * @param {string|number} version The version number to check.\n * @return {boolean} Whether the browser engine version is the same or higher\n *     than the given version.\n */\nbot.userAgent.isEngineVersion = function (version) {\n  if (goog.userAgent.IE) {\n    return goog.string.compareVersions(\n        /** @type {number} */(goog.userAgent.DOCUMENT_MODE), version) >= 0;\n  } else {\n    return goog.userAgent.isVersionOrHigher(version);\n  }\n};\n\n\n/**\n * Whether the product version of the current browser is equal to or greater\n * than the given version. This implementation differs from\n * goog.userAgent.product.isVersion in the following ways:\n * <ol>\n * <li>in a Firefox extension, tests the product version through the XUL version\n *     comparator service, because no window.navigator object is available\n * <li>on Android, always compares to the version to the OS version\n * </ol>\n *\n * @param {string|number} version The version number to check.\n * @return {boolean} Whether the browser product version is the same or higher\n *     than the given version.\n */\nbot.userAgent.isProductVersion = function (version) {\n  if (goog.userAgent.product.ANDROID) {\n    return goog.string.compareVersions(\n      bot.userAgent.ANDROID_VERSION_, version) >= 0;\n  } else {\n    return goog.userAgent.product.isVersion(version);\n  }\n};\n\n\n/**\n * Whether we are a WebExtension.\n *\n * @const\n * @type {boolean}\n */\nbot.userAgent.WEBEXTENSION = (function () {\n  // The content script global object is different than it's window\n  // Which requires accessing the chrome and browser objects through this\n  try {\n    return !!((goog.global.chrome || goog.global.browser)['extension']);\n  } catch (e) {\n    return false;\n  }\n})();\n\n/**\n * Whether we are on IOS.\n *\n * @const\n * @type {boolean}\n */\nbot.userAgent.IOS = goog.userAgent.product.IPAD ||\n  goog.userAgent.product.IPHONE;\n\n\n/**\n * Whether we are on a mobile browser.\n *\n * @const\n * @type {boolean}\n */\nbot.userAgent.MOBILE = bot.userAgent.IOS || goog.userAgent.product.ANDROID;\n\n\n/**\n * Android Operating System Version.\n * @private {string}\n * @const\n */\nbot.userAgent.ANDROID_VERSION_ = (function () {\n  if (goog.userAgent.product.ANDROID) {\n    var userAgentString = goog.userAgent.getUserAgentString();\n    var match = /Android\\s+([0-9\\.]+)/.exec(userAgentString);\n    return match ? match[1] : '0';\n  } else {\n    return '0';\n  }\n})();\n\n\n/**\n * Whether the current document is IE in a documentMode older than 8.\n * @type {boolean}\n * @const\n */\nbot.userAgent.IE_DOC_PRE8 = goog.userAgent.IE &&\n  !goog.userAgent.isDocumentModeOrHigher(8);\n\n\n/**\n * Whether the current document is IE in IE9 (or newer) standards mode.\n * @type {boolean}\n * @const\n */\nbot.userAgent.IE_DOC_9 = goog.userAgent.isDocumentModeOrHigher(9);\n\n\n/**\n * Whether the current document is IE in a documentMode older than 9.\n * @type {boolean}\n * @const\n */\nbot.userAgent.IE_DOC_PRE9 = goog.userAgent.IE &&\n  !goog.userAgent.isDocumentModeOrHigher(9);\n\n\n/**\n * Whether the current document is IE in IE10 (or newer) standards mode.\n * @type {boolean}\n * @const\n */\nbot.userAgent.IE_DOC_10 = goog.userAgent.isDocumentModeOrHigher(10);\n\n\n/**\n * Whether the current document is IE in a documentMode older than 10.\n * @type {boolean}\n * @const\n */\nbot.userAgent.IE_DOC_PRE10 = goog.userAgent.IE &&\n  !goog.userAgent.isDocumentModeOrHigher(10);\n\n\n/**\n * Whether the current browser is Android pre-gingerbread.\n * @type {boolean}\n * @const\n */\nbot.userAgent.ANDROID_PRE_GINGERBREAD = goog.userAgent.product.ANDROID &&\n  !bot.userAgent.isProductVersion(2.3);\n\n\n/**\n * Whether the current browser is Android pre-icecreamsandwich\n * @type {boolean}\n * @const\n */\nbot.userAgent.ANDROID_PRE_ICECREAMSANDWICH = goog.userAgent.product.ANDROID &&\n  !bot.userAgent.isProductVersion(4);\n\n\n/**\n * Whether the current browser is Safari 6.\n * @type {boolean}\n * @const\n */\nbot.userAgent.SAFARI_6 = goog.userAgent.product.SAFARI &&\n  bot.userAgent.isProductVersion(6);\n\n\n/**\n * Whether the current browser is Windows Phone.\n * @type {boolean}\n * @const\n */\nbot.userAgent.WINDOWS_PHONE = goog.userAgent.IE &&\n  goog.userAgent.getUserAgentString().indexOf('IEMobile') != -1;\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines the core DOM querying library for the atoms, with a\n * minimal set of dependencies. Notably, this file should never have a\n * dependency on CSS or XPath polyfill libraries (sizzle and wgxpath,\n * respectively).\n */\n\ngoog.provide('bot.dom.core');\n\ngoog.require('bot.Error');\ngoog.require('bot.ErrorCode');\ngoog.require('bot.userAgent');\ngoog.require('goog.array');\ngoog.require('goog.dom');\ngoog.require('goog.dom.NodeType');\ngoog.require('goog.dom.TagName');\n\n\n/**\n * Get the user-specified value of the given attribute of the element, or null\n * if the attribute is not present.\n *\n * <p>For boolean attributes such as \"selected\" or \"checked\", this method\n * returns the value of element.getAttribute(attributeName) cast to a String\n * when attribute is present. For modern browsers, this will be the string the\n * attribute is given in the HTML, but for IE8 it will be the name of the\n * attribute, and for IE7, it will be the string \"true\". To test whether a\n * boolean attribute is present, test whether the return value is non-null, the\n * same as one would for non-boolean attributes. Specifically, do *not* test\n * whether the boolean evaluation of the return value is true, because the value\n * of a boolean attribute that is present will often be the empty string.\n *\n * <p>For the style attribute, it standardizes the value by lower-casing the\n * property names and always including a trailing semicolon.\n *\n * @param {!Element} element The element to use.\n * @param {string} attributeName The name of the attribute to return.\n * @return {?string} The value of the attribute or \"null\" if entirely missing.\n */\nbot.dom.core.getAttribute = function (element, attributeName) {\n  attributeName = attributeName.toLowerCase();\n\n  // The style attribute should be a css text string that includes only what\n  // the HTML element specifies itself (excluding what is inherited from parent\n  // elements or style sheets). We standardize the format of this string via the\n  // standardizeStyleAttribute method.\n  if (attributeName == 'style') {\n    return bot.dom.core.standardizeStyleAttribute_(element.style.cssText);\n  }\n\n  // In IE doc mode < 8, the \"value\" attribute of an <input> is only accessible\n  // as a property.\n  if (bot.userAgent.IE_DOC_PRE8 && attributeName == 'value' &&\n    bot.dom.core.isElement(element, goog.dom.TagName.INPUT)) {\n    return element['value'];\n  }\n\n  // In IE < 9, element.getAttributeNode will return null for some boolean\n  // attributes that are present, such as the selected attribute on <option>\n  // elements. This if-statement is sufficient if these cases are restricted\n  // to boolean attributes whose reflected property names are all lowercase\n  // (as attributeName is by this point), like \"selected\". We have not\n  // found a boolean attribute for which this does not work.\n  if (bot.userAgent.IE_DOC_PRE9 && element[attributeName] === true) {\n    return String(element.getAttribute(attributeName));\n  }\n\n  // When the attribute is not present, either attr will be null or\n  // attr.specified will be false.\n  var attr = element.getAttributeNode(attributeName);\n  return (attr && attr.specified) ? attr.value : null;\n};\n\n\n/**\n * Regex to split on semicolons, but not when enclosed in parens or quotes.\n * Helper for {@link bot.dom.core.standardizeStyleAttribute_}.\n * If the style attribute ends with a semicolon this will include an empty\n * string at the end of the array\n * @private {!RegExp}\n * @const\n */\nbot.dom.core.SPLIT_STYLE_ATTRIBUTE_ON_SEMICOLONS_REGEXP_ =\n  new RegExp('[;]+' +\n    '(?=(?:(?:[^\"]*\"){2})*[^\"]*$)' +\n    '(?=(?:(?:[^\\']*\\'){2})*[^\\']*$)' +\n    '(?=(?:[^()]*\\\\([^()]*\\\\))*[^()]*$)');\n\n\n/**\n * Standardize a style attribute value, which includes:\n *  (1) converting all property names lowercase\n *  (2) ensuring it ends in a trailing semicolon\n * @param {string} value The style attribute value.\n * @return {string} The identical value, with the formatting rules described\n *     above applied.\n * @private\n */\nbot.dom.core.standardizeStyleAttribute_ = function (value) {\n  var styleArray = value.split(\n    bot.dom.core.SPLIT_STYLE_ATTRIBUTE_ON_SEMICOLONS_REGEXP_);\n  var css = [];\n  goog.array.forEach(styleArray, function (pair) {\n    var i = pair.indexOf(':');\n    if (i > 0) {\n      var keyValue = [pair.slice(0, i), pair.slice(i + 1)];\n      if (keyValue.length == 2) {\n        css.push(keyValue[0].toLowerCase(), ':', keyValue[1], ';');\n      }\n    }\n  });\n  css = css.join('');\n  css = css.charAt(css.length - 1) == ';' ? css : css + ';';\n  return css;\n};\n\n\n/**\n * Looks up the given property (not to be confused with an attribute) on the\n * given element.\n *\n * @param {!Element} element The element to use.\n * @param {string} propertyName The name of the property.\n * @return {*} The value of the property.\n */\nbot.dom.core.getProperty = function (element, propertyName) {\n  // When an <option>'s value attribute is not set, its value property should be\n  // its text content, but IE < 8 does not adhere to that behavior, so fix it.\n  // http://www.w3.org/TR/1999/REC-html401-19991224/interact/forms.html#adef-value-OPTION\n  if (bot.userAgent.IE_DOC_PRE8 && propertyName == 'value' &&\n    bot.dom.core.isElement(element, goog.dom.TagName.OPTION) &&\n    goog.isNull(bot.dom.core.getAttribute(element, 'value'))) {\n    return goog.dom.getRawTextContent(element);\n  }\n  return element[propertyName];\n};\n\n\n\n/**\n * Returns whether the given node is an element and, optionally, whether it has\n * the given tag name. If the tag name is not provided, returns true if the node\n * is an element, regardless of the tag name.h\n *\n * @template T\n * @param {Node} node The node to test.\n * @param {(goog.dom.TagName<!T>|string)=} opt_tagName Tag name to test the node for.\n * @return {boolean} Whether the node is an element with the given tag name.\n */\nbot.dom.core.isElement = function (node, opt_tagName) {\n  // because we call this with deprecated tags such as SHADOW\n  if (opt_tagName && (typeof opt_tagName !== 'string')) {\n    opt_tagName = opt_tagName.toString();\n  }\n  return !!node && node.nodeType == goog.dom.NodeType.ELEMENT &&\n    (!opt_tagName || node.tagName.toUpperCase() == opt_tagName);\n};\n\n\n/**\n * Returns whether the element can be checked or selected.\n *\n * @param {!Element} element The element to check.\n * @return {boolean} Whether the element could be checked or selected.\n */\nbot.dom.core.isSelectable = function (element) {\n  if (bot.dom.core.isElement(element, goog.dom.TagName.OPTION)) {\n    return true;\n  }\n\n  if (bot.dom.core.isElement(element, goog.dom.TagName.INPUT)) {\n    var type = element.type.toLowerCase();\n    return type == 'checkbox' || type == 'radio';\n  }\n\n  return false;\n};\n\n\n/**\n * Returns whether the element is checked or selected.\n *\n * @param {!Element} element The element to check.\n * @return {boolean} Whether the element is checked or selected.\n */\nbot.dom.core.isSelected = function (element) {\n  if (!bot.dom.core.isSelectable(element)) {\n    throw new bot.Error(bot.ErrorCode.ELEMENT_NOT_SELECTABLE,\n      'Element is not selectable');\n  }\n\n  var propertyName = 'selected';\n  var type = element.type && element.type.toLowerCase();\n  if ('checkbox' == type || 'radio' == type) {\n    propertyName = 'checked';\n  }\n\n  return !!bot.dom.core.getProperty(element, propertyName);\n};\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Functions to locate elements by XPath.\n *\n * <p>The locator implementations below differ from the Closure functions\n * goog.dom.xml.{selectSingleNode,selectNodes} in three important ways:\n * <ol>\n * <li>they do not refer to \"document\" which is undefined in the context of a\n * Firefox extension;\n * <li> they use a default NsResolver for browsers that do not provide\n * document.createNSResolver (e.g. Android); and\n * <li> they prefer document.evaluate to node.{selectSingleNode,selectNodes}\n * because the latter silently return nothing when the xpath resolves to a\n * non-Node type, limiting the error-checking the implementation can provide.\n * </ol>\n */\n\ngoog.provide('bot.locators.xpath');\n\ngoog.require('bot');\ngoog.require('bot.Error');\ngoog.require('bot.ErrorCode');\ngoog.require('goog.array');\ngoog.require('goog.dom');\ngoog.require('goog.dom.NodeType');\ngoog.require('goog.userAgent');\ngoog.require('goog.userAgent.product');\ngoog.require('wgxpath');\n\n/**\n * XPathResult enum values. These are defined separately since\n * the context running this script may not support the XPathResult\n * type.\n * @enum {number}\n * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult\n * @private\n */\n// TODO: Move this enum back to bot.locators.xpath namespace.\n// The problem is that we alias bot.locators.xpath in locators.js, while\n// we set the flag --collapse_properties (http://goo.gl/5W6cP).\n// The compiler should have thrown the error anyways, it's a bug that it fails\n// only when introducing this enum.\n// Solution: remove --collapse_properties from the js_binary rule or\n// use goog.exportSymbol to export the public methods and get rid of the alias.\nbot.locators.XPathResult_ = {\n  ORDERED_NODE_SNAPSHOT_TYPE: 7,\n  FIRST_ORDERED_NODE_TYPE: 9\n};\n\n\n/**\n * Default XPath namespace resolver.\n * @private\n */\nbot.locators.xpath.DEFAULT_RESOLVER_ = (function () {\n  var namespaces = { svg: 'http://www.w3.org/2000/svg' };\n  return function (prefix) {\n    return namespaces[prefix] || null;\n  };\n})();\n\n\n/**\n * Evaluates an XPath expression using a W3 XPathEvaluator.\n * @param {!(Document|Element)} node The document or element to perform the\n *     search under.\n * @param {string} path The xpath to search for.\n * @param {!bot.locators.XPathResult_} resultType The desired result type.\n * @return {XPathResult} The XPathResult or null if the root's ownerDocument\n *     does not support XPathEvaluators.\n * @private\n * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-evaluate\n */\nbot.locators.xpath.evaluate_ = function (node, path, resultType) {\n  var doc = goog.dom.getOwnerDocument(node);\n\n  if (!doc.documentElement) {\n    // document is not loaded yet\n    return null;\n  }\n\n  // Let the wgxpath library be compiled away unless we are on IE or Android.\n  // TODO: Restrict this to just IE when we drop support for Froyo.\n  if (goog.userAgent.IE || goog.userAgent.product.ANDROID) {\n    wgxpath.install(goog.dom.getWindow(doc));\n  }\n\n  try {\n    var resolver = doc.createNSResolver ?\n      doc.createNSResolver(doc.documentElement) :\n      bot.locators.xpath.DEFAULT_RESOLVER_;\n\n    if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher(7)) {\n      // IE6, and only IE6, has an issue where calling a custom function\n      // directly attached to the document object does not correctly propagate\n      // thrown errors. So in that case *only* we will use apply().\n      return doc.evaluate.call(doc, path, node, resolver, resultType, null);\n\n    } else {\n      if (!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9)) {\n        var reversedNamespaces = {};\n        var allNodes = doc.getElementsByTagName(\"*\");\n        for (var i = 0; i < allNodes.length; ++i) {\n          var n = allNodes[i];\n          var ns = n.namespaceURI;\n          if (ns && !reversedNamespaces[ns]) {\n            var prefix = n.lookupPrefix(ns);\n            if (!prefix) {\n              var m = ns.match('.*/(\\\\w+)/?$');\n              if (m) {\n                prefix = m[1];\n              } else {\n                prefix = 'xhtml';\n              }\n            }\n            reversedNamespaces[ns] = prefix;\n          }\n        }\n        var namespaces = {};\n        for (var key in reversedNamespaces) {\n          namespaces[reversedNamespaces[key]] = key;\n        }\n        resolver = function (prefix) {\n          return namespaces[prefix] || null;\n        };\n      }\n\n      try {\n        return doc.evaluate(path, node, resolver, resultType, null);\n      } catch (te) {\n        if (te.name === 'TypeError') {\n          // fallback to simplified implementation\n          resolver = doc.createNSResolver ?\n            doc.createNSResolver(doc.documentElement) :\n            bot.locators.xpath.DEFAULT_RESOLVER_;\n          return doc.evaluate(path, node, resolver, resultType, null);\n        } else {\n          throw te;\n        }\n      }\n    }\n  } catch (ex) {\n    // The Firefox XPath evaluator can throw an exception if the document is\n    // queried while it's in the midst of reloading, so we ignore it. In all\n    // other cases, we assume an invalid xpath has caused the exception.\n    if (!(goog.userAgent.GECKO && ex.name == 'NS_ERROR_ILLEGAL_VALUE')) {\n      throw new bot.Error(bot.ErrorCode.INVALID_SELECTOR_ERROR,\n        'Unable to locate an element with the xpath expression ' + path +\n        ' because of the following error:\\n' + ex);\n    }\n  }\n};\n\n\n/**\n * @param {Node|undefined} node Node to check whether it is an Element.\n * @param {string} path XPath expression to include in the error message.\n * @private\n */\nbot.locators.xpath.checkElement_ = function (node, path) {\n  if (!node || node.nodeType != goog.dom.NodeType.ELEMENT) {\n    throw new bot.Error(bot.ErrorCode.INVALID_SELECTOR_ERROR,\n      'The result of the xpath expression \"' + path +\n      '\" is: ' + node + '. It should be an element.');\n  }\n};\n\n\n/**\n * Find an element by using an xpath expression\n * @param {string} target The xpath to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @return {Element} The first matching element found in the DOM, or null if no\n *     such element could be found.\n */\nbot.locators.xpath.single = function (target, root) {\n\n  function selectSingleNode() {\n    var result = bot.locators.xpath.evaluate_(root, target,\n      bot.locators.XPathResult_.FIRST_ORDERED_NODE_TYPE);\n\n    if (result) {\n      var node = result.singleNodeValue;\n      return node || null;\n    } else if (root.selectSingleNode) {\n      var doc = goog.dom.getOwnerDocument(root);\n      if (doc.setProperty) {\n        doc.setProperty('SelectionLanguage', 'XPath');\n      }\n      return root.selectSingleNode(target);\n    }\n    return null;\n  }\n\n  var node = selectSingleNode();\n  if (!goog.isNull(node)) {\n    bot.locators.xpath.checkElement_(node, target);\n  }\n  return /** @type {Element} */ (node);\n};\n\n\n/**\n * Find elements by using an xpath expression\n * @param {string} target The xpath to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @return {!IArrayLike} All matching elements, or an empty list.\n */\nbot.locators.xpath.many = function (target, root) {\n\n  function selectNodes() {\n    var result = bot.locators.xpath.evaluate_(root, target,\n      bot.locators.XPathResult_.ORDERED_NODE_SNAPSHOT_TYPE);\n    if (result) {\n      var count = result.snapshotLength;\n      var results = [];\n      for (var i = 0; i < count; ++i) {\n        results.push(result.snapshotItem(i));\n      }\n      return results;\n    } else if (root.selectNodes) {\n      var doc = goog.dom.getOwnerDocument(root);\n      if (doc.setProperty) {\n        doc.setProperty('SelectionLanguage', 'XPath');\n      }\n      return root.selectNodes(target);\n    }\n    return [];\n  }\n\n  var nodes = selectNodes();\n  goog.array.forEach(nodes, function (n) {\n    bot.locators.xpath.checkElement_(n, target);\n  });\n  return /** @type {!IArrayLike} */ (nodes);\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A utility class for representing a numeric box.\n */\n\n\ngoog.provide('goog.math.Box');\n\ngoog.require('goog.asserts');\ngoog.require('goog.math.Coordinate');\n\n\n\n/**\n * Class for representing a box. A box is specified as a top, right, bottom,\n * and left. A box is useful for representing margins and padding.\n *\n * This class assumes 'screen coordinates': larger Y coordinates are further\n * from the top of the screen.\n *\n * @param {number} top Top.\n * @param {number} right Right.\n * @param {number} bottom Bottom.\n * @param {number} left Left.\n * @struct\n * @constructor\n */\ngoog.math.Box = function(top, right, bottom, left) {\n  /**\n   * Top\n   * @type {number}\n   */\n  this.top = top;\n\n  /**\n   * Right\n   * @type {number}\n   */\n  this.right = right;\n\n  /**\n   * Bottom\n   * @type {number}\n   */\n  this.bottom = bottom;\n\n  /**\n   * Left\n   * @type {number}\n   */\n  this.left = left;\n};\n\n\n/**\n * Creates a Box by bounding a collection of goog.math.Coordinate objects\n * @param {...goog.math.Coordinate} var_args Coordinates to be included inside\n *     the box.\n * @return {!goog.math.Box} A Box containing all the specified Coordinates.\n */\ngoog.math.Box.boundingBox = function(var_args) {\n  var box = new goog.math.Box(\n      arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);\n  for (var i = 1; i < arguments.length; i++) {\n    box.expandToIncludeCoordinate(arguments[i]);\n  }\n  return box;\n};\n\n\n/**\n * @return {number} width The width of this Box.\n */\ngoog.math.Box.prototype.getWidth = function() {\n  return this.right - this.left;\n};\n\n\n/**\n * @return {number} height The height of this Box.\n */\ngoog.math.Box.prototype.getHeight = function() {\n  return this.bottom - this.top;\n};\n\n\n/**\n * Creates a copy of the box with the same dimensions.\n * @return {!goog.math.Box} A clone of this Box.\n */\ngoog.math.Box.prototype.clone = function() {\n  return new goog.math.Box(this.top, this.right, this.bottom, this.left);\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Returns a nice string representing the box.\n   * @return {string} In the form (50t, 73r, 24b, 13l).\n   * @override\n   */\n  goog.math.Box.prototype.toString = function() {\n    return '(' + this.top + 't, ' + this.right + 'r, ' + this.bottom + 'b, ' +\n        this.left + 'l)';\n  };\n}\n\n\n/**\n * Returns whether the box contains a coordinate or another box.\n *\n * @param {goog.math.Coordinate|goog.math.Box} other A Coordinate or a Box.\n * @return {boolean} Whether the box contains the coordinate or other box.\n */\ngoog.math.Box.prototype.contains = function(other) {\n  return goog.math.Box.contains(this, other);\n};\n\n\n/**\n * Expands box with the given margins.\n *\n * @param {number|goog.math.Box} top Top margin or box with all margins.\n * @param {number=} opt_right Right margin.\n * @param {number=} opt_bottom Bottom margin.\n * @param {number=} opt_left Left margin.\n * @return {!goog.math.Box} A reference to this Box.\n */\ngoog.math.Box.prototype.expand = function(\n    top, opt_right, opt_bottom, opt_left) {\n  if (goog.isObject(top)) {\n    this.top -= top.top;\n    this.right += top.right;\n    this.bottom += top.bottom;\n    this.left -= top.left;\n  } else {\n    this.top -= /** @type {number} */ (top);\n    this.right += Number(opt_right);\n    this.bottom += Number(opt_bottom);\n    this.left -= Number(opt_left);\n  }\n\n  return this;\n};\n\n\n/**\n * Expand this box to include another box.\n * NOTE(user): This is used in code that needs to be very fast, please don't\n * add functionality to this function at the expense of speed (variable\n * arguments, accepting multiple argument types, etc).\n * @param {goog.math.Box} box The box to include in this one.\n */\ngoog.math.Box.prototype.expandToInclude = function(box) {\n  this.left = Math.min(this.left, box.left);\n  this.top = Math.min(this.top, box.top);\n  this.right = Math.max(this.right, box.right);\n  this.bottom = Math.max(this.bottom, box.bottom);\n};\n\n\n/**\n * Expand this box to include the coordinate.\n * @param {!goog.math.Coordinate} coord The coordinate to be included\n *     inside the box.\n */\ngoog.math.Box.prototype.expandToIncludeCoordinate = function(coord) {\n  this.top = Math.min(this.top, coord.y);\n  this.right = Math.max(this.right, coord.x);\n  this.bottom = Math.max(this.bottom, coord.y);\n  this.left = Math.min(this.left, coord.x);\n};\n\n\n/**\n * Compares boxes for equality.\n * @param {goog.math.Box} a A Box.\n * @param {goog.math.Box} b A Box.\n * @return {boolean} True iff the boxes are equal, or if both are null.\n */\ngoog.math.Box.equals = function(a, b) {\n  if (a == b) {\n    return true;\n  }\n  if (!a || !b) {\n    return false;\n  }\n  return a.top == b.top && a.right == b.right && a.bottom == b.bottom &&\n      a.left == b.left;\n};\n\n\n/**\n * Returns whether a box contains a coordinate or another box.\n *\n * @param {goog.math.Box} box A Box.\n * @param {goog.math.Coordinate|goog.math.Box} other A Coordinate or a Box.\n * @return {boolean} Whether the box contains the coordinate or other box.\n */\ngoog.math.Box.contains = function(box, other) {\n  if (!box || !other) {\n    return false;\n  }\n\n  if (other instanceof goog.math.Box) {\n    return other.left >= box.left && other.right <= box.right &&\n        other.top >= box.top && other.bottom <= box.bottom;\n  }\n\n  // other is a Coordinate.\n  return other.x >= box.left && other.x <= box.right && other.y >= box.top &&\n      other.y <= box.bottom;\n};\n\n\n/**\n * Returns the relative x position of a coordinate compared to a box.  Returns\n * zero if the coordinate is inside the box.\n *\n * @param {goog.math.Box} box A Box.\n * @param {goog.math.Coordinate} coord A Coordinate.\n * @return {number} The x position of `coord` relative to the nearest\n *     side of `box`, or zero if `coord` is inside `box`.\n */\ngoog.math.Box.relativePositionX = function(box, coord) {\n  if (coord.x < box.left) {\n    return coord.x - box.left;\n  } else if (coord.x > box.right) {\n    return coord.x - box.right;\n  }\n  return 0;\n};\n\n\n/**\n * Returns the relative y position of a coordinate compared to a box.  Returns\n * zero if the coordinate is inside the box.\n *\n * @param {goog.math.Box} box A Box.\n * @param {goog.math.Coordinate} coord A Coordinate.\n * @return {number} The y position of `coord` relative to the nearest\n *     side of `box`, or zero if `coord` is inside `box`.\n */\ngoog.math.Box.relativePositionY = function(box, coord) {\n  if (coord.y < box.top) {\n    return coord.y - box.top;\n  } else if (coord.y > box.bottom) {\n    return coord.y - box.bottom;\n  }\n  return 0;\n};\n\n\n/**\n * Returns the distance between a coordinate and the nearest corner/side of a\n * box. Returns zero if the coordinate is inside the box.\n *\n * @param {goog.math.Box} box A Box.\n * @param {goog.math.Coordinate} coord A Coordinate.\n * @return {number} The distance between `coord` and the nearest\n *     corner/side of `box`, or zero if `coord` is inside\n *     `box`.\n */\ngoog.math.Box.distance = function(box, coord) {\n  var x = goog.math.Box.relativePositionX(box, coord);\n  var y = goog.math.Box.relativePositionY(box, coord);\n  return Math.sqrt(x * x + y * y);\n};\n\n\n/**\n * Returns whether two boxes intersect.\n *\n * @param {goog.math.Box} a A Box.\n * @param {goog.math.Box} b A second Box.\n * @return {boolean} Whether the boxes intersect.\n */\ngoog.math.Box.intersects = function(a, b) {\n  return (\n      a.left <= b.right && b.left <= a.right && a.top <= b.bottom &&\n      b.top <= a.bottom);\n};\n\n\n/**\n * Returns whether two boxes would intersect with additional padding.\n *\n * @param {goog.math.Box} a A Box.\n * @param {goog.math.Box} b A second Box.\n * @param {number} padding The additional padding.\n * @return {boolean} Whether the boxes intersect.\n */\ngoog.math.Box.intersectsWithPadding = function(a, b, padding) {\n  return (\n      a.left <= b.right + padding && b.left <= a.right + padding &&\n      a.top <= b.bottom + padding && b.top <= a.bottom + padding);\n};\n\n\n/**\n * Rounds the fields to the next larger integer values.\n *\n * @return {!goog.math.Box} This box with ceil'd fields.\n */\ngoog.math.Box.prototype.ceil = function() {\n  this.top = Math.ceil(this.top);\n  this.right = Math.ceil(this.right);\n  this.bottom = Math.ceil(this.bottom);\n  this.left = Math.ceil(this.left);\n  return this;\n};\n\n\n/**\n * Rounds the fields to the next smaller integer values.\n *\n * @return {!goog.math.Box} This box with floored fields.\n */\ngoog.math.Box.prototype.floor = function() {\n  this.top = Math.floor(this.top);\n  this.right = Math.floor(this.right);\n  this.bottom = Math.floor(this.bottom);\n  this.left = Math.floor(this.left);\n  return this;\n};\n\n\n/**\n * Rounds the fields to nearest integer values.\n *\n * @return {!goog.math.Box} This box with rounded fields.\n */\ngoog.math.Box.prototype.round = function() {\n  this.top = Math.round(this.top);\n  this.right = Math.round(this.right);\n  this.bottom = Math.round(this.bottom);\n  this.left = Math.round(this.left);\n  return this;\n};\n\n\n/**\n * Translates this box by the given offsets. If a `goog.math.Coordinate`\n * is given, then the left and right values are translated by the coordinate's\n * x value and the top and bottom values are translated by the coordinate's y\n * value.  Otherwise, `tx` and `opt_ty` are used to translate the x\n * and y dimension values.\n *\n * @param {number|goog.math.Coordinate} tx The value to translate the x\n *     dimension values by or the the coordinate to translate this box by.\n * @param {number=} opt_ty The value to translate y dimension values by.\n * @return {!goog.math.Box} This box after translating.\n */\ngoog.math.Box.prototype.translate = function(tx, opt_ty) {\n  if (tx instanceof goog.math.Coordinate) {\n    this.left += tx.x;\n    this.right += tx.x;\n    this.top += tx.y;\n    this.bottom += tx.y;\n  } else {\n    goog.asserts.assertNumber(tx);\n    this.left += tx;\n    this.right += tx;\n    if (typeof opt_ty === 'number') {\n      this.top += opt_ty;\n      this.bottom += opt_ty;\n    }\n  }\n  return this;\n};\n\n\n/**\n * Scales this coordinate by the given scale factors. The x and y dimension\n * values are scaled by `sx` and `opt_sy` respectively.\n * If `opt_sy` is not given, then `sx` is used for both x and y.\n *\n * @param {number} sx The scale factor to use for the x dimension.\n * @param {number=} opt_sy The scale factor to use for the y dimension.\n * @return {!goog.math.Box} This box after scaling.\n */\ngoog.math.Box.prototype.scale = function(sx, opt_sy) {\n  var sy = (typeof opt_sy === 'number') ? opt_sy : sx;\n  this.left *= sx;\n  this.right *= sx;\n  this.top *= sy;\n  this.bottom *= sy;\n  return this;\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A utility class for representing rectangles. Some of these\n * functions should be migrated over to non-nullable params.\n */\n\ngoog.provide('goog.math.Rect');\n\ngoog.require('goog.asserts');\ngoog.require('goog.math.Box');\ngoog.require('goog.math.Coordinate');\ngoog.require('goog.math.IRect');\ngoog.require('goog.math.Size');\n\n\n\n/**\n * Class for representing rectangular regions.\n * @param {number} x Left.\n * @param {number} y Top.\n * @param {number} w Width.\n * @param {number} h Height.\n * @struct\n * @constructor\n * @implements {goog.math.IRect}\n */\ngoog.math.Rect = function(x, y, w, h) {\n  /** @type {number} */\n  this.left = x;\n\n  /** @type {number} */\n  this.top = y;\n\n  /** @type {number} */\n  this.width = w;\n\n  /** @type {number} */\n  this.height = h;\n};\n\n\n/**\n * @return {!goog.math.Rect} A new copy of this Rectangle.\n */\ngoog.math.Rect.prototype.clone = function() {\n  return new goog.math.Rect(this.left, this.top, this.width, this.height);\n};\n\n\n/**\n * Returns a new Box object with the same position and dimensions as this\n * rectangle.\n * @return {!goog.math.Box} A new Box representation of this Rectangle.\n */\ngoog.math.Rect.prototype.toBox = function() {\n  var right = this.left + this.width;\n  var bottom = this.top + this.height;\n  return new goog.math.Box(this.top, right, bottom, this.left);\n};\n\n\n/**\n * Creates a new Rect object with the position and size given.\n * @param {!goog.math.Coordinate} position The top-left coordinate of the Rect\n * @param {!goog.math.Size} size The size of the Rect\n * @return {!goog.math.Rect} A new Rect initialized with the given position and\n *     size.\n */\ngoog.math.Rect.createFromPositionAndSize = function(position, size) {\n  return new goog.math.Rect(position.x, position.y, size.width, size.height);\n};\n\n\n/**\n * Creates a new Rect object with the same position and dimensions as a given\n * Box.  Note that this is only the inverse of toBox if left/top are defined.\n * @param {goog.math.Box} box A box.\n * @return {!goog.math.Rect} A new Rect initialized with the box's position\n *     and size.\n */\ngoog.math.Rect.createFromBox = function(box) {\n  return new goog.math.Rect(\n      box.left, box.top, box.right - box.left, box.bottom - box.top);\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Returns a nice string representing size and dimensions of rectangle.\n   * @return {string} In the form (50, 73 - 75w x 25h).\n   * @override\n   */\n  goog.math.Rect.prototype.toString = function() {\n    return '(' + this.left + ', ' + this.top + ' - ' + this.width + 'w x ' +\n        this.height + 'h)';\n  };\n}\n\n\n/**\n * Compares rectangles for equality.\n * @param {goog.math.IRect} a A Rectangle.\n * @param {goog.math.IRect} b A Rectangle.\n * @return {boolean} True iff the rectangles have the same left, top, width,\n *     and height, or if both are null.\n */\ngoog.math.Rect.equals = function(a, b) {\n  if (a == b) {\n    return true;\n  }\n  if (!a || !b) {\n    return false;\n  }\n  return a.left == b.left && a.width == b.width && a.top == b.top &&\n      a.height == b.height;\n};\n\n\n/**\n * Computes the intersection of this rectangle and the rectangle parameter.  If\n * there is no intersection, returns false and leaves this rectangle as is.\n * @param {goog.math.IRect} rect A Rectangle.\n * @return {boolean} True iff this rectangle intersects with the parameter.\n */\ngoog.math.Rect.prototype.intersection = function(rect) {\n  var x0 = Math.max(this.left, rect.left);\n  var x1 = Math.min(this.left + this.width, rect.left + rect.width);\n\n  if (x0 <= x1) {\n    var y0 = Math.max(this.top, rect.top);\n    var y1 = Math.min(this.top + this.height, rect.top + rect.height);\n\n    if (y0 <= y1) {\n      this.left = x0;\n      this.top = y0;\n      this.width = x1 - x0;\n      this.height = y1 - y0;\n\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Returns the intersection of two rectangles. Two rectangles intersect if they\n * touch at all, for example, two zero width and height rectangles would\n * intersect if they had the same top and left.\n * @param {goog.math.IRect} a A Rectangle.\n * @param {goog.math.IRect} b A Rectangle.\n * @return {goog.math.Rect} A new intersection rect (even if width and height\n *     are 0), or null if there is no intersection.\n */\ngoog.math.Rect.intersection = function(a, b) {\n  // There is no nice way to do intersection via a clone, because any such\n  // clone might be unnecessary if this function returns null.  So, we duplicate\n  // code from above.\n\n  var x0 = Math.max(a.left, b.left);\n  var x1 = Math.min(a.left + a.width, b.left + b.width);\n\n  if (x0 <= x1) {\n    var y0 = Math.max(a.top, b.top);\n    var y1 = Math.min(a.top + a.height, b.top + b.height);\n\n    if (y0 <= y1) {\n      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);\n    }\n  }\n  return null;\n};\n\n\n/**\n * Returns whether two rectangles intersect. Two rectangles intersect if they\n * touch at all, for example, two zero width and height rectangles would\n * intersect if they had the same top and left.\n * @param {goog.math.IRect} a A Rectangle.\n * @param {goog.math.IRect} b A Rectangle.\n * @return {boolean} Whether a and b intersect.\n */\ngoog.math.Rect.intersects = function(a, b) {\n  return (\n      a.left <= b.left + b.width && b.left <= a.left + a.width &&\n      a.top <= b.top + b.height && b.top <= a.top + a.height);\n};\n\n\n/**\n * Returns whether a rectangle intersects this rectangle.\n * @param {goog.math.IRect} rect A rectangle.\n * @return {boolean} Whether rect intersects this rectangle.\n */\ngoog.math.Rect.prototype.intersects = function(rect) {\n  return goog.math.Rect.intersects(this, rect);\n};\n\n\n/**\n * Computes the difference regions between two rectangles. The return value is\n * an array of 0 to 4 rectangles defining the remaining regions of the first\n * rectangle after the second has been subtracted.\n * @param {goog.math.Rect} a A Rectangle.\n * @param {goog.math.IRect} b A Rectangle.\n * @return {!Array<!goog.math.Rect>} An array with 0 to 4 rectangles which\n *     together define the difference area of rectangle a minus rectangle b.\n */\ngoog.math.Rect.difference = function(a, b) {\n  var intersection = goog.math.Rect.intersection(a, b);\n  if (!intersection || !intersection.height || !intersection.width) {\n    return [a.clone()];\n  }\n\n  var result = [];\n\n  var top = a.top;\n  var height = a.height;\n\n  var ar = a.left + a.width;\n  var ab = a.top + a.height;\n\n  var br = b.left + b.width;\n  var bb = b.top + b.height;\n\n  // Subtract off any area on top where A extends past B\n  if (b.top > a.top) {\n    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));\n    top = b.top;\n    // If we're moving the top down, we also need to subtract the height diff.\n    height -= b.top - a.top;\n  }\n  // Subtract off any area on bottom where A extends past B\n  if (bb < ab) {\n    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));\n    height = bb - top;\n  }\n  // Subtract any area on left where A extends past B\n  if (b.left > a.left) {\n    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));\n  }\n  // Subtract any area on right where A extends past B\n  if (br < ar) {\n    result.push(new goog.math.Rect(br, top, ar - br, height));\n  }\n\n  return result;\n};\n\n\n/**\n * Computes the difference regions between this rectangle and `rect`. The\n * return value is an array of 0 to 4 rectangles defining the remaining regions\n * of this rectangle after the other has been subtracted.\n * @param {goog.math.IRect} rect A Rectangle.\n * @return {!Array<!goog.math.Rect>} An array with 0 to 4 rectangles which\n *     together define the difference area of rectangle a minus rectangle b.\n */\ngoog.math.Rect.prototype.difference = function(rect) {\n  return goog.math.Rect.difference(this, rect);\n};\n\n\n/**\n * Expand this rectangle to also include the area of the given rectangle.\n * @param {goog.math.IRect} rect The other rectangle.\n */\ngoog.math.Rect.prototype.boundingRect = function(rect) {\n  // We compute right and bottom before we change left and top below.\n  var right = Math.max(this.left + this.width, rect.left + rect.width);\n  var bottom = Math.max(this.top + this.height, rect.top + rect.height);\n\n  this.left = Math.min(this.left, rect.left);\n  this.top = Math.min(this.top, rect.top);\n\n  this.width = right - this.left;\n  this.height = bottom - this.top;\n};\n\n\n/**\n * Returns a new rectangle which completely contains both input rectangles.\n * @param {goog.math.IRect} a A rectangle.\n * @param {goog.math.IRect} b A rectangle.\n * @return {goog.math.Rect} A new bounding rect, or null if either rect is\n *     null.\n */\ngoog.math.Rect.boundingRect = function(a, b) {\n  if (!a || !b) {\n    return null;\n  }\n\n  var newRect = new goog.math.Rect(a.left, a.top, a.width, a.height);\n  newRect.boundingRect(b);\n\n  return newRect;\n};\n\n\n/**\n * Tests whether this rectangle entirely contains another rectangle or\n * coordinate.\n *\n * @param {goog.math.IRect|goog.math.Coordinate} another The rectangle or\n *     coordinate to test for containment.\n * @return {boolean} Whether this rectangle contains given rectangle or\n *     coordinate.\n */\ngoog.math.Rect.prototype.contains = function(another) {\n  if (another instanceof goog.math.Coordinate) {\n    return another.x >= this.left && another.x <= this.left + this.width &&\n        another.y >= this.top && another.y <= this.top + this.height;\n  } else {  // (another instanceof goog.math.IRect)\n    return this.left <= another.left &&\n        this.left + this.width >= another.left + another.width &&\n        this.top <= another.top &&\n        this.top + this.height >= another.top + another.height;\n  }\n};\n\n\n/**\n * @param {!goog.math.Coordinate} point A coordinate.\n * @return {number} The squared distance between the point and the closest\n *     point inside the rectangle. Returns 0 if the point is inside the\n *     rectangle.\n */\ngoog.math.Rect.prototype.squaredDistance = function(point) {\n  var dx = point.x < this.left ?\n      this.left - point.x :\n      Math.max(point.x - (this.left + this.width), 0);\n  var dy = point.y < this.top ? this.top - point.y :\n                                Math.max(point.y - (this.top + this.height), 0);\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @param {!goog.math.Coordinate} point A coordinate.\n * @return {number} The distance between the point and the closest point\n *     inside the rectangle. Returns 0 if the point is inside the rectangle.\n */\ngoog.math.Rect.prototype.distance = function(point) {\n  return Math.sqrt(this.squaredDistance(point));\n};\n\n\n/**\n * @return {!goog.math.Size} The size of this rectangle.\n */\ngoog.math.Rect.prototype.getSize = function() {\n  return new goog.math.Size(this.width, this.height);\n};\n\n\n/**\n * @return {!goog.math.Coordinate} A new coordinate for the top-left corner of\n *     the rectangle.\n */\ngoog.math.Rect.prototype.getTopLeft = function() {\n  return new goog.math.Coordinate(this.left, this.top);\n};\n\n\n/**\n * @return {!goog.math.Coordinate} A new coordinate for the center of the\n *     rectangle.\n */\ngoog.math.Rect.prototype.getCenter = function() {\n  return new goog.math.Coordinate(\n      this.left + this.width / 2, this.top + this.height / 2);\n};\n\n\n/**\n * @return {!goog.math.Coordinate} A new coordinate for the bottom-right corner\n *     of the rectangle.\n */\ngoog.math.Rect.prototype.getBottomRight = function() {\n  return new goog.math.Coordinate(\n      this.left + this.width, this.top + this.height);\n};\n\n\n/**\n * Rounds the fields to the next larger integer values.\n * @return {!goog.math.Rect} This rectangle with ceil'd fields.\n */\ngoog.math.Rect.prototype.ceil = function() {\n  this.left = Math.ceil(this.left);\n  this.top = Math.ceil(this.top);\n  this.width = Math.ceil(this.width);\n  this.height = Math.ceil(this.height);\n  return this;\n};\n\n\n/**\n * Rounds the fields to the next smaller integer values.\n * @return {!goog.math.Rect} This rectangle with floored fields.\n */\ngoog.math.Rect.prototype.floor = function() {\n  this.left = Math.floor(this.left);\n  this.top = Math.floor(this.top);\n  this.width = Math.floor(this.width);\n  this.height = Math.floor(this.height);\n  return this;\n};\n\n\n/**\n * Rounds the fields to nearest integer values.\n * @return {!goog.math.Rect} This rectangle with rounded fields.\n */\ngoog.math.Rect.prototype.round = function() {\n  this.left = Math.round(this.left);\n  this.top = Math.round(this.top);\n  this.width = Math.round(this.width);\n  this.height = Math.round(this.height);\n  return this;\n};\n\n\n/**\n * Translates this rectangle by the given offsets. If a\n * `goog.math.Coordinate` is given, then the left and top values are\n * translated by the coordinate's x and y values. Otherwise, left and top are\n * translated by `tx` and `opt_ty` respectively.\n * @param {number|goog.math.Coordinate} tx The value to translate left by or the\n *     the coordinate to translate this rect by.\n * @param {number=} opt_ty The value to translate top by.\n * @return {!goog.math.Rect} This rectangle after translating.\n */\ngoog.math.Rect.prototype.translate = function(tx, opt_ty) {\n  if (tx instanceof goog.math.Coordinate) {\n    this.left += tx.x;\n    this.top += tx.y;\n  } else {\n    this.left += goog.asserts.assertNumber(tx);\n    if (typeof opt_ty === 'number') {\n      this.top += opt_ty;\n    }\n  }\n  return this;\n};\n\n\n/**\n * Scales this rectangle by the given scale factors. The left and width values\n * are scaled by `sx` and the top and height values are scaled by\n * `opt_sy`.  If `opt_sy` is not given, then all fields are scaled\n * by `sx`.\n * @param {number} sx The scale factor to use for the x dimension.\n * @param {number=} opt_sy The scale factor to use for the y dimension.\n * @return {!goog.math.Rect} This rectangle after scaling.\n */\ngoog.math.Rect.prototype.scale = function(sx, opt_sy) {\n  var sy = (typeof opt_sy === 'number') ? opt_sy : sx;\n  this.left *= sx;\n  this.width *= sx;\n  this.top *= sy;\n  this.height *= sy;\n  return this;\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for element styles.\n *\n * @see ../demos/inline_block_quirks.html\n * @see ../demos/inline_block_standards.html\n * @see ../demos/style_viewport.html\n */\n\ngoog.provide('goog.style');\n\n\ngoog.forwardDeclare('goog.events.Event');\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.dom');\ngoog.require('goog.dom.NodeType');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.vendor');\ngoog.require('goog.html.SafeStyleSheet');\ngoog.require('goog.math.Box');\ngoog.require('goog.math.Coordinate');\ngoog.require('goog.math.Rect');\ngoog.require('goog.math.Size');\ngoog.require('goog.object');\ngoog.require('goog.reflect');\ngoog.require('goog.string');\ngoog.require('goog.userAgent');\n\n\n/**\n * Sets a style value on an element.\n *\n * This function is not indended to patch issues in the browser's style\n * handling, but to allow easy programmatic access to setting dash-separated\n * style properties.  An example is setting a batch of properties from a data\n * object without overwriting old styles.  When possible, use native APIs:\n * elem.style.propertyKey = 'value' or (if obliterating old styles is fine)\n * elem.style.cssText = 'property1: value1; property2: value2'.\n *\n * @param {Element} element The element to change.\n * @param {string|Object} style If a string, a style name. If an object, a hash\n *     of style names to style values.\n * @param {string|number|boolean=} opt_value If style was a string, then this\n *     should be the value.\n */\ngoog.style.setStyle = function(element, style, opt_value) {\n  if (typeof style === 'string') {\n    goog.style.setStyle_(element, opt_value, style);\n  } else {\n    for (var key in style) {\n      goog.style.setStyle_(element, style[key], key);\n    }\n  }\n};\n\n\n/**\n * Sets a style value on an element, with parameters swapped to work with\n * `goog.object.forEach()`. Prepends a vendor-specific prefix when\n * necessary.\n * @param {Element} element The element to change.\n * @param {string|number|boolean|undefined} value Style value.\n * @param {string} style Style name.\n * @private\n */\ngoog.style.setStyle_ = function(element, value, style) {\n  var propertyName = goog.style.getVendorJsStyleName_(element, style);\n\n  if (propertyName) {\n    // TODO(johnlenz): coerce to string?\n    element.style[propertyName] = /** @type {?} */ (value);\n  }\n};\n\n\n/**\n * Style name cache that stores previous property name lookups.\n *\n * This is used by setStyle to speed up property lookups, entries look like:\n *   { StyleName: ActualPropertyName }\n *\n * @private {!Object<string, string>}\n */\ngoog.style.styleNameCache_ = {};\n\n\n/**\n * Returns the style property name in camel-case. If it does not exist and a\n * vendor-specific version of the property does exist, then return the vendor-\n * specific property name instead.\n * @param {Element} element The element to change.\n * @param {string} style Style name.\n * @return {string} Vendor-specific style.\n * @private\n */\ngoog.style.getVendorJsStyleName_ = function(element, style) {\n  var propertyName = goog.style.styleNameCache_[style];\n  if (!propertyName) {\n    var camelStyle = goog.string.toCamelCase(style);\n    propertyName = camelStyle;\n\n    if (element.style[camelStyle] === undefined) {\n      var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() +\n          goog.string.toTitleCase(camelStyle);\n\n      if (element.style[prefixedStyle] !== undefined) {\n        propertyName = prefixedStyle;\n      }\n    }\n    goog.style.styleNameCache_[style] = propertyName;\n  }\n\n  return propertyName;\n};\n\n\n/**\n * Returns the style property name in CSS notation. If it does not exist and a\n * vendor-specific version of the property does exist, then return the vendor-\n * specific property name instead.\n * @param {Element} element The element to change.\n * @param {string} style Style name.\n * @return {string} Vendor-specific style.\n * @private\n */\ngoog.style.getVendorStyleName_ = function(element, style) {\n  var camelStyle = goog.string.toCamelCase(style);\n\n  if (element.style[camelStyle] === undefined) {\n    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() +\n        goog.string.toTitleCase(camelStyle);\n\n    if (element.style[prefixedStyle] !== undefined) {\n      return goog.dom.vendor.getVendorPrefix() + '-' + style;\n    }\n  }\n\n  return style;\n};\n\n\n/**\n * Retrieves an explicitly-set style value of a node. This returns '' if there\n * isn't a style attribute on the element or if this style property has not been\n * explicitly set in script.\n *\n * @param {Element} element Element to get style of.\n * @param {string} property Property to get, css-style (if you have a camel-case\n * property, use element.style[style]).\n * @return {string} Style value.\n */\ngoog.style.getStyle = function(element, property) {\n  // element.style is '' for well-known properties which are unset.\n  // For for browser specific styles as 'filter' is undefined\n  // so we need to return '' explicitly to make it consistent across\n  // browsers.\n  var styleValue = element.style[goog.string.toCamelCase(property)];\n\n  // Using typeof here because of a bug in Safari 5.1, where this value\n  // was undefined, but === undefined returned false.\n  if (typeof(styleValue) !== 'undefined') {\n    return styleValue;\n  }\n\n  return element.style[goog.style.getVendorJsStyleName_(element, property)] ||\n      '';\n};\n\n\n/**\n * Retrieves a computed style value of a node. It returns empty string if the\n * value cannot be computed (which will be the case in Internet Explorer) or\n * \"none\" if the property requested is an SVG one and it has not been\n * explicitly set (firefox and webkit).\n *\n * @param {Element} element Element to get style of.\n * @param {string} property Property to get (camel-case).\n * @return {string} Style value.\n */\ngoog.style.getComputedStyle = function(element, property) {\n  var doc = goog.dom.getOwnerDocument(element);\n  if (doc.defaultView && doc.defaultView.getComputedStyle) {\n    var styles = doc.defaultView.getComputedStyle(element, null);\n    if (styles) {\n      // element.style[..] is undefined for browser specific styles\n      // as 'filter'.\n      return styles[property] || styles.getPropertyValue(property) || '';\n    }\n  }\n\n  return '';\n};\n\n\n/**\n * Gets the cascaded style value of a node, or null if the value cannot be\n * computed (only Internet Explorer can do this).\n *\n * @param {Element} element Element to get style of.\n * @param {string} style Property to get (camel-case).\n * @return {string} Style value.\n */\ngoog.style.getCascadedStyle = function(element, style) {\n  // TODO(nicksantos): This should be documented to return null. #fixTypes\n  return /** @type {string} */ (\n      element.currentStyle ? element.currentStyle[style] : null);\n};\n\n\n/**\n * Cross-browser pseudo get computed style. It returns the computed style where\n * available. If not available it tries the cascaded style value (IE\n * currentStyle) and in worst case the inline style value.  It shouldn't be\n * called directly, see http://wiki/Main/ComputedStyleVsCascadedStyle for\n * discussion.\n *\n * @param {Element} element Element to get style of.\n * @param {string} style Property to get (must be camelCase, not css-style.).\n * @return {string} Style value.\n * @private\n */\ngoog.style.getStyle_ = function(element, style) {\n  return goog.style.getComputedStyle(element, style) ||\n      goog.style.getCascadedStyle(element, style) ||\n      (element.style && element.style[style]);\n};\n\n\n/**\n * Retrieves the computed value of the box-sizing CSS attribute.\n * Browser support: http://caniuse.com/css3-boxsizing.\n * @param {!Element} element The element whose box-sizing to get.\n * @return {?string} 'content-box', 'border-box' or 'padding-box'. null if\n *     box-sizing is not supported (IE7 and below).\n */\ngoog.style.getComputedBoxSizing = function(element) {\n  return goog.style.getStyle_(element, 'boxSizing') ||\n      goog.style.getStyle_(element, 'MozBoxSizing') ||\n      goog.style.getStyle_(element, 'WebkitBoxSizing') || null;\n};\n\n\n/**\n * Retrieves the computed value of the position CSS attribute.\n * @param {Element} element The element to get the position of.\n * @return {string} Position value.\n */\ngoog.style.getComputedPosition = function(element) {\n  return goog.style.getStyle_(element, 'position');\n};\n\n\n/**\n * Retrieves the computed background color string for a given element. The\n * string returned is suitable for assigning to another element's\n * background-color, but is not guaranteed to be in any particular string\n * format. Accessing the color in a numeric form may not be possible in all\n * browsers or with all input.\n *\n * If the background color for the element is defined as a hexadecimal value,\n * the resulting string can be parsed by goog.color.parse in all supported\n * browsers.\n *\n * Whether named colors like \"red\" or \"lightblue\" get translated into a\n * format which can be parsed is browser dependent. Calling this function on\n * transparent elements will return \"transparent\" in most browsers or\n * \"rgba(0, 0, 0, 0)\" in WebKit.\n * @param {Element} element The element to get the background color of.\n * @return {string} The computed string value of the background color.\n */\ngoog.style.getBackgroundColor = function(element) {\n  return goog.style.getStyle_(element, 'backgroundColor');\n};\n\n\n/**\n * Retrieves the computed value of the overflow-x CSS attribute.\n * @param {Element} element The element to get the overflow-x of.\n * @return {string} The computed string value of the overflow-x attribute.\n */\ngoog.style.getComputedOverflowX = function(element) {\n  return goog.style.getStyle_(element, 'overflowX');\n};\n\n\n/**\n * Retrieves the computed value of the overflow-y CSS attribute.\n * @param {Element} element The element to get the overflow-y of.\n * @return {string} The computed string value of the overflow-y attribute.\n */\ngoog.style.getComputedOverflowY = function(element) {\n  return goog.style.getStyle_(element, 'overflowY');\n};\n\n\n/**\n * Retrieves the computed value of the z-index CSS attribute.\n * @param {Element} element The element to get the z-index of.\n * @return {string|number} The computed value of the z-index attribute.\n */\ngoog.style.getComputedZIndex = function(element) {\n  return goog.style.getStyle_(element, 'zIndex');\n};\n\n\n/**\n * Retrieves the computed value of the text-align CSS attribute.\n * @param {Element} element The element to get the text-align of.\n * @return {string} The computed string value of the text-align attribute.\n */\ngoog.style.getComputedTextAlign = function(element) {\n  return goog.style.getStyle_(element, 'textAlign');\n};\n\n\n/**\n * Retrieves the computed value of the cursor CSS attribute.\n * @param {Element} element The element to get the cursor of.\n * @return {string} The computed string value of the cursor attribute.\n */\ngoog.style.getComputedCursor = function(element) {\n  return goog.style.getStyle_(element, 'cursor');\n};\n\n\n/**\n * Retrieves the computed value of the CSS transform attribute.\n * @param {Element} element The element to get the transform of.\n * @return {string} The computed string representation of the transform matrix.\n */\ngoog.style.getComputedTransform = function(element) {\n  var property = goog.style.getVendorStyleName_(element, 'transform');\n  return goog.style.getStyle_(element, property) ||\n      goog.style.getStyle_(element, 'transform');\n};\n\n\n/**\n * Sets the top/left values of an element.  If no unit is specified in the\n * argument then it will add px. The second argument is required if the first\n * argument is a string or number and is ignored if the first argument\n * is a coordinate.\n * @param {Element} el Element to move.\n * @param {string|number|goog.math.Coordinate} arg1 Left position or coordinate.\n * @param {string|number=} opt_arg2 Top position.\n */\ngoog.style.setPosition = function(el, arg1, opt_arg2) {\n  var x, y;\n\n  if (arg1 instanceof goog.math.Coordinate) {\n    x = arg1.x;\n    y = arg1.y;\n  } else {\n    x = arg1;\n    y = opt_arg2;\n  }\n\n  el.style.left = goog.style.getPixelStyleValue_(\n      /** @type {number|string} */ (x), false);\n  el.style.top = goog.style.getPixelStyleValue_(\n      /** @type {number|string} */ (y), false);\n};\n\n\n/**\n * Gets the offsetLeft and offsetTop properties of an element and returns them\n * in a Coordinate object\n * @param {Element} element Element.\n * @return {!goog.math.Coordinate} The position.\n */\ngoog.style.getPosition = function(element) {\n  return new goog.math.Coordinate(\n      /** @type {!HTMLElement} */ (element).offsetLeft,\n      /** @type {!HTMLElement} */ (element).offsetTop);\n};\n\n\n/**\n * Returns the viewport element for a particular document\n * @param {Node=} opt_node DOM node (Document is OK) to get the viewport element\n *     of.\n * @return {Element} document.documentElement or document.body.\n */\ngoog.style.getClientViewportElement = function(opt_node) {\n  var doc;\n  if (opt_node) {\n    doc = goog.dom.getOwnerDocument(opt_node);\n  } else {\n    doc = goog.dom.getDocument();\n  }\n\n  // In old IE versions the document.body represented the viewport\n  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) &&\n      !goog.dom.getDomHelper(doc).isCss1CompatMode()) {\n    return doc.body;\n  }\n  return doc.documentElement;\n};\n\n\n/**\n * Calculates the viewport coordinates relative to the page/document\n * containing the node. The viewport may be the browser viewport for\n * non-iframe document, or the iframe container for iframe'd document.\n * @param {!Document} doc The document to use as the reference point.\n * @return {!goog.math.Coordinate} The page offset of the viewport.\n */\ngoog.style.getViewportPageOffset = function(doc) {\n  var body = doc.body;\n  var documentElement = doc.documentElement;\n  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;\n  var scrollTop = body.scrollTop || documentElement.scrollTop;\n  return new goog.math.Coordinate(scrollLeft, scrollTop);\n};\n\n\n/**\n * Gets the client rectangle of the DOM element.\n *\n * getBoundingClientRect is part of a new CSS object model draft (with a\n * long-time presence in IE), replacing the error-prone parent offset\n * computation and the now-deprecated Gecko getBoxObjectFor.\n *\n * This utility patches common browser bugs in getBoundingClientRect. It\n * will fail if getBoundingClientRect is unsupported.\n *\n * If the element is not in the DOM, the result is undefined, and an error may\n * be thrown depending on user agent.\n *\n * @param {!Element} el The element whose bounding rectangle is being queried.\n * @return {Object} A native bounding rectangle with numerical left, top,\n *     right, and bottom.  Reported by Firefox to be of object type ClientRect.\n * @private\n */\ngoog.style.getBoundingClientRect_ = function(el) {\n  var rect;\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (e) {\n    // In IE < 9, calling getBoundingClientRect on an orphan element raises an\n    // \"Unspecified Error\". All other browsers return zeros.\n    return {'left': 0, 'top': 0, 'right': 0, 'bottom': 0};\n  }\n\n  // Patch the result in IE only, so that this function can be inlined if\n  // compiled for non-IE.\n  if (goog.userAgent.IE && el.ownerDocument.body) {\n    // In IE, most of the time, 2 extra pixels are added to the top and left\n    // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and\n    // IE6 standards mode, this border can be overridden by setting the\n    // document element's border to zero -- thus, we cannot rely on the\n    // offset always being 2 pixels.\n\n    // In quirks mode, the offset can be determined by querying the body's\n    // clientLeft/clientTop, but in standards mode, it is found by querying\n    // the document element's clientLeft/clientTop.  Since we already called\n    // getBoundingClientRect we have already forced a reflow, so it is not\n    // too expensive just to query them all.\n\n    // See: http://msdn.microsoft.com/en-us/library/ms536433(VS.85).aspx\n    var doc = el.ownerDocument;\n    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;\n    rect.top -= doc.documentElement.clientTop + doc.body.clientTop;\n  }\n  return rect;\n};\n\n\n/**\n * Returns the first parent that could affect the position of a given element.\n * @param {Element} element The element to get the offset parent for.\n * @return {Element} The first offset parent or null if one cannot be found.\n */\ngoog.style.getOffsetParent = function(element) {\n  // element.offsetParent does the right thing in IE7 and below.  In other\n  // browsers it only includes elements with position absolute, relative or\n  // fixed, not elements with overflow set to auto or scroll.\n  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8)) {\n    goog.asserts.assert(element && 'offsetParent' in element);\n    return element.offsetParent;\n  }\n\n  var doc = goog.dom.getOwnerDocument(element);\n  var positionStyle = goog.style.getStyle_(element, 'position');\n  var skipStatic = positionStyle == 'fixed' || positionStyle == 'absolute';\n  for (var parent = element.parentNode; parent && parent != doc;\n       parent = parent.parentNode) {\n    // Skip shadowDOM roots.\n    if (parent.nodeType == goog.dom.NodeType.DOCUMENT_FRAGMENT && parent.host) {\n      // Cast because the assignment is not type safe, and without a cast we\n      // start typing parent loosely and get bad disambiguation.\n      parent = /** @type {!Element} */ (parent.host);\n    }\n    positionStyle =\n        goog.style.getStyle_(/** @type {!Element} */ (parent), 'position');\n    skipStatic = skipStatic && positionStyle == 'static' &&\n        parent != doc.documentElement && parent != doc.body;\n    if (!skipStatic &&\n        (parent.scrollWidth > parent.clientWidth ||\n         parent.scrollHeight > parent.clientHeight ||\n         positionStyle == 'fixed' || positionStyle == 'absolute' ||\n         positionStyle == 'relative')) {\n      return /** @type {!Element} */ (parent);\n    }\n  }\n  return null;\n};\n\n\n/**\n * Calculates and returns the visible rectangle for a given element. Returns a\n * box describing the visible portion of the nearest scrollable offset ancestor.\n * Coordinates are given relative to the document.\n *\n * @param {Element} element Element to get the visible rect for.\n * @return {goog.math.Box} Bounding elementBox describing the visible rect or\n *     null if scrollable ancestor isn't inside the visible viewport.\n */\ngoog.style.getVisibleRectForElement = function(element) {\n  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);\n  var dom = goog.dom.getDomHelper(element);\n  var body = dom.getDocument().body;\n  var documentElement = dom.getDocument().documentElement;\n  var scrollEl = dom.getDocumentScrollElement();\n\n  // Determine the size of the visible rect by climbing the dom accounting for\n  // all scrollable containers.\n  for (var el = element; el = goog.style.getOffsetParent(el);) {\n    // clientWidth is zero for inline block elements in IE.\n    // on WEBKIT, body element can have clientHeight = 0 and scrollHeight > 0\n    if ((!goog.userAgent.IE || el.clientWidth != 0) &&\n        (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) &&\n        // body may have overflow set on it, yet we still get the entire\n        // viewport. In some browsers, el.offsetParent may be\n        // document.documentElement, so check for that too.\n        (el != body && el != documentElement &&\n         goog.style.getStyle_(el, 'overflow') != 'visible')) {\n      var pos = goog.style.getPageOffset(el);\n      var client = goog.style.getClientLeftTop(el);\n      pos.x += client.x;\n      pos.y += client.y;\n\n      visibleRect.top = Math.max(visibleRect.top, pos.y);\n      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);\n      visibleRect.bottom =\n          Math.min(visibleRect.bottom, pos.y + el.clientHeight);\n      visibleRect.left = Math.max(visibleRect.left, pos.x);\n    }\n  }\n\n  // Clip by window's viewport.\n  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;\n  visibleRect.left = Math.max(visibleRect.left, scrollX);\n  visibleRect.top = Math.max(visibleRect.top, scrollY);\n  var winSize = dom.getViewportSize();\n  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);\n  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);\n  return visibleRect.top >= 0 && visibleRect.left >= 0 &&\n          visibleRect.bottom > visibleRect.top &&\n          visibleRect.right > visibleRect.left ?\n      visibleRect :\n      null;\n};\n\n\n/**\n * Calculate the scroll position of `container` with the minimum amount so\n * that the content and the borders of the given `element` become visible.\n * If the element is bigger than the container, its top left corner will be\n * aligned as close to the container's top left corner as possible.\n *\n * @param {Element} element The element to make visible.\n * @param {Element=} opt_container The container to scroll. If not set, then the\n *     document scroll element will be used.\n * @param {boolean=} opt_center Whether to center the element in the container.\n *     Defaults to false.\n * @return {!goog.math.Coordinate} The new scroll position of the container,\n *     in form of goog.math.Coordinate(scrollLeft, scrollTop).\n */\ngoog.style.getContainerOffsetToScrollInto = function(\n    element, opt_container, opt_center) {\n  var container = opt_container || goog.dom.getDocumentScrollElement();\n  // Absolute position of the element's border's top left corner.\n  var elementPos = goog.style.getPageOffset(element);\n  // Absolute position of the container's border's top left corner.\n  var containerPos = goog.style.getPageOffset(container);\n  var containerBorder = goog.style.getBorderBox(container);\n  if (container == goog.dom.getDocumentScrollElement()) {\n    // The element position is calculated based on the page offset, and the\n    // document scroll element holds the scroll position within the page. We can\n    // use the scroll position to calculate the relative position from the\n    // element.\n    var relX = elementPos.x - container.scrollLeft;\n    var relY = elementPos.y - container.scrollTop;\n    if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(10)) {\n      // In older versions of IE getPageOffset(element) does not include the\n      // container border so it has to be added to accommodate.\n      relX += containerBorder.left;\n      relY += containerBorder.top;\n    }\n  } else {\n    // Relative pos. of the element's border box to the container's content box.\n    var relX = elementPos.x - containerPos.x - containerBorder.left;\n    var relY = elementPos.y - containerPos.y - containerBorder.top;\n  }\n  // How much the element can move in the container, i.e. the difference between\n  // the element's bottom-right-most and top-left-most position where it's\n  // fully visible.\n  var elementSize = goog.style.getSizeWithDisplay_(element);\n  var spaceX = container.clientWidth - elementSize.width;\n  var spaceY = container.clientHeight - elementSize.height;\n  var scrollLeft = container.scrollLeft;\n  var scrollTop = container.scrollTop;\n  if (opt_center) {\n    // All browsers round non-integer scroll positions down.\n    scrollLeft += relX - spaceX / 2;\n    scrollTop += relY - spaceY / 2;\n  } else {\n    // This formula was designed to give the correct scroll values in the\n    // following cases:\n    // - element is higher than container (spaceY < 0) => scroll down by relY\n    // - element is not higher that container (spaceY >= 0):\n    //   - it is above container (relY < 0) => scroll up by abs(relY)\n    //   - it is below container (relY > spaceY) => scroll down by relY - spaceY\n    //   - it is in the container => don't scroll\n    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));\n    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0));\n  }\n  return new goog.math.Coordinate(scrollLeft, scrollTop);\n};\n\n\n/**\n * Changes the scroll position of `container` with the minimum amount so\n * that the content and the borders of the given `element` become visible.\n * If the element is bigger than the container, its top left corner will be\n * aligned as close to the container's top left corner as possible.\n *\n * @param {Element} element The element to make visible.\n * @param {Element=} opt_container The container to scroll. If not set, then the\n *     document scroll element will be used.\n * @param {boolean=} opt_center Whether to center the element in the container.\n *     Defaults to false.\n */\ngoog.style.scrollIntoContainerView = function(\n    element, opt_container, opt_center) {\n  var container = opt_container || goog.dom.getDocumentScrollElement();\n  var offset =\n      goog.style.getContainerOffsetToScrollInto(element, container, opt_center);\n  container.scrollLeft = offset.x;\n  container.scrollTop = offset.y;\n};\n\n\n/**\n * Returns clientLeft (width of the left border and, if the directionality is\n * right to left, the vertical scrollbar) and clientTop as a coordinate object.\n *\n * @param {Element} el Element to get clientLeft for.\n * @return {!goog.math.Coordinate} Client left and top.\n */\ngoog.style.getClientLeftTop = function(el) {\n  return new goog.math.Coordinate(el.clientLeft, el.clientTop);\n};\n\n\n/**\n * Returns a Coordinate object relative to the top-left of the HTML document.\n * Implemented as a single function to save having to do two recursive loops in\n * opera and safari just to get both coordinates.  If you just want one value do\n * use goog.style.getPageOffsetLeft() and goog.style.getPageOffsetTop(), but\n * note if you call both those methods the tree will be analysed twice.\n *\n * @param {Element} el Element to get the page offset for.\n * @return {!goog.math.Coordinate} The page offset.\n */\ngoog.style.getPageOffset = function(el) {\n  var doc = goog.dom.getOwnerDocument(el);\n  // TODO(gboyer): Update the jsdoc in a way that doesn't break the universe.\n  goog.asserts.assertObject(el, 'Parameter is required');\n\n  // NOTE(arv): If element is hidden (display none or disconnected or any the\n  // ancestors are hidden) we get (0,0) by default but we still do the\n  // accumulation of scroll position.\n\n  // TODO(arv): Should we check if the node is disconnected and in that case\n  //            return (0,0)?\n\n  var pos = new goog.math.Coordinate(0, 0);\n  var viewportElement = goog.style.getClientViewportElement(doc);\n  if (el == viewportElement) {\n    // viewport is always at 0,0 as that defined the coordinate system for this\n    // function - this avoids special case checks in the code below\n    return pos;\n  }\n\n  var box = goog.style.getBoundingClientRect_(el);\n  // Must add the scroll coordinates in to get the absolute page offset\n  // of element since getBoundingClientRect returns relative coordinates to\n  // the viewport.\n  var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();\n  pos.x = box.left + scrollCoord.x;\n  pos.y = box.top + scrollCoord.y;\n\n  return pos;\n};\n\n\n/**\n * Returns the left coordinate of an element relative to the HTML document\n * @param {Element} el Elements.\n * @return {number} The left coordinate.\n */\ngoog.style.getPageOffsetLeft = function(el) {\n  return goog.style.getPageOffset(el).x;\n};\n\n\n/**\n * Returns the top coordinate of an element relative to the HTML document\n * @param {Element} el Elements.\n * @return {number} The top coordinate.\n */\ngoog.style.getPageOffsetTop = function(el) {\n  return goog.style.getPageOffset(el).y;\n};\n\n\n/**\n * Returns a Coordinate object relative to the top-left of an HTML document\n * in an ancestor frame of this element. Used for measuring the position of\n * an element inside a frame relative to a containing frame.\n *\n * @param {Element} el Element to get the page offset for.\n * @param {Window} relativeWin The window to measure relative to. If relativeWin\n *     is not in the ancestor frame chain of the element, we measure relative to\n *     the top-most window.\n * @return {!goog.math.Coordinate} The page offset.\n */\ngoog.style.getFramedPageOffset = function(el, relativeWin) {\n  var position = new goog.math.Coordinate(0, 0);\n\n  // Iterate up the ancestor frame chain, keeping track of the current window\n  // and the current element in that window.\n  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));\n\n  // MS Edge throws when accessing \"parent\" if el's containing iframe has been\n  // deleted.\n  if (!goog.reflect.canAccessProperty(currentWin, 'parent')) {\n    return position;\n  }\n\n  var currentEl = el;\n  do {\n    // if we're at the top window, we want to get the page offset.\n    // if we're at an inner frame, we only want to get the window position\n    // so that we can determine the actual page offset in the context of\n    // the outer window.\n    var offset = currentWin == relativeWin ?\n        goog.style.getPageOffset(currentEl) :\n        goog.style.getClientPositionForElement_(goog.asserts.assert(currentEl));\n\n    position.x += offset.x;\n    position.y += offset.y;\n  } while (currentWin && currentWin != relativeWin &&\n           currentWin != currentWin.parent &&\n           (currentEl = currentWin.frameElement) &&\n           (currentWin = currentWin.parent));\n\n  return position;\n};\n\n\n/**\n * Translates the specified rect relative to origBase page, for newBase page.\n * If origBase and newBase are the same, this function does nothing.\n *\n * @param {goog.math.Rect} rect The source rectangle relative to origBase page,\n *     and it will have the translated result.\n * @param {goog.dom.DomHelper} origBase The DomHelper for the input rectangle.\n * @param {goog.dom.DomHelper} newBase The DomHelper for the resultant\n *     coordinate.  This must be a DOM for an ancestor frame of origBase\n *     or the same as origBase.\n */\ngoog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {\n  if (origBase.getDocument() != newBase.getDocument()) {\n    var body = origBase.getDocument().body;\n    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());\n\n    // Adjust Body's margin.\n    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));\n\n    if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) &&\n        !origBase.isCss1CompatMode()) {\n      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll());\n    }\n\n    rect.left += pos.x;\n    rect.top += pos.y;\n  }\n};\n\n\n/**\n * Returns the position of an element relative to another element in the\n * document.  A relative to B\n * @param {Element|Event|goog.events.Event} a Element or mouse event whose\n *     position we're calculating.\n * @param {Element|Event|goog.events.Event} b Element or mouse event position\n *     is relative to.\n * @return {!goog.math.Coordinate} The relative position.\n */\ngoog.style.getRelativePosition = function(a, b) {\n  var ap = goog.style.getClientPosition(a);\n  var bp = goog.style.getClientPosition(b);\n  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);\n};\n\n\n/**\n * Returns the position of the event or the element's border box relative to\n * the client viewport.\n * @param {!Element} el Element whose position to get.\n * @return {!goog.math.Coordinate} The position.\n * @private\n */\ngoog.style.getClientPositionForElement_ = function(el) {\n  var box = goog.style.getBoundingClientRect_(el);\n  return new goog.math.Coordinate(box.left, box.top);\n};\n\n\n/**\n * Returns the position of the event or the element's border box relative to\n * the client viewport. If an event is passed, and if this event is a \"touch\"\n * event, then the position of the first changedTouches will be returned.\n * @param {Element|Event|goog.events.Event} el Element or a mouse / touch event.\n * @return {!goog.math.Coordinate} The position.\n */\ngoog.style.getClientPosition = function(el) {\n  goog.asserts.assert(el);\n  if (el.nodeType == goog.dom.NodeType.ELEMENT) {\n    return goog.style.getClientPositionForElement_(\n        /** @type {!Element} */ (el));\n  } else {\n    var targetEvent = el.changedTouches ? el.changedTouches[0] : el;\n    return new goog.math.Coordinate(targetEvent.clientX, targetEvent.clientY);\n  }\n};\n\n\n/**\n * Moves an element to the given coordinates relative to the client viewport.\n * @param {Element} el Absolutely positioned element to set page offset for.\n *     It must be in the document.\n * @param {number|goog.math.Coordinate} x Left position of the element's margin\n *     box or a coordinate object.\n * @param {number=} opt_y Top position of the element's margin box.\n */\ngoog.style.setPageOffset = function(el, x, opt_y) {\n  // Get current pageoffset\n  var cur = goog.style.getPageOffset(el);\n\n  if (x instanceof goog.math.Coordinate) {\n    opt_y = x.y;\n    x = x.x;\n  }\n\n  // NOTE(arv): We cannot allow strings for x and y. We could but that would\n  // require us to manually transform between different units\n\n  // Work out deltas\n  var dx = goog.asserts.assertNumber(x) - cur.x;\n  var dy = Number(opt_y) - cur.y;\n\n  // Set position to current left/top + delta\n  goog.style.setPosition(\n      el, /** @type {!HTMLElement} */ (el).offsetLeft + dx,\n      /** @type {!HTMLElement} */ (el).offsetTop + dy);\n};\n\n\n/**\n * Sets the width/height values of an element.  If an argument is numeric,\n * or a goog.math.Size is passed, it is assumed to be pixels and will add\n * 'px' after converting it to an integer in string form. (This just sets the\n * CSS width and height properties so it might set content-box or border-box\n * size depending on the box model the browser is using.)\n *\n * @param {Element} element Element to set the size of.\n * @param {string|number|goog.math.Size} w Width of the element, or a\n *     size object.\n * @param {string|number=} opt_h Height of the element. Required if w is not a\n *     size object.\n */\ngoog.style.setSize = function(element, w, opt_h) {\n  var h;\n  if (w instanceof goog.math.Size) {\n    h = w.height;\n    w = w.width;\n  } else {\n    if (opt_h == undefined) {\n      throw new Error('missing height argument');\n    }\n    h = opt_h;\n  }\n\n  goog.style.setWidth(element, /** @type {string|number} */ (w));\n  goog.style.setHeight(element, h);\n};\n\n\n/**\n * Helper function to create a string to be set into a pixel-value style\n * property of an element. Can round to the nearest integer value.\n *\n * @param {string|number} value The style value to be used. If a number,\n *     'px' will be appended, otherwise the value will be applied directly.\n * @param {boolean} round Whether to round the nearest integer (if property\n *     is a number).\n * @return {string} The string value for the property.\n * @private\n */\ngoog.style.getPixelStyleValue_ = function(value, round) {\n  if (typeof value == 'number') {\n    value = (round ? Math.round(value) : value) + 'px';\n  }\n\n  return value;\n};\n\n\n/**\n * Set the height of an element.  Sets the element's style property.\n * @param {Element} element Element to set the height of.\n * @param {string|number} height The height value to set.  If a number, 'px'\n *     will be appended, otherwise the value will be applied directly.\n */\ngoog.style.setHeight = function(element, height) {\n  element.style.height = goog.style.getPixelStyleValue_(height, true);\n};\n\n\n/**\n * Set the width of an element.  Sets the element's style property.\n * @param {Element} element Element to set the width of.\n * @param {string|number} width The width value to set.  If a number, 'px'\n *     will be appended, otherwise the value will be applied directly.\n */\ngoog.style.setWidth = function(element, width) {\n  element.style.width = goog.style.getPixelStyleValue_(width, true);\n};\n\n\n/**\n * Gets the height and width of an element, even if its display is none.\n *\n * Specifically, this returns the height and width of the border box,\n * irrespective of the box model in effect.\n *\n * Note that this function does not take CSS transforms into account. Please see\n * `goog.style.getTransformedSize`.\n * @param {Element} element Element to get size of.\n * @return {!goog.math.Size} Object with width/height properties.\n */\ngoog.style.getSize = function(element) {\n  return goog.style.evaluateWithTemporaryDisplay_(\n      goog.style.getSizeWithDisplay_, /** @type {!Element} */ (element));\n};\n\n\n/**\n * Call `fn` on `element` such that `element`'s dimensions are\n * accurate when it's passed to `fn`.\n * @param {function(!Element): T} fn Function to call with `element` as\n *     an argument after temporarily changing `element`'s display such\n *     that its dimensions are accurate.\n * @param {!Element} element Element (which may have display none) to use as\n *     argument to `fn`.\n * @return {T} Value returned by calling `fn` with `element`.\n * @template T\n * @private\n */\ngoog.style.evaluateWithTemporaryDisplay_ = function(fn, element) {\n  if (goog.style.getStyle_(element, 'display') != 'none') {\n    return fn(element);\n  }\n\n  var style = element.style;\n  var originalDisplay = style.display;\n  var originalVisibility = style.visibility;\n  var originalPosition = style.position;\n\n  style.visibility = 'hidden';\n  style.position = 'absolute';\n  style.display = 'inline';\n\n  var retVal = fn(element);\n\n  style.display = originalDisplay;\n  style.position = originalPosition;\n  style.visibility = originalVisibility;\n\n  return retVal;\n};\n\n\n/**\n * Gets the height and width of an element when the display is not none.\n * @param {Element} element Element to get size of.\n * @return {!goog.math.Size} Object with width/height properties.\n * @private\n */\ngoog.style.getSizeWithDisplay_ = function(element) {\n  var offsetWidth = /** @type {!HTMLElement} */ (element).offsetWidth;\n  var offsetHeight = /** @type {!HTMLElement} */ (element).offsetHeight;\n  var webkitOffsetsZero =\n      goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;\n  if ((offsetWidth === undefined || webkitOffsetsZero) &&\n      element.getBoundingClientRect) {\n    // Fall back to calling getBoundingClientRect when offsetWidth or\n    // offsetHeight are not defined, or when they are zero in WebKit browsers.\n    // This makes sure that we return for the correct size for SVG elements, but\n    // will still return 0 on Webkit prior to 534.8, see\n    // http://trac.webkit.org/changeset/67252.\n    var clientRect = goog.style.getBoundingClientRect_(element);\n    return new goog.math.Size(\n        clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);\n  }\n  return new goog.math.Size(offsetWidth, offsetHeight);\n};\n\n\n/**\n * Gets the height and width of an element, post transform, even if its display\n * is none.\n *\n * This is like `goog.style.getSize`, except:\n * <ol>\n * <li>Takes webkitTransforms such as rotate and scale into account.\n * <li>Will return null if `element` doesn't respond to\n *     `getBoundingClientRect`.\n * <li>Currently doesn't make sense on non-WebKit browsers which don't support\n *    webkitTransforms.\n * </ol>\n * @param {!Element} element Element to get size of.\n * @return {goog.math.Size} Object with width/height properties.\n */\ngoog.style.getTransformedSize = function(element) {\n  if (!element.getBoundingClientRect) {\n    return null;\n  }\n\n  var clientRect = goog.style.evaluateWithTemporaryDisplay_(\n      goog.style.getBoundingClientRect_, element);\n  return new goog.math.Size(\n      clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);\n};\n\n\n/**\n * Returns a bounding rectangle for a given element in page space.\n * @param {Element} element Element to get bounds of. Must not be display none.\n * @return {!goog.math.Rect} Bounding rectangle for the element.\n */\ngoog.style.getBounds = function(element) {\n  var o = goog.style.getPageOffset(element);\n  var s = goog.style.getSize(element);\n  return new goog.math.Rect(o.x, o.y, s.width, s.height);\n};\n\n\n/**\n * Converts a CSS selector in the form style-property to styleProperty.\n * @param {*} selector CSS Selector.\n * @return {string} Camel case selector.\n * @deprecated Use goog.string.toCamelCase instead.\n */\ngoog.style.toCamelCase = function(selector) {\n  return goog.string.toCamelCase(String(selector));\n};\n\n\n/**\n * Converts a CSS selector in the form styleProperty to style-property.\n * @param {string} selector Camel case selector.\n * @return {string} Selector cased.\n * @deprecated Use goog.string.toSelectorCase instead.\n */\ngoog.style.toSelectorCase = function(selector) {\n  return goog.string.toSelectorCase(selector);\n};\n\n\n/**\n * Gets the opacity of a node (x-browser). This gets the inline style opacity\n * of the node, and does not take into account the cascaded or the computed\n * style for this node.\n * @param {Element} el Element whose opacity has to be found.\n * @return {number|string} Opacity between 0 and 1 or an empty string {@code ''}\n *     if the opacity is not set.\n */\ngoog.style.getOpacity = function(el) {\n  goog.asserts.assert(el);\n  var style = el.style;\n  var result = '';\n  if ('opacity' in style) {\n    result = style.opacity;\n  } else if ('MozOpacity' in style) {\n    result = style.MozOpacity;\n  } else if ('filter' in style) {\n    var match = style.filter.match(/alpha\\(opacity=([\\d.]+)\\)/);\n    if (match) {\n      result = String(match[1] / 100);\n    }\n  }\n  return result == '' ? result : Number(result);\n};\n\n\n/**\n * Sets the opacity of a node (x-browser).\n * @param {Element} el Elements whose opacity has to be set.\n * @param {number|string} alpha Opacity between 0 and 1 or an empty string\n *     {@code ''} to clear the opacity.\n */\ngoog.style.setOpacity = function(el, alpha) {\n  goog.asserts.assert(el);\n  var style = el.style;\n  if ('opacity' in style) {\n    style.opacity = alpha;\n  } else if ('MozOpacity' in style) {\n    style.MozOpacity = alpha;\n  } else if ('filter' in style) {\n    // TODO(arv): Overwriting the filter might have undesired side effects.\n    if (alpha === '') {\n      style.filter = '';\n    } else {\n      style.filter = 'alpha(opacity=' + (Number(alpha) * 100) + ')';\n    }\n  }\n};\n\n\n/**\n * Sets the background of an element to a transparent image in a browser-\n * independent manner.\n *\n * This function does not support repeating backgrounds or alternate background\n * positions to match the behavior of Internet Explorer. It also does not\n * support sizingMethods other than crop since they cannot be replicated in\n * browsers other than Internet Explorer.\n *\n * @param {Element} el The element to set background on.\n * @param {string} src The image source URL.\n */\ngoog.style.setTransparentBackgroundImage = function(el, src) {\n  var style = el.style;\n  // It is safe to use the style.filter in IE only. In Safari 'filter' is in\n  // style object but access to style.filter causes it to throw an exception.\n  // Note: IE8 supports images with an alpha channel.\n  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('8')) {\n    // See TODO in setOpacity.\n    style.filter = 'progid:DXImageTransform.Microsoft.AlphaImageLoader(' +\n        'src=\"' + src + '\", sizingMethod=\"crop\")';\n  } else {\n    // Set style properties individually instead of using background shorthand\n    // to prevent overwriting a pre-existing background color.\n    style.backgroundImage = 'url(' + src + ')';\n    style.backgroundPosition = 'top left';\n    style.backgroundRepeat = 'no-repeat';\n  }\n};\n\n\n/**\n * Clears the background image of an element in a browser independent manner.\n * @param {Element} el The element to clear background image for.\n */\ngoog.style.clearTransparentBackgroundImage = function(el) {\n  var style = el.style;\n  if ('filter' in style) {\n    // See TODO in setOpacity.\n    style.filter = '';\n  } else {\n    // Set style properties individually instead of using background shorthand\n    // to prevent overwriting a pre-existing background color.\n    style.backgroundImage = 'none';\n  }\n};\n\n\n/**\n * Shows or hides an element from the page. Hiding the element is done by\n * setting the display property to \"none\", removing the element from the\n * rendering hierarchy so it takes up no space. To show the element, the default\n * inherited display property is restored (defined either in stylesheets or by\n * the browser's default style rules.)\n *\n * Caveat 1: if the inherited display property for the element is set to \"none\"\n * by the stylesheets, that is the property that will be restored by a call to\n * showElement(), effectively toggling the display between \"none\" and \"none\".\n *\n * Caveat 2: if the element display style is set inline (by setting either\n * element.style.display or a style attribute in the HTML), a call to\n * showElement will clear that setting and defer to the inherited style in the\n * stylesheet.\n * @param {Element} el Element to show or hide.\n * @param {*} display True to render the element in its default style,\n *     false to disable rendering the element.\n * @deprecated Use goog.style.setElementShown instead.\n */\ngoog.style.showElement = function(el, display) {\n  goog.style.setElementShown(el, display);\n};\n\n\n/**\n * Shows or hides an element from the page. Hiding the element is done by\n * setting the display property to \"none\", removing the element from the\n * rendering hierarchy so it takes up no space. To show the element, the default\n * inherited display property is restored (defined either in stylesheets or by\n * the browser's default style rules).\n *\n * Caveat 1: if the inherited display property for the element is set to \"none\"\n * by the stylesheets, that is the property that will be restored by a call to\n * setElementShown(), effectively toggling the display between \"none\" and\n * \"none\".\n *\n * Caveat 2: if the element display style is set inline (by setting either\n * element.style.display or a style attribute in the HTML), a call to\n * setElementShown will clear that setting and defer to the inherited style in\n * the stylesheet.\n * @param {Element} el Element to show or hide.\n * @param {*} isShown True to render the element in its default style,\n *     false to disable rendering the element.\n */\ngoog.style.setElementShown = function(el, isShown) {\n  el.style.display = isShown ? '' : 'none';\n};\n\n\n/**\n * Test whether the given element has been shown or hidden via a call to\n * {@link #setElementShown}.\n *\n * Note this is strictly a companion method for a call\n * to {@link #setElementShown} and the same caveats apply; in particular, this\n * method does not guarantee that the return value will be consistent with\n * whether or not the element is actually visible.\n *\n * @param {Element} el The element to test.\n * @return {boolean} Whether the element has been shown.\n * @see #setElementShown\n */\ngoog.style.isElementShown = function(el) {\n  return el.style.display != 'none';\n};\n\n\n/**\n * Installs the style sheet into the window that contains opt_node.  If\n * opt_node is null, the main window is used.\n * @param {!goog.html.SafeStyleSheet} safeStyleSheet The style sheet to install.\n * @param {?Node=} opt_node Node whose parent document should have the\n *     styles installed.\n * @return {!HTMLStyleElement|!StyleSheet} In IE<11, a StyleSheet object with no\n *     owning &lt;style&gt; tag (this is how IE creates style sheets).  In every\n *     other browser, a &lt;style&gt; element with an attached style.  This\n *     doesn't return a StyleSheet object so that setSafeStyleSheet can replace\n *     it (otherwise, if you pass a StyleSheet to setSafeStyleSheet, it will\n *     make a new StyleSheet and leave the original StyleSheet orphaned).\n */\ngoog.style.installSafeStyleSheet = function(safeStyleSheet, opt_node) {\n  var dh = goog.dom.getDomHelper(opt_node);\n\n  // IE < 11 requires createStyleSheet. Note that doc.createStyleSheet will be\n  // undefined as of IE 11.\n  var doc = dh.getDocument();\n  if (goog.userAgent.IE && doc.createStyleSheet) {\n    /** @type {(!HTMLStyleElement|!StyleSheet)} */\n    var styleSheet = doc.createStyleSheet();\n    goog.style.setSafeStyleSheet(styleSheet, safeStyleSheet);\n    return styleSheet;\n  } else {\n    var head = dh.getElementsByTagNameAndClass(goog.dom.TagName.HEAD)[0];\n\n    // In opera documents are not guaranteed to have a head element, thus we\n    // have to make sure one exists before using it.\n    if (!head) {\n      var body = dh.getElementsByTagNameAndClass(goog.dom.TagName.BODY)[0];\n      head = dh.createDom(goog.dom.TagName.HEAD);\n      body.parentNode.insertBefore(head, body);\n    }\n    var el = dh.createDom(goog.dom.TagName.STYLE);\n    // NOTE(user): Setting styles after the style element has been appended\n    // to the head results in a nasty Webkit bug in certain scenarios. Please\n    // refer to https://bugs.webkit.org/show_bug.cgi?id=26307 for additional\n    // details.\n    goog.style.setSafeStyleSheet(el, safeStyleSheet);\n    dh.appendChild(head, el);\n    return el;\n  }\n};\n\n\n/**\n * Removes the styles added by {@link #installStyles}.\n * @param {Element|StyleSheet} styleSheet The value returned by\n *     {@link #installStyles}.\n */\ngoog.style.uninstallStyles = function(styleSheet) {\n  var node = styleSheet.ownerNode || styleSheet.owningElement ||\n      /** @type {Element} */ (styleSheet);\n  goog.dom.removeNode(node);\n};\n\n\n/**\n * Sets the content of a style element.  The style element can be any valid\n * style element.  This element will have its content completely replaced by\n * the safeStyleSheet.\n * @param {!Element|!StyleSheet} element A stylesheet element as returned by\n *     installStyles.\n * @param {!goog.html.SafeStyleSheet} safeStyleSheet The new content of the\n *     stylesheet.\n */\ngoog.style.setSafeStyleSheet = function(element, safeStyleSheet) {\n  var stylesString = goog.html.SafeStyleSheet.unwrap(safeStyleSheet);\n  if (goog.userAgent.IE && element.cssText !== undefined) {\n    // Adding the selectors individually caused the browser to hang if the\n    // selector was invalid or there were CSS comments.  Setting the cssText of\n    // the style node works fine and ignores CSS that IE doesn't understand.\n    // However IE >= 11 doesn't support cssText any more, so we make sure that\n    // cssText is a defined property and otherwise fall back to innerHTML.\n    element.cssText = stylesString;\n  } else {\n    // Setting textContent doesn't work in Safari, see b/29340337.\n    element.innerHTML = stylesString;\n  }\n};\n\n\n/**\n * Sets 'white-space: pre-wrap' for a node (x-browser).\n *\n * There are as many ways of specifying pre-wrap as there are browsers.\n *\n * CSS3/IE8: white-space: pre-wrap;\n * Mozilla:  white-space: -moz-pre-wrap;\n * Opera:    white-space: -o-pre-wrap;\n * IE6/7:    white-space: pre; word-wrap: break-word;\n *\n * @param {Element} el Element to enable pre-wrap for.\n */\ngoog.style.setPreWrap = function(el) {\n  var style = el.style;\n  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('8')) {\n    style.whiteSpace = 'pre';\n    style.wordWrap = 'break-word';\n  } else if (goog.userAgent.GECKO) {\n    style.whiteSpace = '-moz-pre-wrap';\n  } else {\n    style.whiteSpace = 'pre-wrap';\n  }\n};\n\n\n/**\n * Sets 'display: inline-block' for an element (cross-browser).\n * @param {Element} el Element to which the inline-block display style is to be\n *    applied.\n * @see ../demos/inline_block_quirks.html\n * @see ../demos/inline_block_standards.html\n */\ngoog.style.setInlineBlock = function(el) {\n  var style = el.style;\n  // Without position:relative, weirdness ensues.  Just accept it and move on.\n  style.position = 'relative';\n\n  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('8')) {\n    // IE8 supports inline-block so fall through to the else\n    // Zoom:1 forces hasLayout, display:inline gives inline behavior.\n    style.zoom = '1';\n    style.display = 'inline';\n  } else {\n    // Opera, Webkit, and Safari seem to do OK with the standard inline-block\n    // style.\n    style.display = 'inline-block';\n  }\n};\n\n\n/**\n * Returns true if the element is using right to left (rtl) direction.\n * @param {Element} el  The element to test.\n * @return {boolean} True for right to left, false for left to right.\n */\ngoog.style.isRightToLeft = function(el) {\n  return 'rtl' == goog.style.getStyle_(el, 'direction');\n};\n\n\n/**\n * The CSS style property corresponding to an element being\n * unselectable on the current browser platform (null if none).\n * Opera and IE instead use a DOM attribute 'unselectable'. MS Edge uses\n * the Webkit prefix.\n * @type {?string}\n * @private\n */\ngoog.style.unselectableStyle_ = goog.userAgent.GECKO ?\n    'MozUserSelect' :\n    goog.userAgent.WEBKIT || goog.userAgent.EDGE ? 'WebkitUserSelect' : null;\n\n\n/**\n * Returns true if the element is set to be unselectable, false otherwise.\n * Note that on some platforms (e.g. Mozilla), even if an element isn't set\n * to be unselectable, it will behave as such if any of its ancestors is\n * unselectable.\n * @param {Element} el  Element to check.\n * @return {boolean}  Whether the element is set to be unselectable.\n */\ngoog.style.isUnselectable = function(el) {\n  if (goog.style.unselectableStyle_) {\n    return el.style[goog.style.unselectableStyle_].toLowerCase() == 'none';\n  } else if (goog.userAgent.IE || goog.userAgent.OPERA) {\n    return el.getAttribute('unselectable') == 'on';\n  }\n  return false;\n};\n\n\n/**\n * Makes the element and its descendants selectable or unselectable.  Note\n * that on some platforms (e.g. Mozilla), even if an element isn't set to\n * be unselectable, it will behave as such if any of its ancestors is\n * unselectable.\n * @param {Element} el  The element to alter.\n * @param {boolean} unselectable  Whether the element and its descendants\n *     should be made unselectable.\n * @param {boolean=} opt_noRecurse  Whether to only alter the element's own\n *     selectable state, and leave its descendants alone; defaults to false.\n */\ngoog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {\n  // TODO(attila): Do we need all of TR_DomUtil.makeUnselectable() in Closure?\n  var descendants = !opt_noRecurse ? el.getElementsByTagName('*') : null;\n  var name = goog.style.unselectableStyle_;\n  if (name) {\n    // Add/remove the appropriate CSS style to/from the element and its\n    // descendants.\n    var value = unselectable ? 'none' : '';\n    // MathML elements do not have a style property. Verify before setting.\n    if (el.style) {\n      el.style[name] = value;\n    }\n    if (descendants) {\n      for (var i = 0, descendant; descendant = descendants[i]; i++) {\n        if (descendant.style) {\n          descendant.style[name] = value;\n        }\n      }\n    }\n  } else if (goog.userAgent.IE || goog.userAgent.OPERA) {\n    // Toggle the 'unselectable' attribute on the element and its descendants.\n    var value = unselectable ? 'on' : '';\n    el.setAttribute('unselectable', value);\n    if (descendants) {\n      for (var i = 0, descendant; descendant = descendants[i]; i++) {\n        descendant.setAttribute('unselectable', value);\n      }\n    }\n  }\n};\n\n\n/**\n * Gets the border box size for an element.\n * @param {Element} element  The element to get the size for.\n * @return {!goog.math.Size} The border box size.\n */\ngoog.style.getBorderBoxSize = function(element) {\n  return new goog.math.Size(\n      /** @type {!HTMLElement} */ (element).offsetWidth,\n      /** @type {!HTMLElement} */ (element).offsetHeight);\n};\n\n\n/**\n * Sets the border box size of an element. This is potentially expensive in IE\n * if the document is CSS1Compat mode\n * @param {Element} element  The element to set the size on.\n * @param {goog.math.Size} size  The new size.\n */\ngoog.style.setBorderBoxSize = function(element, size) {\n  var doc = goog.dom.getOwnerDocument(element);\n  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();\n\n  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('10') &&\n      (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher('8'))) {\n    var style = element.style;\n    if (isCss1CompatMode) {\n      var paddingBox = goog.style.getPaddingBox(element);\n      var borderBox = goog.style.getBorderBox(element);\n      style.pixelWidth = size.width - borderBox.left - paddingBox.left -\n          paddingBox.right - borderBox.right;\n      style.pixelHeight = size.height - borderBox.top - paddingBox.top -\n          paddingBox.bottom - borderBox.bottom;\n    } else {\n      style.pixelWidth = size.width;\n      style.pixelHeight = size.height;\n    }\n  } else {\n    goog.style.setBoxSizingSize_(element, size, 'border-box');\n  }\n};\n\n\n/**\n * Gets the content box size for an element.  This is potentially expensive in\n * all browsers.\n * @param {Element} element  The element to get the size for.\n * @return {!goog.math.Size} The content box size.\n */\ngoog.style.getContentBoxSize = function(element) {\n  var doc = goog.dom.getOwnerDocument(element);\n  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;\n  if (ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() &&\n      ieCurrentStyle.width != 'auto' && ieCurrentStyle.height != 'auto' &&\n      !ieCurrentStyle.boxSizing) {\n    // If IE in CSS1Compat mode than just use the width and height.\n    // If we have a boxSizing then fall back on measuring the borders etc.\n    var width = goog.style.getIePixelValue_(\n        element, /** @type {string} */ (ieCurrentStyle.width), 'width',\n        'pixelWidth');\n    var height = goog.style.getIePixelValue_(\n        element, /** @type {string} */ (ieCurrentStyle.height), 'height',\n        'pixelHeight');\n    return new goog.math.Size(width, height);\n  } else {\n    var borderBoxSize = goog.style.getBorderBoxSize(element);\n    var paddingBox = goog.style.getPaddingBox(element);\n    var borderBox = goog.style.getBorderBox(element);\n    return new goog.math.Size(\n        borderBoxSize.width - borderBox.left - paddingBox.left -\n            paddingBox.right - borderBox.right,\n        borderBoxSize.height - borderBox.top - paddingBox.top -\n            paddingBox.bottom - borderBox.bottom);\n  }\n};\n\n\n/**\n * Sets the content box size of an element. This is potentially expensive in IE\n * if the document is BackCompat mode.\n * @param {Element} element  The element to set the size on.\n * @param {goog.math.Size} size  The new size.\n */\ngoog.style.setContentBoxSize = function(element, size) {\n  var doc = goog.dom.getOwnerDocument(element);\n  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();\n  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('10') &&\n      (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher('8'))) {\n    var style = element.style;\n    if (isCss1CompatMode) {\n      style.pixelWidth = size.width;\n      style.pixelHeight = size.height;\n    } else {\n      var paddingBox = goog.style.getPaddingBox(element);\n      var borderBox = goog.style.getBorderBox(element);\n      style.pixelWidth = size.width + borderBox.left + paddingBox.left +\n          paddingBox.right + borderBox.right;\n      style.pixelHeight = size.height + borderBox.top + paddingBox.top +\n          paddingBox.bottom + borderBox.bottom;\n    }\n  } else {\n    goog.style.setBoxSizingSize_(element, size, 'content-box');\n  }\n};\n\n\n/**\n * Helper function that sets the box sizing as well as the width and height\n * @param {Element} element  The element to set the size on.\n * @param {goog.math.Size} size  The new size to set.\n * @param {string} boxSizing  The box-sizing value.\n * @private\n */\ngoog.style.setBoxSizingSize_ = function(element, size, boxSizing) {\n  var style = element.style;\n  if (goog.userAgent.GECKO) {\n    style.MozBoxSizing = boxSizing;\n  } else if (goog.userAgent.WEBKIT) {\n    style.WebkitBoxSizing = boxSizing;\n  } else {\n    // Includes IE8 and Opera 9.50+\n    style.boxSizing = boxSizing;\n  }\n\n  // Setting this to a negative value will throw an exception on IE\n  // (and doesn't do anything different than setting it to 0).\n  style.width = Math.max(size.width, 0) + 'px';\n  style.height = Math.max(size.height, 0) + 'px';\n};\n\n\n/**\n * IE specific function that converts a non pixel unit to pixels.\n * @param {Element} element  The element to convert the value for.\n * @param {string} value  The current value as a string. The value must not be\n *     ''.\n * @param {string} name  The CSS property name to use for the converstion. This\n *     should be 'left', 'top', 'width' or 'height'.\n * @param {string} pixelName  The CSS pixel property name to use to get the\n *     value in pixels.\n * @return {number} The value in pixels.\n * @private\n */\ngoog.style.getIePixelValue_ = function(element, value, name, pixelName) {\n  // Try if we already have a pixel value. IE does not do half pixels so we\n  // only check if it matches a number followed by 'px'.\n  if (/^\\d+px?$/.test(value)) {\n    return parseInt(value, 10);\n  } else {\n    var oldStyleValue = element.style[name];\n    var oldRuntimeValue = element.runtimeStyle[name];\n    // set runtime style to prevent changes\n    element.runtimeStyle[name] = element.currentStyle[name];\n    element.style[name] = value;\n    var pixelValue = element.style[pixelName];\n    // restore\n    element.style[name] = oldStyleValue;\n    element.runtimeStyle[name] = oldRuntimeValue;\n    return +pixelValue;\n  }\n};\n\n\n/**\n * Helper function for getting the pixel padding or margin for IE.\n * @param {Element} element  The element to get the padding for.\n * @param {string} propName  The property name.\n * @return {number} The pixel padding.\n * @private\n */\ngoog.style.getIePixelDistance_ = function(element, propName) {\n  var value = goog.style.getCascadedStyle(element, propName);\n  return value ?\n      goog.style.getIePixelValue_(element, value, 'left', 'pixelLeft') :\n      0;\n};\n\n\n/**\n * Gets the computed paddings or margins (on all sides) in pixels.\n * @param {Element} element  The element to get the padding for.\n * @param {string} stylePrefix  Pass 'padding' to retrieve the padding box,\n *     or 'margin' to retrieve the margin box.\n * @return {!goog.math.Box} The computed paddings or margins.\n * @private\n */\ngoog.style.getBox_ = function(element, stylePrefix) {\n  if (goog.userAgent.IE) {\n    var left = goog.style.getIePixelDistance_(element, stylePrefix + 'Left');\n    var right = goog.style.getIePixelDistance_(element, stylePrefix + 'Right');\n    var top = goog.style.getIePixelDistance_(element, stylePrefix + 'Top');\n    var bottom =\n        goog.style.getIePixelDistance_(element, stylePrefix + 'Bottom');\n    return new goog.math.Box(top, right, bottom, left);\n  } else {\n    // On non-IE browsers, getComputedStyle is always non-null.\n    var left = goog.style.getComputedStyle(element, stylePrefix + 'Left');\n    var right = goog.style.getComputedStyle(element, stylePrefix + 'Right');\n    var top = goog.style.getComputedStyle(element, stylePrefix + 'Top');\n    var bottom = goog.style.getComputedStyle(element, stylePrefix + 'Bottom');\n\n    // NOTE(arv): Gecko can return floating point numbers for the computed\n    // style values.\n    return new goog.math.Box(\n        parseFloat(top), parseFloat(right), parseFloat(bottom),\n        parseFloat(left));\n  }\n};\n\n\n/**\n * Gets the computed paddings (on all sides) in pixels.\n * @param {Element} element  The element to get the padding for.\n * @return {!goog.math.Box} The computed paddings.\n */\ngoog.style.getPaddingBox = function(element) {\n  return goog.style.getBox_(element, 'padding');\n};\n\n\n/**\n * Gets the computed margins (on all sides) in pixels.\n * @param {Element} element  The element to get the margins for.\n * @return {!goog.math.Box} The computed margins.\n */\ngoog.style.getMarginBox = function(element) {\n  return goog.style.getBox_(element, 'margin');\n};\n\n\n/**\n * A map used to map the border width keywords to a pixel width.\n * @type {!Object}\n * @private\n */\ngoog.style.ieBorderWidthKeywords_ = {\n  'thin': 2,\n  'medium': 4,\n  'thick': 6\n};\n\n\n/**\n * Helper function for IE to get the pixel border.\n * @param {Element} element  The element to get the pixel border for.\n * @param {string} prop  The part of the property name.\n * @return {number} The value in pixels.\n * @private\n */\ngoog.style.getIePixelBorder_ = function(element, prop) {\n  if (goog.style.getCascadedStyle(element, prop + 'Style') == 'none') {\n    return 0;\n  }\n  var width = goog.style.getCascadedStyle(element, prop + 'Width');\n  if (width in goog.style.ieBorderWidthKeywords_) {\n    return goog.style.ieBorderWidthKeywords_[width];\n  }\n  return goog.style.getIePixelValue_(element, width, 'left', 'pixelLeft');\n};\n\n\n/**\n * Gets the computed border widths (on all sides) in pixels\n * @param {Element} element  The element to get the border widths for.\n * @return {!goog.math.Box} The computed border widths.\n */\ngoog.style.getBorderBox = function(element) {\n  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {\n    var left = goog.style.getIePixelBorder_(element, 'borderLeft');\n    var right = goog.style.getIePixelBorder_(element, 'borderRight');\n    var top = goog.style.getIePixelBorder_(element, 'borderTop');\n    var bottom = goog.style.getIePixelBorder_(element, 'borderBottom');\n    return new goog.math.Box(top, right, bottom, left);\n  } else {\n    // On non-IE browsers, getComputedStyle is always non-null.\n    var left = goog.style.getComputedStyle(element, 'borderLeftWidth');\n    var right = goog.style.getComputedStyle(element, 'borderRightWidth');\n    var top = goog.style.getComputedStyle(element, 'borderTopWidth');\n    var bottom = goog.style.getComputedStyle(element, 'borderBottomWidth');\n\n    return new goog.math.Box(\n        parseFloat(top), parseFloat(right), parseFloat(bottom),\n        parseFloat(left));\n  }\n};\n\n\n/**\n * Returns the font face applied to a given node. Opera and IE should return\n * the font actually displayed. Firefox returns the author's most-preferred\n * font (whether the browser is capable of displaying it or not.)\n * @param {Element} el  The element whose font family is returned.\n * @return {string} The font family applied to el.\n */\ngoog.style.getFontFamily = function(el) {\n  var doc = goog.dom.getOwnerDocument(el);\n  var font = '';\n  // The moveToElementText method from the TextRange only works if the element\n  // is attached to the owner document.\n  if (doc.body.createTextRange && goog.dom.contains(doc, el)) {\n    var range = doc.body.createTextRange();\n    range.moveToElementText(el);\n\n    try {\n      font = range.queryCommandValue('FontName');\n    } catch (e) {\n      // This is a workaround for a awkward exception.\n      // On some IE, there is an exception coming from it.\n      // The error description from this exception is:\n      // This window has already been registered as a drop target\n      // This is bogus description, likely due to a bug in ie.\n      font = '';\n    }\n  }\n  if (!font) {\n    // Note if for some reason IE can't derive FontName with a TextRange, we\n    // fallback to using currentStyle\n    font = goog.style.getStyle_(el, 'fontFamily');\n  }\n\n  // Firefox returns the applied font-family string (author's list of\n  // preferred fonts.) We want to return the most-preferred font, in lieu of\n  // the *actually* applied font.\n  var fontsArray = font.split(',');\n  if (fontsArray.length > 1) font = fontsArray[0];\n\n  // Sanitize for x-browser consistency:\n  // Strip quotes because browsers aren't consistent with how they're\n  // applied; Opera always encloses, Firefox sometimes, and IE never.\n  return goog.string.stripQuotes(font, '\"\\'');\n};\n\n\n/**\n * Regular expression used for getLengthUnits.\n * @type {RegExp}\n * @private\n */\ngoog.style.lengthUnitRegex_ = /[^\\d]+$/;\n\n\n/**\n * Returns the units used for a CSS length measurement.\n * @param {string} value  A CSS length quantity.\n * @return {?string} The units of measurement.\n */\ngoog.style.getLengthUnits = function(value) {\n  var units = value.match(goog.style.lengthUnitRegex_);\n  return units && units[0] || null;\n};\n\n\n/**\n * Map of absolute CSS length units\n * @type {!Object}\n * @private\n */\ngoog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {\n  'cm': 1,\n  'in': 1,\n  'mm': 1,\n  'pc': 1,\n  'pt': 1\n};\n\n\n/**\n * Map of relative CSS length units that can be accurately converted to px\n * font-size values using getIePixelValue_. Only units that are defined in\n * relation to a font size are convertible (%, small, etc. are not).\n * @type {!Object}\n * @private\n */\ngoog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {\n  'em': 1,\n  'ex': 1\n};\n\n\n/**\n * Returns the font size, in pixels, of text in an element.\n * @param {Element} el  The element whose font size is returned.\n * @return {number} The font size (in pixels).\n */\ngoog.style.getFontSize = function(el) {\n  var fontSize = goog.style.getStyle_(el, 'fontSize');\n  var sizeUnits = goog.style.getLengthUnits(fontSize);\n  if (fontSize && 'px' == sizeUnits) {\n    // NOTE(user): This could be parseFloat instead, but IE doesn't return\n    // decimal fractions in getStyle_ and Firefox reports the fractions, but\n    // ignores them when rendering. Interestingly enough, when we force the\n    // issue and size something to e.g., 50% of 25px, the browsers round in\n    // opposite directions with Firefox reporting 12px and IE 13px. I punt.\n    return parseInt(fontSize, 10);\n  }\n\n  // In IE, we can convert absolute length units to a px value using\n  // goog.style.getIePixelValue_. Units defined in relation to a font size\n  // (em, ex) are applied relative to the element's parentNode and can also\n  // be converted.\n  if (goog.userAgent.IE) {\n    if (String(sizeUnits) in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {\n      return goog.style.getIePixelValue_(el, fontSize, 'left', 'pixelLeft');\n    } else if (\n        el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT &&\n        String(sizeUnits) in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {\n      // Check the parent size - if it is the same it means the relative size\n      // value is inherited and we therefore don't want to count it twice.  If\n      // it is different, this element either has explicit style or has a CSS\n      // rule applying to it.\n      var parentElement = /** @type {!Element} */ (el.parentNode);\n      var parentSize = goog.style.getStyle_(parentElement, 'fontSize');\n      return goog.style.getIePixelValue_(\n          parentElement, fontSize == parentSize ? '1em' : fontSize, 'left',\n          'pixelLeft');\n    }\n  }\n\n  // Sometimes we can't cleanly find the font size (some units relative to a\n  // node's parent's font size are difficult: %, smaller et al), so we create\n  // an invisible, absolutely-positioned span sized to be the height of an 'M'\n  // rendered in its parent's (i.e., our target element's) font size. This is\n  // the definition of CSS's font size attribute.\n  var sizeElement = goog.dom.createDom(goog.dom.TagName.SPAN, {\n    'style': 'visibility:hidden;position:absolute;' +\n        'line-height:0;padding:0;margin:0;border:0;height:1em;'\n  });\n  goog.dom.appendChild(el, sizeElement);\n  fontSize = sizeElement.offsetHeight;\n  goog.dom.removeNode(sizeElement);\n\n  return fontSize;\n};\n\n\n/**\n * Parses a style attribute value.  Converts CSS property names to camel case.\n * @param {string} value The style attribute value.\n * @return {!Object} Map of CSS properties to string values.\n */\ngoog.style.parseStyleAttribute = function(value) {\n  var result = {};\n  goog.array.forEach(value.split(/\\s*;\\s*/), function(pair) {\n    var keyValue = pair.match(/\\s*([\\w-]+)\\s*\\:(.+)/);\n    if (keyValue) {\n      var styleName = keyValue[1];\n      var styleValue = goog.string.trim(keyValue[2]);\n      result[goog.string.toCamelCase(styleName.toLowerCase())] = styleValue;\n    }\n  });\n  return result;\n};\n\n\n/**\n * Reverse of parseStyleAttribute; that is, takes a style object and returns the\n * corresponding attribute value.  Converts camel case property names to proper\n * CSS selector names.\n * @param {Object} obj Map of CSS properties to values.\n * @return {string} The style attribute value.\n */\ngoog.style.toStyleAttribute = function(obj) {\n  var buffer = [];\n  goog.object.forEach(obj, function(value, key) {\n    buffer.push(goog.string.toSelectorCase(key), ':', value, ';');\n  });\n  return buffer.join('');\n};\n\n\n/**\n * Sets CSS float property on an element.\n * @param {Element} el The element to set float property on.\n * @param {string} value The value of float CSS property to set on this element.\n */\ngoog.style.setFloat = function(el, value) {\n  el.style[goog.userAgent.IE ? 'styleFloat' : 'cssFloat'] = value;\n};\n\n\n/**\n * Gets value of explicitly-set float CSS property on an element.\n * @param {Element} el The element to get float property of.\n * @return {string} The value of explicitly-set float CSS property on this\n *     element.\n */\ngoog.style.getFloat = function(el) {\n  return el.style[goog.userAgent.IE ? 'styleFloat' : 'cssFloat'] || '';\n};\n\n\n/**\n * Returns the scroll bar width (represents the width of both horizontal\n * and vertical scroll).\n *\n * @param {string=} opt_className An optional class name (or names) to apply\n *     to the invisible div created to measure the scrollbar. This is necessary\n *     if some scrollbars are styled differently than others.\n * @return {number} The scroll bar width in px.\n */\ngoog.style.getScrollbarWidth = function(opt_className) {\n  // Add two hidden divs.  The child div is larger than the parent and\n  // forces scrollbars to appear on it.\n  // Using overflow:scroll does not work consistently with scrollbars that\n  // are styled with ::-webkit-scrollbar.\n  var outerDiv = goog.dom.createElement(goog.dom.TagName.DIV);\n  if (opt_className) {\n    outerDiv.className = opt_className;\n  }\n  outerDiv.style.cssText = 'overflow:auto;' +\n      'position:absolute;top:0;width:100px;height:100px';\n  var innerDiv = goog.dom.createElement(goog.dom.TagName.DIV);\n  goog.style.setSize(innerDiv, '200px', '200px');\n  outerDiv.appendChild(innerDiv);\n  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);\n  var width = outerDiv.offsetWidth - outerDiv.clientWidth;\n  goog.dom.removeNode(outerDiv);\n  return width;\n};\n\n\n/**\n * Regular expression to extract x and y translation components from a CSS\n * transform Matrix representation.\n *\n * @type {!RegExp}\n * @const\n * @private\n */\ngoog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp(\n    'matrix\\\\([0-9\\\\.\\\\-]+, [0-9\\\\.\\\\-]+, ' +\n    '[0-9\\\\.\\\\-]+, [0-9\\\\.\\\\-]+, ' +\n    '([0-9\\\\.\\\\-]+)p?x?, ([0-9\\\\.\\\\-]+)p?x?\\\\)');\n\n\n/**\n * Returns the x,y translation component of any CSS transforms applied to the\n * element, in pixels.\n *\n * @param {!Element} element The element to get the translation of.\n * @return {!goog.math.Coordinate} The CSS translation of the element in px.\n */\ngoog.style.getCssTranslation = function(element) {\n  var transform = goog.style.getComputedTransform(element);\n  if (!transform) {\n    return new goog.math.Coordinate(0, 0);\n  }\n  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);\n  if (!matches) {\n    return new goog.math.Coordinate(0, 0);\n  }\n  return new goog.math.Coordinate(\n      parseFloat(matches[1]), parseFloat(matches[2]));\n};\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n// TODO: Add support for using sizzle to locate elements\n\ngoog.provide('bot.locators.css');\n\ngoog.require('bot.Error');\ngoog.require('bot.ErrorCode');\ngoog.require('bot.userAgent');\ngoog.require('goog.dom.NodeType');\ngoog.require('goog.string');\ngoog.require('goog.userAgent');\n\n\n/**\n * Find an element by using a CSS selector\n *\n * @param {string} target The selector to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @return {Element} The first matching element found in the DOM, or null if no\n *     such element could be found.\n */\nbot.locators.css.single = function (target, root) {\n  if (!goog.isFunction(root['querySelector']) &&\n    // IE8 in non-compatibility mode reports querySelector as an object.\n    goog.userAgent.IE && bot.userAgent.isEngineVersion(8) &&\n    !goog.isObject(root['querySelector'])) {\n    throw Error('CSS selection is not supported');\n  }\n\n  if (!target) {\n    throw new bot.Error(bot.ErrorCode.INVALID_SELECTOR_ERROR,\n      'No selector specified');\n  }\n\n  target = goog.string.trim(target);\n\n  var element;\n  try {\n    element = root.querySelector(target);\n  } catch (e) {\n    throw new bot.Error(bot.ErrorCode.INVALID_SELECTOR_ERROR,\n      'An invalid or illegal selector was specified');\n  }\n\n  return element && element.nodeType == goog.dom.NodeType.ELEMENT ?\n      /**@type {Element}*/ (element) : null;\n};\n\n\n/**\n * Find all elements matching a CSS selector.\n *\n * @param {string} target The selector to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @return {!IArrayLike} All matching elements, or an empty list.\n */\nbot.locators.css.many = function (target, root) {\n  if (!goog.isFunction(root['querySelectorAll']) &&\n    // IE8 in non-compatibility mode reports querySelector as an object.\n    goog.userAgent.IE && bot.userAgent.isEngineVersion(8) &&\n    !goog.isObject(root['querySelector'])) {\n    throw Error('CSS selection is not supported');\n  }\n\n  if (!target) {\n    throw new bot.Error(bot.ErrorCode.INVALID_SELECTOR_ERROR,\n      'No selector specified');\n  }\n\n  target = goog.string.trim(target);\n\n  try {\n    return root.querySelectorAll(target);\n  } catch (e) {\n    throw new bot.Error(bot.ErrorCode.INVALID_SELECTOR_ERROR,\n      'An invalid or illegal selector was specified');\n  }\n};\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\ngoog.provide('bot.locators.id');\n\ngoog.require('bot.dom');\ngoog.require('goog.array');\ngoog.require('goog.dom');\n\n\n/**\n * Tests whether the standardized W3C Selectors API are available on an\n * element and the target locator meets CSS requirements.\n * @param {!(Document|Element)} root The document or element to test for CSS\n *     selector support.\n * @param {string} target The id to search for.\n * @return {boolean} Whether or not the root supports query selector APIs.\n * @see http://www.w3.org/TR/selectors-api/\n * @private\n */\nbot.locators.id.canUseQuerySelector_ = function (root, target) {\n  return !!(root.querySelectorAll && root.querySelector) && !/^\\d.*/.test(target);\n};\n\n\n/**\n * Find an element by using the value of the ID attribute.\n * @param {string} target The id to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @return {Element} The first matching element found in the DOM, or null if no\n *     such element could be found.\n */\nbot.locators.id.single = function (target, root) {\n  var dom = goog.dom.getDomHelper(root);\n\n  var e = dom.getElement(target);\n  if (!e) {\n    return null;\n  }\n\n  // On IE getting by ID returns the first match by id _or_ name.\n  if (bot.dom.getAttribute(e, 'id') == target &&\n    root != e && goog.dom.contains(root, e)) {\n    return e;\n  }\n\n  var elements = dom.getElementsByTagNameAndClass('*');\n  var element = goog.array.find(elements, function (element) {\n    return bot.dom.getAttribute(element, 'id') == target &&\n      root != element && goog.dom.contains(root, element);\n  });\n  return /**@type{Element}*/ (element);\n};\n\n\n/**\n * Find many elements by using the value of the ID attribute.\n * @param {string} target The id to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @return {!IArrayLike} All matching elements, or an empty list.\n */\nbot.locators.id.many = function (target, root) {\n  if (!target) {\n    return [];\n  }\n  if (bot.locators.id.canUseQuerySelector_(root, target)) {\n    try {\n      // Need to escape the ID for use in a CSS selector.\n      return root.querySelectorAll('#' + bot.locators.id.cssEscape_(target));\n    } catch (e) {\n      return [];\n    }\n  }\n  var dom = goog.dom.getDomHelper(root);\n  var elements = dom.getElementsByTagNameAndClass('*', null, root);\n  return goog.array.filter(elements, function (e) {\n    return bot.dom.getAttribute(e, 'id') == target;\n  });\n};\n\n/**\n * Given a string, escapes all the characters that have special meaning in CSS.\n * https://mathiasbynens.be/notes/css-escapes\n *\n * An ID can contain anything but spaces, but we also escape whitespace because\n * some webpages use spaces, and getElementById allows spaces in every browser.\n * http://www.w3.org/TR/html5/dom.html#the-id-attribute\n *\n * This could be further improved, perhaps by using\n * http://dev.w3.org/csswg/cssom/#the-css.escape()-method , where implemented,\n * or a polyfill such as https://github.com/mathiasbynens/CSS.escape.\n *\n * @param {!string} s String to escape CSS meaningful characters in.\n * @return {!string} Escaped string.\n * @private\n */\nbot.locators.id.cssEscape_ = function (s) {\n  // One backslash escapes things in a regex statement; we need two in a string.\n  return s.replace(/([\\s'\"\\\\#.:;,!?+<>=~*^$|%&@`{}\\-\\/\\[\\]\\(\\)])/g, '\\\\$1');\n};\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\ngoog.provide('bot.locators.linkText');\ngoog.provide('bot.locators.partialLinkText');\n\ngoog.require('bot');\ngoog.require('bot.dom');\ngoog.require('bot.locators.css');\ngoog.require('goog.array');\ngoog.require('goog.dom');\n\n\n/**\n * Find an element by using the text value of a link\n * @param {string} target The link text to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @param {boolean=} opt_isPartial Whether the link text needs to be matched\n *     only partially.\n * @return {Element} The first matching element found in the DOM, or null if no\n *     such element could be found.\n * @private\n */\nbot.locators.linkText.single_ = function (target, root, opt_isPartial) {\n  var elements;\n  try {\n    elements = bot.locators.css.many('a', root);\n  } catch (e) {\n    // Old versions of browsers don't support CSS. They won't have XHTML\n    // support. Sorry.\n    elements = goog.dom.getDomHelper(root).getElementsByTagNameAndClass(\n      goog.dom.TagName.A, /*className=*/null, root);\n  }\n\n  var element = goog.array.find(elements, function (element) {\n    var text = bot.dom.getVisibleText(element);\n    // getVisibleText replaces non-breaking spaces with plain\n    // spaces, so if these are present at the beginning or end\n    // of the link text, we need to trim the regular spaces off\n    // to be spec compliant for matching on link text.\n    text = text.replace(/^[\\s]+|[\\s]+$/g, '');\n    return (opt_isPartial && text.indexOf(target) != -1) || text == target;\n  });\n  return /**@type{Element}*/ (element);\n};\n\n\n/**\n * Find many elements by using the value of the link text\n * @param {string} target The link text to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @param {boolean=} opt_isPartial Whether the link text needs to be matched\n *     only partially.\n * @return {!IArrayLike} All matching elements, or an empty list.\n * @private\n */\nbot.locators.linkText.many_ = function (target, root, opt_isPartial) {\n  var elements;\n  try {\n    elements = bot.locators.css.many('a', root);\n  } catch (e) {\n    // Old versions of browsers don't support CSS. They won't have XHTML\n    // support. Sorry.\n    elements = goog.dom.getDomHelper(root).getElementsByTagNameAndClass(\n      goog.dom.TagName.A, /*className=*/null, root);\n  }\n\n  return goog.array.filter(elements, function (element) {\n    var text = bot.dom.getVisibleText(element);\n    // getVisibleText replaces non-breaking spaces with plain\n    // spaces, so if these are present at the beginning or end\n    // of the link text, we need to trim the regular spaces off\n    // to be spec compliant for matching on link text.\n    text = text.replace(/^[\\s]+|[\\s]+$/g, '');\n    return (opt_isPartial && text.indexOf(target) != -1) || text == target;\n  });\n};\n\n\n/**\n * Find an element by using the text value of a link\n * @param {string} target The link text to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @return {Element} The first matching element found in the DOM, or null if no\n *     such element could be found.\n */\nbot.locators.linkText.single = function (target, root) {\n  return bot.locators.linkText.single_(target, root, false);\n};\n\n\n/**\n * Find many elements by using the value of the link text\n * @param {string} target The link text to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @return {IArrayLike} All matching elements, or an empty list.\n */\nbot.locators.linkText.many = function (target, root) {\n  return bot.locators.linkText.many_(target, root, false);\n};\n\n\n/**\n * Find an element by using part of the text value of a link.\n * @param {string} target The link text to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @return {Element} The first matching element found in the DOM, or null if no\n *     such element could be found.\n */\nbot.locators.partialLinkText.single = function (target, root) {\n  return bot.locators.linkText.single_(target, root, true);\n};\n\n\n/**\n * Find many elements by using part of the value of the link text.\n * @param {string} target The link text to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @return {IArrayLike} All matching elements, or an empty list.\n */\nbot.locators.partialLinkText.many = function (target, root) {\n  return bot.locators.linkText.many_(target, root, true);\n};\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\ngoog.provide('bot.locators.name');\n\ngoog.require('bot.dom');\ngoog.require('goog.array');\ngoog.require('goog.dom');\n\n\n/**\n * Find an element by the value of the name attribute\n *\n * @param {string} target The name to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @return {Element} The first matching element found in the DOM, or null if no\n *     such element could be found.\n */\nbot.locators.name.single = function (target, root) {\n  var dom = goog.dom.getDomHelper(root);\n  var allElements = dom.getElementsByTagNameAndClass('*', null, root);\n  var element = goog.array.find(allElements, function (element) {\n    return bot.dom.getAttribute(element, 'name') == target;\n  });\n  return /**@type{Element}*/ (element);\n};\n\n\n/**\n * Find all elements by the value of the name attribute\n *\n * @param {string} target The name to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @return {!IArrayLike} All matching elements, or an empty list.\n */\nbot.locators.name.many = function (target, root) {\n  var dom = goog.dom.getDomHelper(root);\n  var allElements = dom.getElementsByTagNameAndClass('*', null, root);\n  return goog.array.filter(allElements, function (element) {\n    return bot.dom.getAttribute(element, 'name') == target;\n  });\n};\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Factory methods for the supported locator strategies.\n *\n * This is a modified subset of the original, with implementations provided by the Selenium atoms:\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/by.html}\n */\n\ngoog.module(\"webdriver.by\");\n\n// Selenium browser atoms\nconst byClassName = goog.require('bot.locators.className');\nconst byCss = goog.require('bot.locators.css');\nconst byId = goog.require('bot.locators.id');\nconst byLinkText = goog.require('bot.locators.linkText');\nconst byName = goog.require('bot.locators.name');\nconst byPartialLinkText = goog.require('bot.locators.partialLinkText');\nconst byTagName = goog.require('bot.locators.tagName');\nconst byXpath = goog.require('bot.locators.xpath');\n\n/**\n * Short-hand expressions for the primary element locator strategies.\n * For example the following two statements are equivalent:\n *\n *     var e1 = driver.findElement(By.id('foo'));\n *     var e2 = driver.findElement({id: 'foo'});\n *\n * Care should be taken when using JavaScript minifiers (such as the\n * Closure compiler), as locator hashes will always be parsed using\n * the un-obfuscated properties listed.\n *\n * @typedef {(\n *     {className: string}|\n *     {css: string}|\n *     {id: string}|\n *     {js: string}|\n *     {linkText: string}|\n *     {name: string}|\n *     {partialLinkText: string}|\n *     {tagName: string}|\n *     {xpath: string})}\n */\nvar ByHash; // eslint-disable-line\n\n/**\n * Describes a mechanism for locating an element on the page.\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_By.html|webdriver.By}\n */\nclass By {\n  /**\n   * @param {!string} using The name of the location strategy to use.\n   * @param {!string} value The value to search for.\n   * @param {!function(!(Document|Element)): IArrayLike<!Element>} findElements The locator implementation.\n   * @private\n   */\n  constructor(using, value, findElements) {\n    this.using = using;\n    this.value = value;\n    this.findElements = findElements;\n  }\n\n  /**\n   * Locates elements that have a specific class name.\n   * @export\n   *\n   * @param {string} name The class name to search for.\n   * @return {!By} The new locator.\n   * @see http://www.w3.org/TR/2011/WD-html5-20110525/elements.html#classes\n   * @see http://www.w3.org/TR/CSS2/selector.html#class-html\n   */\n  static className(name) {\n    return new By('class name', name, (context) => byClassName.many(name, context));\n  }\n\n  /**\n   * Locates elements using a CSS selector.\n   * @export\n   *\n   * @param {string} selector The CSS selector to use.\n   * @return {!By} The new locator.\n   * @see http://www.w3.org/TR/CSS2/selector.html\n   */\n  static css(selector) {\n    return new By('css selector', selector, (context) => byCss.many(selector, context));\n  }\n\n  /**\n   * Locates elements by the ID attribute. This locator uses the CSS selector\n   * `*[id=\"$ID\"]`, _not_ `document.getElementById`.\n   * @export\n   *\n   * @param {string} id The ID to search for.\n   * @return {!By} The new locator.\n   */\n  static id(id) {\n    return new By('id', id, (context) => byId.many(id, context));\n  }\n\n  /**\n   * Locates link elements whose\n   * {@linkplain webdriver.WebElement#getText visible text} matches the given\n   * string.\n   * @export\n   *\n   * @param {string} text The link text to search for.\n   * @return {!By} The new locator.\n   */\n  static linkText(text) {\n    return new By('link text', text, (context) => byLinkText.many(text, context));\n  }\n\n  /**\n   * Locates elements whose `name` attribute has the given value.\n   * @export\n   *\n   * @param {string} name The name attribute to search for.\n   * @return {!By} The new locator.\n   */\n  static nameAttribute(name) {\n    return new By('name', name, (context) => byName.many(name, context));\n  }\n    \n  /**\n   * Locates link elements whose\n   * {@linkplain webdriver.WebElement#getText visible text} contains the given\n   * substring.\n   * @export\n   *\n   * @param {string} text The substring to check for in a link's visible text.\n   * @return {!By} The new locator.\n   */\n  static partialLinkText(text) {\n    return new By('partial link text', text, (context) => byPartialLinkText.many(text, context));\n  }\n\n  /**\n   * Locates elements with a given tag name.\n   * @export\n   *\n   * @param {string} name The tag name to search for.\n   * @return {!By} The new locator.\n   */\n  static tagName(name) {\n    return new By('tag name', name, (context) => byTagName.many(name, context));\n  }\n\n  /**\n   * Locates elements matching a XPath selector. Care should be taken when\n   * using an XPath selector with a {@link Element} as WebDriver\n   * will respect the context in the specified in the selector. For example,\n   * given the selector `//div`, WebDriver will search from the document root\n   * regardless of whether the locator was used with a WebElement.\n   * @export\n   *\n   * @param {string} xpath The XPath selector to use.\n   * @return {!By} The new locator.\n   * @see http://www.w3.org/TR/xpath/\n   */\n  static xpath(xpath) {\n    return new By('xpath', xpath, (context) => byXpath.many(xpath, context));\n  }\n\n  /** @override */\n  toString() {\n    // The static By.name() overrides this.constructor.name.  Shame...\n    return `By(${this.using}, ${this.value})`;\n  }\n}\n\nexports = { By };\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\ngoog.provide('bot.locators.tagName');\n\ngoog.require('bot.Error');\ngoog.require('bot.ErrorCode');\n\n\n/**\n * Find an element by its tag name.\n * @param {string} target The tag name to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @return {Element} The first matching element found in the DOM, or null if no\n *     such element could be found.\n */\nbot.locators.tagName.single = function (target, root) {\n  if (target === \"\") {\n    throw new bot.Error(bot.ErrorCode.INVALID_SELECTOR_ERROR,\n      'Unable to locate an element with the tagName \"\"');\n  }\n  return root.getElementsByTagName(target)[0] || null;\n};\n\n\n/**\n * Find all elements with a given tag name.\n * @param {string} target The tag name to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @return {!IArrayLike} All matching elements, or an empty list.\n */\nbot.locators.tagName.many = function (target, root) {\n  if (target === \"\") {\n    throw new bot.Error(bot.ErrorCode.INVALID_SELECTOR_ERROR,\n      'Unable to locate an element with the tagName \"\"');\n  }\n  return root.getElementsByTagName(target);\n};\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\ngoog.provide('bot.locators.className');\n\ngoog.require('bot.Error');\ngoog.require('bot.ErrorCode');\ngoog.require('goog.dom');\ngoog.require('goog.string');\n\n\n/**\n * Tests whether the standardized W3C Selectors API are available on an\n * element.\n * @param {!(Document|Element)} root The document or element to test for CSS\n *     selector support.\n * @return {boolean} Whether or not the root supports query selector APIs.\n * @see http://www.w3.org/TR/selectors-api/\n * @private\n */\nbot.locators.className.canUseQuerySelector_ = function (root) {\n  return !!(root.querySelectorAll && root.querySelector);\n};\n\n\n/**\n * Find an element by its class name.\n * @param {string} target The class name to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @return {Element} The first matching element found in the DOM, or null if no\n *     such element could be found.\n */\nbot.locators.className.single = function (target, root) {\n  if (!target) {\n    throw new bot.Error(bot.ErrorCode.INVALID_SELECTOR_ERROR,\n      'No class name specified');\n  }\n\n  target = goog.string.trim(target);\n  if (target.indexOf(' ') !== -1) {\n    throw new bot.Error(bot.ErrorCode.INVALID_SELECTOR_ERROR,\n      'Compound class names not permitted');\n  }\n\n  // Closure will not properly escape class names that contain a '.' when using\n  // the native selectors API, so we have to handle this ourselves.\n  if (bot.locators.className.canUseQuerySelector_(root)) {\n    try {\n      return root.querySelector('.' + target.replace(/\\./g, '\\\\.')) || null;\n    } catch (e) {\n      throw new bot.Error(bot.ErrorCode.INVALID_SELECTOR_ERROR,\n        'An invalid or illegal class name was specified');\n    }\n  }\n  var elements = goog.dom.getDomHelper(root).getElementsByTagNameAndClass(\n      /*tagName=*/'*', /*className=*/target, root);\n  return elements.length ? elements[0] : null;\n};\n\n\n/**\n * Find an element by its class name.\n * @param {string} target The class name to search for.\n * @param {!(Document|Element)} root The document or element to perform the\n *     search under.\n * @return {!IArrayLike} All matching elements, or an empty list.\n */\nbot.locators.className.many = function (target, root) {\n  if (!target) {\n    throw new bot.Error(bot.ErrorCode.INVALID_SELECTOR_ERROR,\n      'No class name specified');\n  }\n\n  target = goog.string.trim(target);\n  if (target.indexOf(' ') !== -1) {\n    throw new bot.Error(bot.ErrorCode.INVALID_SELECTOR_ERROR,\n      'Compound class names not permitted');\n  }\n\n  // Closure will not properly escape class names that contain a '.' when using\n  // the native selectors API, so we have to handle this ourselves.\n  if (bot.locators.className.canUseQuerySelector_(root)) {\n    try {\n      return root.querySelectorAll('.' + target.replace(/\\./g, '\\\\.'));\n    } catch (e) {\n      throw new bot.Error(bot.ErrorCode.INVALID_SELECTOR_ERROR,\n        'An invalid or illegal class name was specified');\n    }\n  }\n  return goog.dom.getDomHelper(root).getElementsByTagNameAndClass(\n      /*tagName=*/'*', /*className=*/target, root);\n};\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview WebDriver-related errors.\n * \n * This is a modified subset of the original:\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/error.html}\n */\n\ngoog.module(\"webdriver.error\");\n\n/**\n * The base WebDriver error type. This error type is only used directly when a\n * more appropriate category is not defined for the offending error.\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/error_exports_WebDriverError.html}\n */\nclass WebDriverError extends Error {\n  /** @param {string=} opt_error the error message, if any. */\n  constructor(opt_error) {\n    super(opt_error);\n\n    /** @override */\n    this.name = this.constructor.name;\n\n  }\n\n  // /** @override */\n  // toString() {\n  //   return `${this.name}: '${this.message}'`;\n  // }\n}\n\n/**\n * An operation did not complete before its timeout expired.\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/error_exports_TimeoutError.html}\n */\nclass TimeoutError extends WebDriverError {\n  /** @param {string=} opt_error the error message, if any. */\n  constructor(opt_error) {\n    super(opt_error);\n\n    // prevent display of setTimeout call chains\n    this.stack = '';\n  }\n}\n\nexports = { WebDriverError, TimeoutError };\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied. s See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview The heart of the WebDriver JavaScript API.\n * \n * This is a modified subset of the original:\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/webdriver.html}\n */\n\ngoog.module('webdriver');\n\nconst { TimeoutError } = goog.require('webdriver.error');\nconst { isPromise } = goog.require('webdriver.promise');\n\n/**\n * Defines a condition for use with {@link wait}.\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_Condition.html|webdriver.Condition}\n * @template T, V\n */\nclass Condition {\n  /**\n   * @param {string}          message A descriptive error message. Should complete the sentence \"Waiting [...]\".\n   * @param {function(!T): V} fn      The condition function to evaluate on each iteration of the wait loop.\n   */\n  constructor(message, fn) {\n    this.message = message;\n    this.fn = fn;\n  }\n\n  /**\n   * @return {string} A description of this condition.\n   */\n  description() {\n    return 'Waiting ' + this.message;\n  }\n}\n\n/**\n * Defines a condition that will result in an {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Element}.\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_WebElementCondition.html|webdriver.WebElementCondition}\n * @template T\n * @extends {Condition<T, Element>}\n */\nclass ElementCondition extends Condition {\n  /**\n   * @param {string} message A descriptive error message. Should complete the sentence \"Waiting [...]\".\n   * @param {function(!T): (Element|IThenable<Element>)} fn The condition function to\n   *      evaluate on each iteration of the wait loop.\n   */\n  constructor(message, fn) {\n    super(message, fn);\n  }\n}\n\n/**\n * A promise that will be fulfilled with an {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Element}.\n * @implements {IThenable<!Element>}\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_WebElementPromise.html|webdriver.WebElementPromise}\n */\nclass ElementPromise {\n  /**\n   * @param {!Promise<!Element>} el A promise that will resolve to the promised element.\n   */\n  constructor(el) {\n    /** @override */\n    this.then = el.then.bind(el);\n\n    this.catch = el.catch.bind(el);\n  }\n}\n\n/**\n * Resolves a wait message from either a function or a string.\n * @see {@link https://github.com/SeleniumHQ/selenium/blob/d912be8f325d3bed9758140b50599ee0619f1929/javascript/node/selenium-webdriver/lib/webdriver.js#L221|webdriver.resolveWaitMessage}\n *\n * @param {(string|function() : string)} [message] An optional message to use if the wait times out.\n * @return {string} The resolved message.\n */\nfunction resolveWaitMessage(message) {\n  return message ? `${typeof message === 'function' ? message() : message}\\n` : '';\n}\n\n/**\n * @description Waits for a condition to evaluate to a \"truthy\" value. The condition may be specified by a\n * {@link Condition}, as a custom function, or as any promise-like thenable.\n *\n * For a {@link Condition} or function, the wait will repeatedly evaluate the condition until it returns a truthy\n * value. If any errors occur while evaluating the condition, they will be allowed to propagate. In the event a\n * condition returns a Promise, the polling loop will wait for it to be resolved and use the resolved value for\n * whether the condition has been satisfied. The resolution time for a promise is always factored into whether a\n * wait has timed out.\n *\n * If the provided condition is an {@link ElementCondition}, then the wait will return a\n * {@link ElementPromise} that will resolve to the element that satisfied the condition.\n *\n * @example\n * (async ({wait, until, By}) => {\n *     await wait({\n *         condition: until.elementLocated(By.css('button')),\n *         input: document\n *     }).click();\n * })(webdriver);\n *\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_WebDriver.html#wait|webdriver.wait}\n * @see {@link https://www.selenium.dev/selenium/docs/api/java/org/openqa/selenium/support/ui/FluentWait.html|webdriver.FluentWait}\n * \n * Param object:\n * [param.condition]       The condition to wait on, defined as a promise, {@link Condition} object,\n *      or a function to evaluate as a condition.\n * [param.input]           The input value to pass to the evaluated conditions.\n * [param.timeout=0]       The duration in milliseconds, how long to wait for the condition to be true.\n * [param.pollTimeout=200] The duration in milliseconds, how long to wait between polling the condition.\n * [param.message]         An optional message to use if the wait times out.\n *\n * @template T\n * @template V\n * @param {{condition: (IThenable<V>|Condition<T, V>|function(T): V), input: (T|undefined), timeout: (number|undefined), pollTimeout: (number|undefined), message: (string|undefined|function(): string)}} obj\n * @return {!(IThenable<V>|ElementPromise)} A promise that will be resolved with the first truthy value returned\n *      by the condition function, or rejected if the condition times out. If the input input condition is an\n *      instance of an {@link ElementCondition}, the returned value will be an {@link ElementPromise}.\n * @throws {TypeError} if the provided `condition` is not a valid type.\n * @suppress {reportUnknownTypes} allow generic parameter\n */\n// function wait({ condition, input = undefined, timeout = 0, pollTimeout = 200, message = undefined }) {\nfunction wait(obj) {\n  // unfortunately, GCC generics & parameter destructuring support are incomplete, so this is necessary\n  // to prevent compiler renaming (at the cost of some type checking)\n  let condition = obj['condition'];\n  let input = obj['input'];\n  let timeout = obj['timeout'];\n  let pollTimeout = obj['pollTimeout'];\n  let message = obj['message'];\n\n  if (typeof timeout === 'undefined') {\n    timeout = 0;\n  }\n  else if (typeof timeout !== 'number' || timeout < 0) {\n    throw new TypeError('timeout must be a number >= 0: ' + timeout);\n  }\n\n  if (typeof pollTimeout === 'undefined') {\n    pollTimeout = 200;\n  }\n  else if (typeof pollTimeout !== 'number' || pollTimeout < 0) {\n    throw new TypeError('pollTimeout must be a number >= 0: ' + pollTimeout);\n  }\n\n  if (isPromise(condition)) {\n    let pCondition = /** @type {!Promise} */ (condition);\n    return new Promise((resolve, reject) => {\n      if (!timeout) {\n        resolve(pCondition);\n        return;\n      }\n      let start = Date.now();\n      let timer = setTimeout(function () {\n        timer = null;\n        try {\n          let timeoutMessage = resolveWaitMessage(message);\n          reject(\n            new TimeoutError(`${timeoutMessage}Timed out waiting for promise to resolve after ${Date.now() - start}ms`)\n          );\n        } catch (ex) {\n          reject(\n            new TimeoutError(`${ex.message}\\nTimed out waiting for promise to resolve after ${Date.now() - start}ms`)\n          );\n        }\n      }, timeout);\n      const clearTimer = () => timer && clearTimeout(timer);\n\n      pCondition.then(\n        function (value) {\n          clearTimer();\n          resolve(value);\n        },\n        function (error) {\n          clearTimer();\n          reject(error);\n        }\n      );\n    });\n  }\n\n  let fn;\n  if (condition instanceof Condition) {\n    message = message || condition.description();\n    fn = condition.fn;\n  } else if (typeof condition === 'function') {\n    fn = condition;\n  } else {\n    throw new TypeError('Wait condition must be a promise-like object, function, or a Condition object');\n  }\n\n  function evaluateCondition() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(fn(input));\n      } catch (ex) {\n        reject(ex);\n      }\n    });\n  }\n  let pResult = new Promise((resolve, reject) => {\n    const startTime = Date.now();\n    const pollCondition = async () => {\n      evaluateCondition().then(function (value) {\n        const elapsed = Date.now() - startTime;\n        if (value) {\n          resolve(value);\n        } else if (timeout && elapsed >= timeout) {\n          try {\n            let timeoutMessage = resolveWaitMessage(message);\n            reject(new TimeoutError(`${timeoutMessage}Wait timed out after ${elapsed}ms`));\n          } catch (ex) {\n            reject(new TimeoutError(`${ex.message}\\nWait timed out after ${elapsed}ms`));\n          }\n        } else {\n          setTimeout(pollCondition, pollTimeout);\n        }\n      }, reject);\n    };\n    pollCondition();\n  });\n  if (condition instanceof ElementCondition) {\n    return new ElementPromise(\n      pResult.then(function (value) {\n        if (!(value instanceof Element)) {\n          throw new TypeError(\n            'ElementCondition did not resolve to a Element: ' + Object.prototype.toString.call(value)\n          );\n        }\n        return value;\n      })\n    );\n  }\n  return pResult;\n}\n\nexports = {\n  wait,\n  Condition,\n  ElementCondition,\n  ElementPromise,\n};","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines common conditions for use with\n * {@link webdriver.wait WebDriver wait}.\n *\n * Sample usage:\n *\n *     await webdriver.wait({\n *         condition: until.elementVisible(By.name('button')),\n *         timeout: 3000\n *     }).click();\n *\n *     await webdriver.wait({\n *         condition: until.titleIs('Foobar')\n *     });\n *\n * To define a custom condition, simply call WebDriver.wait with a function\n * that will eventually return a truthy-value (neither null, undefined, false,\n * 0, or the empty string):\n *\n *     await webdriver.wait({\n *         condition: () => document.title === 'webdriver - Google Search',\n *         timeout: 1000\n *     });\n * \n * This is a modified subset of the original:\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/until.html}\n */\n\ngoog.module(\"webdriver.until\");\n\n// Selenium browser atom\nconst botDom = goog.require('bot.dom');\n\nconst googArray = goog.require('goog.array');\nconst { By } = goog.require(\"webdriver.by\");\nconst { Condition, ElementCondition } = goog.require('webdriver');\n\n/**\n * Search for multiple elements on the page. Refer to the documentation on\n * [webdriver.findElement(by)]{@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_WebDriver.html#findElement}\n * for information on element locator strategies.\n *\n * @param {!(By|function(*): !(Element|IArrayLike<!Element>))} locator The locator to use.\n * @param {*} context The search context.\n * @return {!IThenable<!IArrayLike<!Element>>} A promise that will resolve to an array-like collection of Elements.\n */\nasync function findElements(locator, context) {\n  if (typeof locator === 'function') {\n    let result = await locator(context);\n    if (result instanceof Element) {\n      result = [result];\n    } else if (goog.isArrayLike(result)) {\n      result = googArray.filter(result, function (item) {\n        return item instanceof Element;\n      });\n    } else {\n      result = [];\n    }\n    return result;\n  } else {\n      let result = (/** @type {By} */ (locator)).findElements(/** @type {!(Document|Element)} */ (context));\n      if (!result) {\n        result = [];\n      }\n      return result;\n  }\n}\n\n/**\n * Creates a condition that will loop until an element is found with the given locator.\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/until.html#elementLocated|webdriver.until.elementLocated}\n *\n * @param {!(By|function(*): !(Element|IArrayLike<!Element>))} locator The locator to use.\n * @return {!ElementCondition} The new condition.\n */\nfunction elementLocated(locator) {\n  let locatorStr = typeof locator === 'function' ? 'by function()' : locator + '';\n  return new ElementCondition(\n      'for element to be located ' + locatorStr, \n      /**\n       * @param {*} context \n       * @returns {!IThenable<Element>} The located element.\n       */\n      async function (context) {\n    const elements = await findElements(locator, context);\n    return elements.length > 0 ? elements[0] : null;\n  });\n}\n\n/**\n * Creates a condition that will loop until at least one element is found with the given locator.\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/until.html#elementsLocated|webdriver.until.elementsLocated}\n *\n * @param {!(By|function(*): !(Element|IArrayLike<!Element>))} locator The locator to use.\n * @return {!Condition<!(Document|Element), !(IThenable<IArrayLike<!Element>>)>} The new condition.\n */\nfunction elementsLocated(locator) {\n  let locatorStr = typeof locator === 'function' ? 'by function()' : locator + '';\n  return new Condition(\n      'for at least one element to be located ' + locatorStr,\n      /**\n       * @param {!(Document|Element)} context The search context.\n       * @returns {!IThenable<IArrayLike<!Element>>} The located elements, or null.\n       */\n      async function (context) {\n    const elements = await findElements(locator, context);\n    return elements.length > 0 ? elements : null;\n  });\n}\n\n/**\n * Creates a condition that will wait for the given element to become visible.\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/until.html#elementIsVisible|webdriver.until.elementIsVisible}\n *\n * @param {!Element} element The element to test.\n * @return {!ElementCondition} The new condition.\n */\nfunction elementIsVisible(element) {\n  return new ElementCondition(\n      'until element is visible',\n      /**\n       * @param {!Element} context element to test.\n       * @returns {!IThenable<Element>} The element if visible, or null.\n       */\n      async function (context) {\n    return botDom.isShown(element) ? element : null;\n  });\n}\n\n/**\n * Creates a condition that will wait for the given element to be in the DOM, yet not visible to the user.\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/until.html#elementIsNotVisible|webdriver.until.elementIsNotVisible}\n *\n * @param {!Element} element The element to test.\n * @return {!ElementCondition} The new condition.\n */\nfunction elementIsNotVisible(element) {\n  return new ElementCondition('until element is not visible', async function (context) {\n    return botDom.isShown(element) ? null : element;\n  });\n}\n\n// prevent compiler renaming\nexports['elementLocated'] = elementLocated;\nexports['elementsLocated'] = elementsLocated;\nexports['elementIsVisible'] = elementIsVisible;\nexports['elementIsNotVisible'] = elementIsNotVisible;\n","// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\n * @fileoverview Defines a handful of utility functions to simplify working with promises.\n * \n * This is a modified subset of the original:\n * @see {@link https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/promise.html}\n */\n\ngoog.module(\"webdriver.promise\");\n\n/**\n * Determines whether a `value` should be treated as a promise.\n * Any object whose \"then\" property is a function will be considered a promise.\n *\n * @param {*} value The value to test.\n * @return {boolean} Whether the value is a promise.\n */\nfunction isPromise(value) {\n  return Object.prototype.toString.call(value) === '[object Promise]';\n}\n\n/**\n * Creates a promise that will be resolved at a set time in the future.\n * @param {number} ms The amount of time, in milliseconds, to wait before\n *     resolving the promise.\n * @return {!Promise<void>} The promise.\n */\nfunction delayed(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexports = {\n  isPromise,\n  delayed,\n};\n","/**\n * @fileoverview The core `GM_selenium` module, plus the `until` module and `By` class.\n */\n\ngoog.module('GM_selenium_all');\n\nconst misc = goog.require('misc');\nconst until = goog.require('webdriver.until');\nconst { By } = goog.require('webdriver.by');\nconst { GM_selenium } = goog.require('GM_selenium');\n\nconst assignAs = misc.assignAs;\nassignAs(GM_selenium, 'By', By);\nassignAs(GM_selenium, 'until', until);\n\nexports = {\n  GM_selenium,\n};\n"],
"names":["goog.global","self","goog.isString","val","goog.typeOf","value","s","Array","Object","className","prototype","toString","call","length","splice","propertyIsEnumerable","goog.isArrayLike","type","goog.bindNative_","fn","selfObj","var_args","apply","bind","arguments","goog.bindJs_","Error","boundArgs","slice","newArgs","unshift","goog.bind","Function","indexOf","goog.bind.apply","goog.partial","args","push","goog.exportSymbol","object","wgxpath.install","parts","publicPath","cur","execScript","part","shift","undefined","opt_object","goog.inherits","childCtor","parentCtor","tempCtor","constructor","wgxpath.Context","node","opt_position","opt_last","node_","position_","last_","goog.array.indexOf","arr","obj","opt_fromIndex","fromIndex","i","goog.array.forEach","forEach","f","opt_obj","l","arr2","split","goog.array.filter","filter","res","resLength","goog.array.map","map","goog.array.reduce","reduce","rval","index","goog.array.some","some","goog.array.every","every","goog.array.find","charAt","goog.array.concat","concat","goog.array.slice","start","opt_end","goog.string.internal.endsWith","str","suffix","goog.string.internal.trim","String","trim","exec","goog.string.internal.compareVersions","version1","version2","order","v1Subs","v2Subs","subCount","Math","max","subIdx","v1Sub","v2Sub","v1Comp","v2Comp","goog.string.internal.compareElements_","v1CompNum","parseInt","v2CompNum","left","right","goog.labs.userAgent.util.userAgent_","navigator","goog.global.navigator","userAgent","goog.labs.userAgent.util.matchUserAgent","goog.labs.userAgent.browser.matchFirefox_","goog.labs.userAgent.browser.matchChrome_","goog.string.toCamelCase","replace","all","match","toUpperCase","goog.labs.userAgent.platform.isIphone","goog.reflect.cache","key","valueFn","cacheObj","goog.userAgent.isVersionOrHigherCache_","hasOwnProperty","goog.userAgent.OPERA","goog.userAgent.IE","goog.userAgent.EDGE","goog.userAgent.GECKO","toLowerCase","subString","goog.userAgent.WEBKIT","goog.userAgent.getDocumentMode_","doc","goog.userAgent.VERSION","version","goog.userAgent.getVersionRegexResult_","docMode","parseFloat","goog.userAgent.isVersionOrHigher","wgxpath.userAgent.IE_DOC_PRE_9","documentMode","Number","goog.userAgent.DOCUMENT_MODE","wgxpath.userAgent.IE_DOC_PRE_8","wgxpath.IEAttrWrapper","parent","nodeName","nodeValue","nodeType","ATTRIBUTE","parentNode","ownerElement","wgxpath.IEAttrWrapper.forAttrOf","attr","getAttribute","wgxpath.Lexer","tokens","tokens_","index_","wgxpath.Lexer.tokenize","source","wgxpath.Lexer.TOKEN_","wgxpath.Lexer.LEADING_WHITESPACE_.test","test","wgxpath.Lexer.LEADING_WHITESPACE_","wgxpath.Lexer.prototype.peek","opt_i","wgxpath.Lexer.prototype.next","wgxpath.Lexer.prototype.empty","goog.math.Coordinate","opt_x","opt_y","x","y","ceil","goog.math.Coordinate.prototype.ceil","floor","goog.math.Coordinate.prototype.floor","round","goog.math.Coordinate.prototype.round","goog.math.Size","width","height","aspectRatio","goog.math.Size.prototype.aspectRatio","goog.math.Size.prototype.ceil","goog.math.Size.prototype.floor","goog.math.Size.prototype.round","goog.dom.getDomHelper","opt_element","goog.dom.DomHelper","goog.dom.getOwnerDocument","goog.dom.defaultDomHelper_","goog.dom.getNextElementNode_","ELEMENT","previousSibling","goog.dom.contains","descendant","contains","compareDocumentPosition","goog.dom.compareNodeOrder","node1","node2","DOCUMENT","isElement1","isElement2","sourceIndex","parent1","parent2","goog.dom.compareSiblingOrder_","goog.dom.compareParentsDescendantNodeIe_","range1","createRange","selectNode","collapse","range2","compareBoundaryPoints","START_TO_END","textNode","sibling","ownerDocument","document","goog.dom.getAncestor","element","matcher","steps","opt_document","document_","goog.global.document","getElementsByTagName","goog.dom.DomHelper.prototype.getElementsByTagName","tagName","opt_parent","goog.dom.DomHelper.prototype.getElementsByTagNameAndClass","opt_tag","opt_class","opt_el","querySelectorAll","querySelector","getElementsByClassName","els","arrayLike","len","el","wgxpath.Node.getValueAsString","t","textContent","innerText","text","documentElement","firstChild","stack","nextSibling","wgxpath.Node.attrMatches","name","e","wgxpath.Node.getDescendantNodes","opt_attrName","opt_attrValue","opt_nodeset","func","wgxpath.Node.getDescendantNodesIEPre9_","wgxpath.Node.getDescendantNodesGeneric_","attrName","attrValue","wgxpath.NodeSet","nodeset","wgxpath.NameTest","COMMENT","type_","descendants","wgxpath.Node.getNameFromTestIEPre9_","result","add","wgxpath.Node.doRecursiveAttrMatch_","getElementsByName","nodes","matches","wgxpath.KindTest","getName","wgxpath.Node.getChildNodesIEPre9_","children","childNodes","child","n","wgxpath.Node.getChildNodesGeneric_","current","first_","length_","wgxpath.NodeSet.Entry_","next","prev","wgxpath.NodeSet.merge","a","b","aCurr","bCurr","tail","compareResult","wgxpath.NodeSet.prototype.unshift","entry","wgxpath.NodeSet.prototype.add","wgxpath.NodeSet.prototype.getFirst","first","wgxpath.NodeSet.prototype.string","getFirst","wgxpath.NodeSet.prototype.iterator","opt_reverse","wgxpath.NodeSet.Iterator","reverse","nodeset_","current_","reverse_","lastReturned_","wgxpath.NodeSet.Iterator.prototype.next","lastReturned","wgxpath.Expr","dataType","dataType_","needContextNode_","needContextPosition_","quickAttr_","wgxpath.Expr.indent","join","wgxpath.Expr.prototype.setNeedContextPosition","flag","wgxpath.Expr.prototype.setNeedContextNode","wgxpath.Expr.prototype.asNumber","ctx","exrs","evaluate","string","wgxpath.Expr.prototype.asString","wgxpath.Expr.prototype.asBool","wgxpath.BinaryExpr","op","wgxpath.Expr.call","op_","left_","right_","setNeedContextPosition","setNeedContextNode","wgxpath.BinaryExpr.Op.EQUAL","NODESET","VOID","setQuickAttr","attrInfo","valueExpr","wgxpath.BinaryExpr.compare_","comp","lhs","rhs","opt_equChk","rNode","lIter","iterator","lNode","rIter","primitive","iter","stringValue","wgxpath.BinaryExpr.prototype.evaluate","evaluate_","wgxpath.BinaryExpr.prototype.toString","wgxpath.BinaryExpr.Op_","opString","precedence","opString_","precedence_","wgxpath.BinaryExpr.Op_.prototype.toString","wgxpath.BinaryExpr.stringToOpMap_","wgxpath.BinaryExpr.createOp_","wgxpath.BinaryExpr.stringToOpMap_.hasOwnProperty","DIV","NUMBER","asNumber","MOD","MULT","PLUS","MINUS","LESSTHAN","BOOLEAN","GREATERTHAN","LESSTHAN_EQUAL","GREATERTHAN_EQUAL","EQUAL","NOT_EQUAL","AND","asBool","OR","wgxpath.FilterExpr","primary","predicates","predicates_","primary_","wgxpath.FilterExpr.prototype.evaluate","evaluatePredicates","wgxpath.FilterExpr.prototype.toString","wgxpath.FunctionCall","minArgs_","name_","maxArgs_","nodesetsRequired_","arg","func_","args_","needContextNodeWithoutArgs_","needContextNodeWithArgs_","wgxpath.FunctionCall.prototype.evaluate","wgxpath.FunctionCall.prototype.toString","curr","wgxpath.FunctionCall.Func_","needContextPosition","needContextNodeWithoutArgs","minArgs","opt_maxArgs","opt_nodesetsRequired","wgxpath.FunctionCall.Func_.prototype.toString","wgxpath.FunctionCall.nameToFuncMap_","wgxpath.FunctionCall.createFunc_","wgxpath.FunctionCall.nameToFuncMap_.hasOwnProperty","expr","CEILING","CONCAT","STRING","asString","CONTAINS","expr1","expr2","COUNT","FALSE","FLOOR","ID","idSingle","id","allId","elem","ctxNode","ids","nsArray","ns","LANG","LAST","LOCAL_NAME","opt_expr","NAME","NAMESPACE_URI","NORMALIZE_SPACE","NOT","POSITION","ROUND","STARTS_WITH","lastIndexOf","prefix","STRING_LENGTH","SUBSTRING","opt_expr3","startRaw","isNaN","Infinity","lengthRaw","startInt","SUBSTRING_AFTER","str1","str2","str2Index","SUBSTRING_BEFORE","SUM","TRANSLATE","expr3","str3","ch","translated","TRUE","typeName","opt_literal","typeName_","literal_","TEXT","PROCESSING_INSTRUCTION","wgxpath.KindTest.isValidType","wgxpath.KindTest.prototype.matches","wgxpath.KindTest.prototype.getName","wgxpath.KindTest.prototype.toString","wgxpath.Literal","text_","substring","wgxpath.Literal.prototype.evaluate","wgxpath.Literal.prototype.toString","opt_namespaceUri","defaultNamespace","wgxpath.NameTest.WILDCARD","wgxpath.NameTest.HTML_NAMESPACE_URI_","namespaceUri_","wgxpath.NameTest.prototype.matches","localName","namespaceUri","namespaceURI","wgxpath.NameTest.prototype.getName","wgxpath.NameTest.prototype.toString","wgxpath.Number","value_","wgxpath.Number.prototype.evaluate","wgxpath.Number.prototype.toString","wgxpath.PathExpr","filter_","steps_","firstStep","descendants_","axis_","wgxpath.Step.Axis.ATTRIBUTE","test_","wgxpath.PathExpr.RootHelperExpr","wgxpath.PathExpr.RootHelperExpr.prototype.evaluate","wgxpath.PathExpr.RootHelperExpr.prototype.toString","wgxpath.PathExpr.ContextHelperExpr","wgxpath.PathExpr.ContextHelperExpr.prototype.evaluate","wgxpath.PathExpr.ContextHelperExpr.prototype.toString","wgxpath.PathExpr.isValidOp","token","wgxpath.PathExpr.prototype.evaluate","l0","step","wgxpath.Step.Axis.FOLLOWING","wgxpath.Step.Axis.PRECEDING","wgxpath.PathExpr.prototype.toString","wgxpath.Predicates","wgxpath.Predicates.prototype.evaluatePredicates","opt_start","predicate","j","position","keep","wgxpath.Predicates.prototype.toString","wgxpath.Step","axis","opt_predicates","opt_descendants","getQuickAttr","supportsQuickAttr_","quickAttrInfo","wgxpath.Step.prototype.evaluate","quickAttr","pstart","doesNeedContextPosition","wgxpath.Step.Axis.CHILD","wgxpath.Step.Axis.DESCENDANT_OR_SELF","wgxpath.Step.prototype.evaluate_","wgxpath.Step.prototype.toString","wgxpath.Step.Axis_","supportsQuickAttr","wgxpath.Step.Axis_.prototype.toString","wgxpath.Step.nameToAxisMap_","wgxpath.Step.createAxis_","opt_supportsQuickAttr","wgxpath.Step.nameToAxisMap_.hasOwnProperty","ANCESTOR","ANCESTOR_OR_SELF","toMatch","testName","style","cssText","attrs","CHILD","wgxpath.Node.getChildNodes","DESCENDANT","DESCENDANT_OR_SELF","FOLLOWING","FOLLOWING_SIBLING","NAMESPACE","PARENT","PRECEDING","parents","siblings","l1","PRECEDING_SIBLING","SELF","wgxpath.UnaryExpr","expr_","wgxpath.UnaryExpr.prototype.evaluate","wgxpath.UnaryExpr.prototype.toString","wgxpath.UnionExpr","paths","paths_","p","wgxpath.UnionExpr.prototype.evaluate","wgxpath.UnionExpr.prototype.toString","wgxpath.Parser","lexer","nsResolver","lexer_","nsResolver_","wgxpath.Parser.prototype.parseExpr","checkNotEmpty_","parseUnaryExpr_","getPrecedence","pop","wgxpath.Parser.prototype.checkNotEmpty_","msg","empty","wgxpath.Parser.prototype.checkNextEquals_","expected","got","wgxpath.Parser.prototype.checkNextNotEquals_","wgxpath.Parser.prototype.parseLiteral_","wgxpath.Parser.prototype.parsePathExpr_","peek","filterExpr","parseStep_","parseFilterExpr_","parseExpr","checkNextEquals_","parseLiteral_","funcName","checkNextNotEquals_","parsePredicates_","wgxpath.Parser.prototype.parseStep_","wgxpath.Step.Axis.SELF","wgxpath.Step.Axis.PARENT","axisName","parseKindTest_","literal","parseNameTest_","colonIndex","namespacePrefix","substr","wgxpath.Parser.prototype.parsePredicates_","wgxpath.Parser.prototype.parseUnaryExpr_","parsePathExpr_","parseUnionExpr_","wgxpath.nsResolver.getResolver","wgxpath.nsResolver.resolveForElement_","DOCUMENT_FRAGMENT","DOCUMENT_TYPE","ENTITY","NOTATION","wgxpath.nsResolver.nullResolver_","wgxpath.nsResolver.HTML_NAMESPACE_URI_","getAttributeNode","specified","wgxpath.XPathExpression_","lookupNamespaceURI","gexpr","wgxpath.XPathResult_","ANY_TYPE","UNORDERED_NODE_ITERATOR_TYPE","STRING_TYPE","NUMBER_TYPE","BOOLEAN_TYPE","ORDERED_NODE_ITERATOR_TYPE","UNORDERED_NODE_SNAPSHOT_TYPE","ORDERED_NODE_SNAPSHOT_TYPE","ANY_UNORDERED_NODE_TYPE","FIRST_ORDERED_NODE_TYPE","firstNode","wgxpath.XPathNSResolver_","opt_win","opt_force","win","Document","context","assignAs","module$exports$GM_selenium.GM_selenium","defineProperty","goog.color.names","bot.color.COLOR_PROPERTIES_","bot.color.HEX_TRIPLET_RE_","bot.color.VALID_HEX_COLOR_RE_","bot.color.RGBA_COLOR_RE_","bot.color.RGB_COLOR_RE_","bot.Error","code","opt_message","state","bot.Error.CODE_TO_STATE_","bot.Error.State.UNKNOWN_ERROR","message","template","UNKNOWN_ERROR","ELEMENT_NOT_SELECTABLE","ELEMENT_NOT_VISIBLE","IME_ENGINE_ACTIVATION_FAILED","IME_NOT_AVAILABLE","INVALID_COOKIE_DOMAIN","INVALID_ELEMENT_COORDINATES","INVALID_ELEMENT_STATE","INVALID_SELECTOR_ERROR","INVALID_SELECTOR","INVALID_XPATH_SELECTOR","INVALID_XPATH_SELECTOR_RETURN_TYPE","JAVASCRIPT_ERROR","METHOD_NOT_ALLOWED","UNSUPPORTED_OPERATION","MOVE_TARGET_OUT_OF_BOUNDS","NO_SUCH_ALERT","NO_SUCH_ELEMENT","NO_SUCH_FRAME","NO_SUCH_WINDOW","SCRIPT_TIMEOUT","SESSION_NOT_CREATED","STALE_ELEMENT_REFERENCE","TIMEOUT","UNABLE_TO_SET_COOKIE","UNEXPECTED_ALERT_OPEN","UNKNOWN_COMMAND","goog.userAgent.product.FIREFOX","goog.userAgent.product.IPHONE","goog.userAgent.product.IPAD","goog.userAgent.product.ANDROID","goog.userAgent.product.CHROME","goog.userAgent.product.SAFARI","goog.userAgent.product.getFirstRegExpGroup_","re","goog.userAgent.product.determineVersion_","bot.userAgent.IE_DOC_PRE8","bot.userAgent.IE_DOC_PRE9","bot.dom.core.getAttribute","attributeName","bot.dom.core.standardizeStyleAttribute_","bot.dom.core.isElement","goog.dom.TagName.INPUT","bot.dom.core.SPLIT_STYLE_ATTRIBUTE_ON_SEMICOLONS_REGEXP_","css","styleArray","pair","keyValue","opt_tagName","bot.locators.xpath.DEFAULT_RESOLVER_","namespaces","svg","bot.locators.xpath.evaluate_","path","resultType","parentWindow","defaultView","window","resolver","createNSResolver","reversedNamespaces","allNodes","lookupPrefix","m","te","ex","bot.locators.xpath.checkElement_","bot.locators.xpath.single","target","root","selectSingleNode","singleNodeValue","setProperty","bot.locators.xpath.many","selectNodes","count","snapshotLength","results","snapshotItem","goog.math.Box","top","bottom","goog.math.Box.prototype.ceil","goog.math.Box.prototype.floor","goog.math.Box.prototype.round","goog.math.Rect","w","h","goog.math.Rect.prototype.ceil","goog.math.Rect.prototype.floor","goog.math.Rect.prototype.round","bot.dom.IS_SHADOW_DOM_ENABLED","ShadowRoot","bot.dom.getParentElement","bot.dom.getEffectiveStyle","propertyName","styleName","getComputedStyle","styles","property","getPropertyValue","bot.dom.getCascadedStyle_","regExpResultArray","r","g","hexOrColorName","hex","bot.color.VALID_HEX_COLOR_RE_.test","rgba","propertyValue","currentStyle","bot.dom.isShown_","ignoreOpacity","parentsDisplayedFn","positiveSize","rect","bot.dom.getClientRect","strokeWidth","hiddenByOverflow","bot.dom.getOverflowState","bot.dom.OverflowState.HIDDEN","goog.dom.TagName.BODY","goog.dom.TagName.OPTION","goog.dom.TagName.OPTGROUP","select","goog.dom.TagName.SELECT","imageMap","bot.dom.maybeFindImageMap_","image","goog.dom.TagName.NOSCRIPT","visibility","bot.dom.getOpacity","bot.dom.isShown","displayed","shadowRoot","assignedSlot","getDestinationInsertionPoints","destinations","host","goog.dom.TagName.DETAILS","open","goog.dom.TagName.SUMMARY","HIDDEN","getOverflowParent","canBeOverflowed","container","htmlElem","containerDisplay","treatAsFixedPosition","getOverflowStyles","overflowElem","htmlOverflowStyle","bodyElem","overflow","getScroll","scrollingElement","compatMode","body","pageYOffset","scrollTop","scrollLeft","pageXOffset","region","bot.dom.getClientRegion","ownerDoc","containerOverflow","containerRect","underflowsX","underflowsY","containerScroll","unscrollableY","containerState","SCROLL","overflowsX","overflowsY","docScroll","scrollWidth","scrollHeight","NONE","goog.dom.TagName.HTML","opt_window","clientWidth","clientHeight","viewportSize","nativeRect","getBoundingClientRect","clientLeft","clientTop","isMap","goog.dom.TagName.MAP","goog.dom.TagName.AREA","mapDoc","shape","relRect","bot.dom.getAreaRelativeRect_","relX","min","relY","area","coords","radius","centerX","centerY","minX","minY","maxX","maxY","toBox","bot.dom.trimExcludingNonBreakingSpaceCharacters_","bot.dom.appendVisibleTextLinesFromElementCommon_","lines","childNodeFn","goog.dom.TagName.BR","isTD","goog.dom.TagName.TD","display","isBlock","bot.dom.INLINE_DISPLAY_BOXES_","previousElementSibling","prevDisplay","thisFloat","shown","whitespace","textTransform","line","bot.dom.appendVisibleTextLinesFromElement_","bot.dom.appendVisibleTextLinesFromTextNode_","currLine","opacityStyle","groups","bot.dom.getOpacityNonIE_","elemOpacity","parentElement","bot.dom.appendVisibleTextLinesFromNodeInComposedDom_","shadowChildren","getDistributedNodes","assignedNodes","bot.dom.appendVisibleTextLinesFromElementInComposedDom_","thisShadowRoot","olderShadowRoot","childNode","elemOrText","bot.locators.css.many","bot.locators.id.many","elements","getElementsByTagNameAndClass","dom","bot.locators.linkText.many_","opt_isPartial","goog.dom.TagName.A","trimmed","joined","bot.locators.name.many","allElements","module$exports$webdriver$by.By","using","findElements","publicName","xpath","partialLinkText","nameAttribute","linkText","selector","module$exports$webdriver$error.WebDriverError","opt_error","module$exports$webdriver$error.TimeoutError","module$exports$webdriver.Condition","module$exports$webdriver.ElementCondition","module$exports$webdriver.ElementPromise","then","resolveWaitMessage","locator","Element","item","exports","elementLocated","locatorStr","elementsLocated","elementIsVisible","elementIsNotVisible","wait","evaluateCondition","Promise","resolve","reject","input","condition","timeout","pollTimeout","TypeError","Date","now","timer","setTimeout","timeoutMessage","clearTimer","clearTimeout","error","pResult","startTime","pollCondition","elapsed","until"]
}
